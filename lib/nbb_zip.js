import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
const shadow_esm_import = function(x) { return import(x) };
var uY=function(a,b,c,d){return $APP.Wd(new $APP.H(null,2,5,$APP.I,[d,null],null),new $APP.k(null,3,[JOa,a,KOa,b,LOa,c],null))},vY=function(a){return a.g?a.g(0):a.call(null,0)},wY=function(a){var b=vY(a);a=JOa.g($APP.Xd(a));return a.g?a.g(b):a.call(null,b)},xY=function(a){if($APP.l(wY(a))){var b=vY(a);a=KOa.g($APP.Xd(a));return a.g?a.g(b):a.call(null,b)}throw"called children on a leaf node";},zY=function(a,b,c){a=LOa.g($APP.Xd(a));return a.h?a.h(b,c):a.call(null,b,c)},EY=function(a){if($APP.l(wY(a))){var b=
$APP.A.j(a,0,null),c=$APP.A.j(a,1,null),d=xY(a),e=$APP.u(d),f=$APP.v(e);e=$APP.y(e);return $APP.l(d)?$APP.Wd(new $APP.H(null,2,5,$APP.I,[f,new $APP.k(null,4,[AY,$APP.qg,BY,$APP.l(c)?$APP.We.h(BY.g(c),b):new $APP.H(null,1,5,$APP.I,[b],null),CY,c,DY,e],null)],null),$APP.Xd(a)):null}return null},GY=function(a){var b=$APP.A.j(a,0,null),c=$APP.A.j(a,1,null),d=$APP.xf(c);c=$APP.D.h(d,AY);var e=$APP.D.h(d,CY),f=$APP.D.h(d,BY),h=$APP.D.h(d,DY);d=$APP.D.h(d,FY);return $APP.l(f)?(f=$APP.Yd(f),$APP.Wd($APP.l(d)?
new $APP.H(null,2,5,$APP.I,[zY(a,f,$APP.K.h(c,$APP.$e(b,h))),$APP.l(e)?$APP.$h.j(e,FY,!0):e],null):new $APP.H(null,2,5,$APP.I,[f,e],null),$APP.Xd(a))):null},HY=function(a){var b=$APP.A.j(a,0,null),c=$APP.A.j(a,1,null);c=$APP.xf(c);var d=$APP.D.h(c,AY),e=$APP.D.h(c,DY),f=$APP.u(e),h=$APP.v(f);f=$APP.y(f);return $APP.l($APP.l(c)?e:c)?$APP.Wd(new $APP.H(null,2,5,$APP.I,[h,$APP.$h.l(c,AY,$APP.We.h(d,b),$APP.C([DY,f]))],null),$APP.Xd(a)):null},IY=function(a){var b=$APP.A.j(a,0,null),c=$APP.A.j(a,1,null);
c=$APP.xf(c);var d=$APP.D.h(c,AY),e=$APP.D.h(c,DY);return $APP.l($APP.l(c)?e:c)?$APP.Wd(new $APP.H(null,2,5,$APP.I,[$APP.Rd(e),$APP.$h.l(c,AY,$APP.Xf.F($APP.We,d,b,$APP.ii(e)),$APP.C([DY,null]))],null),$APP.Xd(a)):a},MOa=function(a){var b=$APP.A.j(a,0,null),c=$APP.A.j(a,1,null);c=$APP.xf(c);var d=$APP.D.h(c,AY),e=$APP.D.h(c,DY);return $APP.l($APP.l(c)?$APP.u(d):c)?$APP.Wd(new $APP.H(null,2,5,$APP.I,[$APP.Yd(d),$APP.$h.l(c,AY,$APP.Zd(d),$APP.C([DY,$APP.$e(b,e)]))],null),$APP.Xd(a)):null},JY=function(a,
b){$APP.A.j(a,0,null);var c=$APP.A.j(a,1,null);return $APP.Wd(new $APP.H(null,2,5,$APP.I,[b,$APP.$h.j(c,FY,!0)],null),$APP.Xd(a))},KY=new $APP.t(null,"make-node","make-node",-1550461835,null),NOa=new $APP.t("clojure.zip","append-child","clojure.zip/append-child",-1333956306,null),OOa=new $APP.t(null,"insert-right","insert-right",1842751767,null),POa=new $APP.t("clojure.zip","insert-child","clojure.zip/insert-child",-210602132,null),QOa=new $APP.t("clojure.zip","end?","clojure.zip/end?",381053413,
null),ROa=new $APP.t(null,"insert-left","insert-left",1917369949,null),SOa=new $APP.t(null,"lefts","lefts",1054400638,null),TOa=new $APP.t("clojure.zip","node","clojure.zip/node",-1345203614,null),UOa=new $APP.t("clojure.zip","edit","clojure.zip/edit",-442418038,null),VOa=new $APP.t("clojure.zip","zipper","clojure.zip/zipper",-571036006,null),LY=new $APP.t(null,"item","item",1889905329,null),WOa=new $APP.t("clojure.zip","next","clojure.zip/next",-1526224397,null),KOa=new $APP.G("zip","children","zip/children",
-940194589),XOa=new $APP.t(null,"up","up",1370819414,null),YOa=new $APP.t("clojure.zip","branch?","clojure.zip/branch?",-1006947869,null),ZOa=new $APP.t("clojure.zip","up","clojure.zip/up",1006365229,null),$Oa=new $APP.t("clojure.zip","children","clojure.zip/children",65376544,null),aPa=new $APP.t("clojure.zip","leftmost","clojure.zip/leftmost",-1791272498,null),bPa=new $APP.t(null,"leftmost","leftmost",-1158121305,null),BY=new $APP.G(null,"pnodes","pnodes",1739080565),cPa=new $APP.t(null,"xml-zip",
"xml-zip",-1566989793,null),dPa=new $APP.t("clojure.zip","replace","clojure.zip/replace",413367034,null),ePa=new $APP.t(null,"end?","end?",217139918,null),fPa=new $APP.t("clojure.zip","path","clojure.zip/path",1758958974,null),gPa=new $APP.t("clojure.zip","rightmost","clojure.zip/rightmost",1799140158,null),hPa=new $APP.t("clojure.zip","xml-zip","clojure.zip/xml-zip",-925187274,null),iPa=new $APP.t("clojure.zip","down","clojure.zip/down",1356031458,null),jPa=new $APP.G(null,"content","content",15833224),
LOa=new $APP.G("zip","make-node","zip/make-node",1103800591),kPa=new $APP.t("clojure.zip","seq-zip","clojure.zip/seq-zip",-395973642,null),lPa=new $APP.t("clojure.zip","prev","clojure.zip/prev",-389017676,null),mPa=new $APP.t("clojure.zip","insert-right","clojure.zip/insert-right",194316302,null),nPa=new $APP.t("clojure.zip","vector-zip","clojure.zip/vector-zip",986730862,null),FY=new $APP.G(null,"changed?","changed?",-437828330),oPa=new $APP.t(null,"zipper","zipper",-1153741331,null),pPa=new $APP.t("clojure.zip",
"left","clojure.zip/left",1740332703,null),qPa=new $APP.t(null,"append-child","append-child",-1707191801,null),rPa=new $APP.t("clojure.zip","root","clojure.zip/root",-1119588559,null),sPa=new $APP.t(null,"vector-zip","vector-zip",1075131029,null),tPa=new $APP.t(null,"insert-child","insert-child",347166277,null),uPa=new $APP.t("clojure.zip","remove","clojure.zip/remove",859584278,null),vPa=new $APP.t("clojure.zip","insert-left","clojure.zip/insert-left",1476893044,null),wPa=new $APP.t(null,"rightmost",
"rightmost",-1854156251,null),xPa=new $APP.t("clojure.zip","rights","clojure.zip/rights",1361118051,null),yPa=new $APP.t("clojure.zip","make-node","clojure.zip/make-node",-640223892,null),zPa=new $APP.t(null,"seq-zip","seq-zip",-2034709283,null),APa=new $APP.t(null,"down","down",-1089190199,null),BPa=new $APP.t(null,"rights","rights",2003591322,null),DY=new $APP.G(null,"r","r",-471384190),AY=new $APP.G(null,"l","l",1395893423),CPa=new $APP.t("clojure.zip","right","clojure.zip/right",-1593586409,null),
CY=new $APP.G(null,"ppath","ppath",-1758182784),MY=new $APP.t(null,"loc","loc",1056246626,null),JOa=new $APP.G("zip","branch?","zip/branch?",-998880862),DPa=new $APP.t("clojure.zip","lefts","clojure.zip/lefts",538689815,null);var NY=function NY(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return NY.l(arguments[0],arguments[1],2<c.length?new $APP.jd(c.slice(2),0,null):null)};NY.l=function(a,b,c){return JY(a,$APP.Xf.j(b,vY(a),c))};NY.A=2;NY.G=function(a){var b=$APP.v(a),c=$APP.y(a);a=$APP.v(c);c=$APP.y(c);return this.l(b,a,c)};var EPa=$APP.GO.h($APP.jK,null),FPa=$APP.nt($APP.Ih([$APP.Wd(oPa,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,4,5,$APP.I,[$APP.NF,$APP.jE,KY,$APP.NI],null))),$APP.N,"Creates a new zipper structure. \n\n  branch? is a fn that, given a node, returns true if can have\n  children, even if it currently doesn't.\n\n  children is a fn that, given a branch node, returns a seq of its\n  children.\n\n  make-node is a fn that, given an existing node and a seq of\n  children, returns a new branch node with the supplied children.\n  root is the root node."],
null)),$APP.Wd(XOa,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null))),$APP.N,"Returns the loc of the parent of the node at this loc, or nil if at\n  the top"],null)),$APP.Wd($APP.Kva,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null))),$APP.N,"Moves to the previous loc in the hierarchy, depth-first. If already\n  at the root, returns nil."],null)),$APP.Wd(OOa,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,2,5,
$APP.I,[MY,LY],null))),$APP.N,"Inserts the item as the right sibling of the node at this loc,\n  without moving"],null)),$APP.Wd(ROa,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,2,5,$APP.I,[MY,LY],null))),$APP.N,"Inserts the item as the left sibling of the node at this loc,\n without moving"],null)),$APP.Wd(ePa,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null))),$APP.N,"Returns true if loc represents the end of a depth-first walk"],null)),$APP.Wd($APP.kB,
new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null))),$APP.N,"Returns the node at loc"],null)),$APP.Wd($APP.qL,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,2,5,$APP.I,[MY,$APP.kB],null))),$APP.N,"Replaces the node at this loc, without moving"],null)),$APP.Wd($APP.soa,new $APP.k(null,3,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,4,5,$APP.I,[MY,$APP.fH,$APP.Kj,$APP.pA],null))),$APP.N,"Replaces the node at this loc with the value of (f node args)",
$APP.cI,new $APP.k(null,6,[$APP.wx,!0,$APP.Ur,2,$APP.DK,2,$APP.UJ,new $APP.H(null,1,5,$APP.I,[$APP.J(MY,$APP.fH,$APP.pA)],null),$APP.Z,$APP.J(new $APP.H(null,4,5,$APP.I,[MY,$APP.fH,$APP.Kj,$APP.pA],null)),$APP.CC,$APP.J(null)],null)],null)),$APP.Wd(zPa,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.NI],null))),$APP.N,"Returns a zipper for nested sequences, given a root sequence"],null)),$APP.Wd($APP.nI,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,
1,5,$APP.I,[MY],null))),$APP.N,"Moves to the next loc in the hierarchy, depth-first. When reaching\n  the end, returns a distinguished loc detectable via end?. If already\n  at the end, stays there."],null)),$APP.Wd(cPa,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.NI],null))),$APP.N,"Returns a zipper for xml elements (as from xml/parse),\n  given a root element"],null)),$APP.Wd(sPa,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.NI],
null))),$APP.N,"Returns a zipper for nested vectors, given a root vector"],null)),$APP.Wd(KY,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,3,5,$APP.I,[MY,$APP.kB,$APP.jE],null))),$APP.N,"Returns a new branch node, given an existing node and new\n  children. The loc is only used to supply the constructor."],null)),$APP.Wd($APP.NF,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null))),$APP.N,"Returns true if the node at loc is a branch"],null)),$APP.Wd($APP.Rma,
new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null))),$APP.N,"Returns the loc of the right sibling of the node at this loc, or nil"],null)),$APP.Wd($APP.Vua,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null))),$APP.N,"Returns a seq of nodes leading to this loc"],null)),$APP.Wd($APP.NI,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null))),$APP.N,"zips all the way up and returns the root node, reflecting any\n changes."],
null)),$APP.Wd(BPa,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null))),$APP.N,"Returns a seq of the right siblings of this loc"],null)),$APP.Wd($APP.jE,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null))),$APP.N,"Returns a seq of the children of node at loc, which must be a branch"],null)),$APP.Wd(bPa,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null))),$APP.N,"Returns the loc of the leftmost sibling of the node at this loc, or self"],
null)),$APP.Wd(APa,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null))),$APP.N,"Returns the loc of the leftmost child of the node at this loc, or\n  nil if no children"],null)),$APP.Wd($APP.rta,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null))),$APP.N,"Returns the loc of the left sibling of the node at this loc, or nil"],null)),$APP.Wd(SOa,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null))),
$APP.N,"Returns a seq of the left siblings of this loc"],null)),$APP.Wd(tPa,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,2,5,$APP.I,[MY,LY],null))),$APP.N,"Inserts the item as the leftmost child of the node at this loc,\n  without moving"],null)),$APP.Wd(qPa,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,2,5,$APP.I,[MY,LY],null))),$APP.N,"Inserts the item as the rightmost child of the node at this loc,\n  without moving"],null)),$APP.Wd(wPa,new $APP.k(null,2,[$APP.Z,
$APP.J($APP.Zj,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null))),$APP.N,"Returns the loc of the rightmost sibling of the node at this loc, or self"],null)),$APP.Wd($APP.vx,new $APP.k(null,2,[$APP.Z,$APP.J($APP.Zj,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null))),$APP.N,"Removes the node at loc, returning the loc that would have preceded\n  it in a depth-first walk."],null))],[new $APP.k(null,3,[$APP.O,VOa,$APP.mt,uY,$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,4,5,$APP.I,[$APP.NF,$APP.jE,KY,
$APP.NI],null)),$APP.N,"Creates a new zipper structure. \n\n  branch? is a fn that, given a node, returns true if can have\n  children, even if it currently doesn't.\n\n  children is a fn that, given a branch node, returns a seq of its\n  children.\n\n  make-node is a fn that, given an existing node and a seq of\n  children, returns a new branch node with the supplied children.\n  root is the root node."],null)],null),new $APP.k(null,3,[$APP.O,ZOa,$APP.mt,GY,$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,
1,5,$APP.I,[MY],null)),$APP.N,"Returns the loc of the parent of the node at this loc, or nil if at\n  the top"],null)],null),new $APP.k(null,3,[$APP.O,lPa,$APP.mt,function(a){var b=MOa(a);if($APP.l(b))for(a=b;;)if(b=wY(a),b=$APP.l(b)?EY(a):b,$APP.l(b))a=IY(b);else return a;else return GY(a)},$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null)),$APP.N,"Moves to the previous loc in the hierarchy, depth-first. If already\n  at the root, returns nil."],null)],null),new $APP.k(null,
3,[$APP.O,mPa,$APP.mt,function(a,b){var c=$APP.A.j(a,0,null),d=$APP.A.j(a,1,null);d=$APP.xf(d);var e=$APP.D.h(d,DY);if(null==d)throw"Insert at top";return $APP.Wd(new $APP.H(null,2,5,$APP.I,[c,$APP.$h.l(d,DY,$APP.$e(b,e),$APP.C([FY,!0]))],null),$APP.Xd(a))},$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,2,5,$APP.I,[MY,LY],null)),$APP.N,"Inserts the item as the right sibling of the node at this loc,\n  without moving"],null)],null),new $APP.k(null,3,[$APP.O,vPa,$APP.mt,function(a,b){var c=
$APP.A.j(a,0,null),d=$APP.A.j(a,1,null);d=$APP.xf(d);var e=$APP.D.h(d,AY);if(null==d)throw"Insert at top";return $APP.Wd(new $APP.H(null,2,5,$APP.I,[c,$APP.$h.l(d,AY,$APP.We.h(e,b),$APP.C([FY,!0]))],null),$APP.Xd(a))},$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,2,5,$APP.I,[MY,LY],null)),$APP.N,"Inserts the item as the left sibling of the node at this loc,\n without moving"],null)],null),new $APP.k(null,3,[$APP.O,QOa,$APP.mt,function(a){return $APP.z.h($APP.BE,a.g?a.g(1):a.call(null,1))},
$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null)),$APP.N,"Returns true if loc represents the end of a depth-first walk"],null)],null),new $APP.k(null,3,[$APP.O,TOa,$APP.mt,vY,$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null)),$APP.N,"Returns the node at loc"],null)],null),new $APP.k(null,3,[$APP.O,dPa,$APP.mt,JY,$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,2,5,$APP.I,[MY,$APP.kB],null)),$APP.N,"Replaces the node at this loc, without moving"],
null)],null),new $APP.k(null,3,[$APP.O,UOa,$APP.mt,NY,$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,4,5,$APP.I,[MY,$APP.fH,$APP.Kj,$APP.pA],null)),$APP.N,"Replaces the node at this loc with the value of (f node args)"],null)],null),new $APP.k(null,3,[$APP.O,kPa,$APP.mt,function(a){return uY($APP.ne,$APP.He,function(b,c){return $APP.Wd(c,$APP.Xd(b))},a)},$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.NI],null)),$APP.N,"Returns a zipper for nested sequences, given a root sequence"],
null)],null),new $APP.k(null,3,[$APP.O,WOa,$APP.mt,function(a){if($APP.z.h($APP.BE,a.g?a.g(1):a.call(null,1)))return a;var b=wY(a);b=$APP.l(b)?EY(a):b;if($APP.l(b))return b;b=HY(a);if($APP.l(b))return b;for(;;)if($APP.l(GY(a))){b=HY(GY(a));if($APP.l(b))return b;a=GY(a)}else return new $APP.H(null,2,5,$APP.I,[vY(a),$APP.BE],null)},$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null)),$APP.N,"Moves to the next loc in the hierarchy, depth-first. When reaching\n  the end, returns a distinguished loc detectable via end?. If already\n  at the end, stays there."],
null)],null),new $APP.k(null,3,[$APP.O,hPa,$APP.mt,function(a){return uY($APP.Yf($APP.qaa),$APP.tp.h($APP.u,jPa),function(b,c){return $APP.$h.j(b,jPa,$APP.l(c)?$APP.Xf.h($APP.rv,c):c)},a)},$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.NI],null)),$APP.N,"Returns a zipper for xml elements (as from xml/parse),\n  given a root element"],null)],null),new $APP.k(null,3,[$APP.O,nPa,$APP.mt,function(a){return uY($APP.ie,$APP.u,function(b,c){return $APP.Wd($APP.Fe(c),$APP.Xd(b))},
a)},$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.NI],null)),$APP.N,"Returns a zipper for nested vectors, given a root vector"],null)],null),new $APP.k(null,3,[$APP.O,yPa,$APP.mt,zY,$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,3,5,$APP.I,[MY,$APP.kB,$APP.jE],null)),$APP.N,"Returns a new branch node, given an existing node and new\n  children. The loc is only used to supply the constructor."],null)],null),new $APP.k(null,3,[$APP.O,YOa,$APP.mt,wY,$APP.Ta,new $APP.k(null,
2,[$APP.Z,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null)),$APP.N,"Returns true if the node at loc is a branch"],null)],null),new $APP.k(null,3,[$APP.O,CPa,$APP.mt,HY,$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null)),$APP.N,"Returns the loc of the right sibling of the node at this loc, or nil"],null)],null),new $APP.k(null,3,[$APP.O,fPa,$APP.mt,function(a){return BY.g(a.g?a.g(1):a.call(null,1))},$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null)),
$APP.N,"Returns a seq of nodes leading to this loc"],null)],null),new $APP.k(null,3,[$APP.O,rPa,$APP.mt,function(a){for(;;){if($APP.z.h($APP.BE,a.g?a.g(1):a.call(null,1)))return vY(a);var b=GY(a);if($APP.l(b))a=b;else return vY(a)}},$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null)),$APP.N,"zips all the way up and returns the root node, reflecting any\n changes."],null)],null),new $APP.k(null,3,[$APP.O,xPa,$APP.mt,function(a){return DY.g(a.g?a.g(1):a.call(null,1))},$APP.Ta,
new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null)),$APP.N,"Returns a seq of the right siblings of this loc"],null)],null),new $APP.k(null,3,[$APP.O,$Oa,$APP.mt,xY,$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null)),$APP.N,"Returns a seq of the children of node at loc, which must be a branch"],null)],null),new $APP.k(null,3,[$APP.O,aPa,$APP.mt,function(a){var b=$APP.A.j(a,0,null),c=$APP.A.j(a,1,null);c=$APP.xf(c);var d=$APP.D.h(c,AY),e=$APP.D.h(c,DY);
return $APP.l($APP.l(c)?$APP.u(d):c)?$APP.Wd(new $APP.H(null,2,5,$APP.I,[$APP.v(d),$APP.$h.l(c,AY,$APP.qg,$APP.C([DY,$APP.K.l($APP.nd(d),new $APP.H(null,1,5,$APP.I,[b],null),$APP.C([e]))]))],null),$APP.Xd(a)):a},$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null)),$APP.N,"Returns the loc of the leftmost sibling of the node at this loc, or self"],null)],null),new $APP.k(null,3,[$APP.O,iPa,$APP.mt,EY,$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],
null)),$APP.N,"Returns the loc of the leftmost child of the node at this loc, or\n  nil if no children"],null)],null),new $APP.k(null,3,[$APP.O,pPa,$APP.mt,MOa,$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null)),$APP.N,"Returns the loc of the left sibling of the node at this loc, or nil"],null)],null),new $APP.k(null,3,[$APP.O,DPa,$APP.mt,function(a){return $APP.u(AY.g(a.g?a.g(1):a.call(null,1)))},$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],
null)),$APP.N,"Returns a seq of the left siblings of this loc"],null)],null),new $APP.k(null,3,[$APP.O,POa,$APP.mt,function(a,b){return JY(a,zY(a,vY(a),$APP.$e(b,xY(a))))},$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,2,5,$APP.I,[MY,LY],null)),$APP.N,"Inserts the item as the leftmost child of the node at this loc,\n  without moving"],null)],null),new $APP.k(null,3,[$APP.O,NOa,$APP.mt,function(a,b){return JY(a,zY(a,vY(a),$APP.K.h(xY(a),new $APP.H(null,1,5,$APP.I,[b],null))))},$APP.Ta,new $APP.k(null,
2,[$APP.Z,$APP.J(new $APP.H(null,2,5,$APP.I,[MY,LY],null)),$APP.N,"Inserts the item as the rightmost child of the node at this loc,\n  without moving"],null)],null),new $APP.k(null,3,[$APP.O,gPa,$APP.mt,IY,$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null)),$APP.N,"Returns the loc of the rightmost sibling of the node at this loc, or self"],null)],null),new $APP.k(null,3,[$APP.O,uPa,$APP.mt,function(a){$APP.A.j(a,0,null);var b=$APP.A.j(a,1,null);b=$APP.xf(b);var c=$APP.D.h(b,
AY),d=$APP.D.h(b,CY),e=$APP.D.h(b,BY),f=$APP.D.h(b,DY);if(null==b)throw"Remove at top";if(0<$APP.Gd(c))for(a=$APP.Wd(new $APP.H(null,2,5,$APP.I,[$APP.Yd(c),$APP.$h.l(b,AY,$APP.Zd(c),$APP.C([FY,!0]))],null),$APP.Xd(a));;)if(b=wY(a),b=$APP.l(b)?EY(a):b,$APP.l(b))a=IY(b);else return a;else return $APP.Wd(new $APP.H(null,2,5,$APP.I,[zY(a,$APP.Yd(e),f),$APP.l(d)?$APP.$h.j(d,FY,!0):d],null),$APP.Xd(a))},$APP.Ta,new $APP.k(null,2,[$APP.Z,$APP.J(new $APP.H(null,1,5,$APP.I,[MY],null)),$APP.N,"Removes the node at loc, returning the loc that would have preceded\n  it in a depth-first walk."],
null)],null)]),EPa);$APP.$t(new $APP.k(null,1,[$APP.Mp,new $APP.k(null,1,[$APP.jK,FPa],null)],null));