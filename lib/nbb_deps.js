import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
const shadow_esm_import = function(x) { return import(x) };
import*as esm_import$node_crypto from"node:crypto";import*as esm_import$node_fs from"node:fs";import*as esm_import$node_path from"node:path";import*as esm_import$node_child_process from"node:child_process";var cMa=new $APP.F(null,"deps","deps",1883360319);var dMa=$APP.B.h($APP.n($APP.qN),$APP.tJ),eMa=esm_import$node_path.resolve(dMa,".nbb",".cache"),fMa=$APP.tp.h($APP.n($APP.qN),new $APP.G(null,2,5,$APP.H,[$APP.FB,cMa],null));
if($APP.k(fMa)){var gMa;gMa=esm_import$node_crypto.createHash("sha1").update($APP.l.g(fMa),"binary").digest("hex");var UO=esm_import$node_path.resolve(eMa,gMa),hMa=esm_import$node_path.resolve(UO,"deps.edn"),iMa=esm_import$node_path.resolve(UO,"nbb-deps.jar"),jMa=esm_import$node_path.resolve(UO,"nbb-deps");if(!$APP.k(esm_import$node_fs.existsSync(jMa))){var kMa=($APP.x.h("win32",process.platform),"bb"),lMa=esm_import$node_path.resolve(eMa,"extract.bb");esm_import$node_fs.mkdirSync(UO,{recursive:!0});
esm_import$node_fs.writeFileSync(hMa,$APP.l.g(new $APP.h(null,1,[cMa,fMa],null)));$APP.vb.call(null,"Downloading dependencies...");esm_import$node_child_process.execSync([kMa," --config ",$APP.l.g(hMa)," --deps-root ",$APP.l.g(dMa)," uberjar ",$APP.l.g(iMa)].join(""));$APP.vb.call(null,"Extracting dependencies...");esm_import$node_fs.writeFileSync(lMa,["(fs/unzip ",$APP.xj.l($APP.z([iMa]))," ",$APP.xj.l($APP.z([jMa])),")"].join(""));esm_import$node_child_process.execSync(["bb ",$APP.l.g(lMa)].join(""));
esm_import$node_fs.unlinkSync(lMa);$APP.vb.call(null,"Done.")}$APP.Bp(jMa)};