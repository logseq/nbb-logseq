import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
const shadow_esm_import = function(x) { return import(x) };
import*as esm_import$fs from"fs";import*as esm_import$crypto from"crypto";import*as esm_import$child_process from"child_process";import*as esm_import$path from"path";var yIa=new $APP.k(null,"deps","deps",1883360319);var sIa=$APP.gf.h($APP.q($APP.hN),$APP.aJ),tIa=esm_import$path.resolve(sIa,".nbb",".cache"),uIa=$APP.vp.h($APP.q($APP.hN),new $APP.H(null,2,5,$APP.I,[$APP.zD,yIa],null));
if($APP.m(uIa)){var vIa;vIa=esm_import$crypto.createHash("sha1").update($APP.n.g(uIa),"binary").digest("hex");var uG=esm_import$path.resolve(tIa,vIa),wIa=esm_import$path.resolve(uG,"deps.edn"),xIa=esm_import$path.resolve(uG,"nbb-deps.jar"),zIa=esm_import$path.resolve(uG,"nbb-deps");if(!$APP.m(esm_import$fs.existsSync(zIa))){var AIa=($APP.B.h("win32",process.platform),"bb"),QKa=esm_import$path.resolve(tIa,"extract.bb");esm_import$fs.mkdirSync(uG,{recursive:!0});esm_import$fs.writeFileSync(wIa,$APP.n.g(new $APP.g(null,
1,[yIa,uIa],null)));$APP.jb.call(null,"Downloading dependencies...");esm_import$child_process.execSync([AIa," --config ",$APP.n.g(wIa)," --deps-root ",$APP.n.g(sIa)," uberjar ",$APP.n.g(xIa)].join(""));$APP.jb.call(null,"Extracting dependencies...");esm_import$fs.writeFileSync(QKa,["(fs/unzip ",$APP.yl.l($APP.F([xIa]))," ",$APP.yl.l($APP.F([zIa])),")"].join(""));esm_import$child_process.execSync(["bb ",$APP.n.g(QKa)].join(""));esm_import$fs.unlinkSync(QKa);$APP.jb.call(null,"Done.")}$APP.Jn(zIa)};