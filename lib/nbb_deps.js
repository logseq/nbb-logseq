import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
const shadow_esm_import = function(x) { return import(x) };
import*as esm_import$node_crypto from"node:crypto";import*as esm_import$node_fs from"node:fs";import*as esm_import$node_path from"node:path";import*as esm_import$node_child_process from"node:child_process";var yKa=new $APP.F(null,"deps","deps",1883360319);var zKa=$APP.C.h($APP.n($APP.KO),$APP.TK),AKa=esm_import$node_path.resolve(zKa,".nbb",".cache"),BKa=$APP.rp.h($APP.n($APP.KO),new $APP.H(null,2,5,$APP.I,[$APP.AB,yKa],null));
if($APP.k(BKa)){var CKa;CKa=esm_import$node_crypto.createHash("sha1").update($APP.m.g(BKa),"binary").digest("hex");var sQ=esm_import$node_path.resolve(AKa,CKa),DKa=esm_import$node_path.resolve(sQ,"deps.edn"),EKa=esm_import$node_path.resolve(sQ,"nbb-deps.jar"),FKa=esm_import$node_path.resolve(sQ,"nbb-deps");if(!$APP.k(esm_import$node_fs.existsSync(FKa))){var GKa=($APP.x.h("win32",process.platform),"bb"),HKa=esm_import$node_path.resolve(AKa,"extract.bb");esm_import$node_fs.mkdirSync(sQ,{recursive:!0});
esm_import$node_fs.writeFileSync(DKa,$APP.m.g(new $APP.h(null,1,[yKa,BKa],null)));$APP.vb.call(null,"Downloading dependencies...");esm_import$node_child_process.execSync([GKa," --config ",$APP.m.g(DKa)," --deps-root ",$APP.m.g(zKa)," uberjar ",$APP.m.g(EKa)].join(""));$APP.vb.call(null,"Extracting dependencies...");esm_import$node_fs.writeFileSync(HKa,["(fs/unzip ",$APP.yj.l($APP.z([EKa]))," ",$APP.yj.l($APP.z([FKa])),")"].join(""));esm_import$node_child_process.execSync(["bb ",$APP.m.g(HKa)].join(""));
esm_import$node_fs.unlinkSync(HKa);$APP.vb.call(null,"Done.")}$APP.zp(FKa)};