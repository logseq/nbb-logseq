import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
const shadow_esm_import = function(x) { return import(x) };
import*as esm_import$node_crypto from"node:crypto";import*as esm_import$node_fs from"node:fs";import*as esm_import$node_path from"node:path";import*as esm_import$node_child_process from"node:child_process";var NFa=new $APP.G(null,"deps","deps",1883360319);var OFa=$APP.C.h($APP.p($APP.AS),$APP.DN),PFa=esm_import$node_path.resolve(OFa,".nbb",".cache"),QFa=$APP.rp.h($APP.p($APP.AS),new $APP.H(null,2,5,$APP.I,[$APP.bB,NFa],null));
if($APP.l(QFa)){var RFa;RFa=esm_import$node_crypto.createHash("sha1").update($APP.m.g(QFa),"binary").digest("hex");var cU=esm_import$node_path.resolve(PFa,RFa),SFa=esm_import$node_path.resolve(cU,"deps.edn"),TFa=esm_import$node_path.resolve(cU,"nbb-deps.jar"),UFa=esm_import$node_path.resolve(cU,"nbb-deps");if(!$APP.l(esm_import$node_fs.existsSync(UFa))){var VFa=($APP.y.h("win32",process.platform),"bb"),WFa=esm_import$node_path.resolve(PFa,"extract.bb");esm_import$node_fs.mkdirSync(cU,{recursive:!0});
esm_import$node_fs.writeFileSync(SFa,$APP.m.g(new $APP.k(null,1,[NFa,QFa],null)));$APP.wb.call(null,"Downloading dependencies...");esm_import$node_child_process.execSync([VFa," --config ",$APP.m.g(SFa)," --deps-root ",$APP.m.g(OFa)," uberjar ",$APP.m.g(TFa)].join(""));$APP.wb.call(null,"Extracting dependencies...");esm_import$node_fs.writeFileSync(WFa,["(fs/unzip ",$APP.zj.l($APP.B([TFa]))," ",$APP.zj.l($APP.B([UFa])),")"].join(""));esm_import$node_child_process.execSync(["bb ",$APP.m.g(WFa)].join(""));
esm_import$node_fs.unlinkSync(WFa);$APP.wb.call(null,"Done.")}$APP.xp(UFa)};