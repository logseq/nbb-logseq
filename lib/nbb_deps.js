import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
const shadow_esm_import = function(x) { return import(x) };
import*as esm_import$fs from"fs";import*as esm_import$crypto from"crypto";import*as esm_import$child_process from"child_process";import*as esm_import$path from"path";var aIa=new $APP.k(null,"deps","deps",1883360319);var bIa=$APP.gf.h($APP.q($APP.hN),$APP.uI),cIa=esm_import$path.resolve(bIa,".nbb",".cache"),dIa=$APP.vp.h($APP.q($APP.hN),new $APP.H(null,2,5,$APP.I,[$APP.lD,aIa],null));
if($APP.m(dIa)){var eIa;eIa=esm_import$crypto.createHash("sha1").update($APP.n.g(dIa),"binary").digest("hex");var JJ=esm_import$path.resolve(cIa,eIa),fIa=esm_import$path.resolve(JJ,"deps.edn"),gIa=esm_import$path.resolve(JJ,"nbb-deps.jar"),hIa=esm_import$path.resolve(JJ,"nbb-deps");if(!$APP.m(esm_import$fs.existsSync(hIa))){var iIa=($APP.B.h("win32",process.platform),"bb"),jIa=esm_import$path.resolve(cIa,"extract.bb");esm_import$fs.mkdirSync(JJ,{recursive:!0});esm_import$fs.writeFileSync(fIa,$APP.n.g(new $APP.g(null,
1,[aIa,dIa],null)));$APP.jb.call(null,"Downloading dependencies...");esm_import$child_process.execSync([iIa," --config ",$APP.n.g(fIa)," --deps-root ",$APP.n.g(bIa)," uberjar ",$APP.n.g(gIa)].join(""));$APP.jb.call(null,"Extracting dependencies...");esm_import$fs.writeFileSync(jIa,["(fs/unzip ",$APP.yl.l($APP.F([gIa]))," ",$APP.yl.l($APP.F([hIa])),")"].join(""));esm_import$child_process.execSync(["bb ",$APP.n.g(jIa)].join(""));esm_import$fs.unlinkSync(jIa);$APP.jb.call(null,"Done.")}$APP.Jn(hIa)};