import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
const shadow_esm_import = function(x) { return import(x) };
import*as esm_import$fs from"fs";import*as esm_import$crypto from"crypto";import*as esm_import$child_process from"child_process";import*as esm_import$path from"path";var nDa=new $APP.k(null,"deps","deps",1883360319);var lDa=$APP.gf.h($APP.q($APP.hN),$APP.bK),oDa=esm_import$path.resolve(lDa,".nbb",".cache"),pDa=$APP.vp.h($APP.q($APP.hN),new $APP.H(null,2,5,$APP.I,[$APP.YC,nDa],null));
if($APP.m(pDa)){var qDa;qDa=esm_import$crypto.createHash("sha1").update($APP.n.g(pDa),"binary").digest("hex");var rDa=esm_import$path.resolve(oDa,qDa),sDa=esm_import$path.resolve(rDa,"deps.edn"),tDa=esm_import$path.resolve(rDa,"nbb-deps.jar"),EFa=esm_import$path.resolve(rDa,"nbb-deps");if(!$APP.m(esm_import$fs.existsSync(EFa))){var FHa=($APP.B.h("win32",process.platform),"bb"),GHa=esm_import$path.resolve(oDa,"extract.bb");esm_import$fs.mkdirSync(rDa,{recursive:!0});esm_import$fs.writeFileSync(sDa,
$APP.n.g(new $APP.g(null,1,[nDa,pDa],null)));$APP.jb.call(null,"Downloading dependencies...");esm_import$child_process.execSync([FHa," --config ",$APP.n.g(sDa)," --deps-root ",$APP.n.g(lDa)," uberjar ",$APP.n.g(tDa)].join(""));$APP.jb.call(null,"Extracting dependencies...");esm_import$fs.writeFileSync(GHa,["(fs/unzip ",$APP.yl.l($APP.F([tDa]))," ",$APP.yl.l($APP.F([EFa])),")"].join(""));esm_import$child_process.execSync(["bb ",$APP.n.g(GHa)].join(""));esm_import$fs.unlinkSync(GHa);$APP.jb.call(null,
"Done.")}$APP.Jn(EFa)};