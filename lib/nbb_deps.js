import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
const shadow_esm_import = function(x) { return import(x) };
import*as esm_import$fs from"fs";import*as esm_import$crypto from"crypto";import*as esm_import$child_process from"child_process";import*as esm_import$path from"path";var qIa=new $APP.k(null,"deps","deps",1883360319);var rIa=$APP.gf.h($APP.q($APP.hN),$APP.mI),sIa=esm_import$path.resolve(rIa,".nbb",".cache"),tIa=$APP.vp.h($APP.q($APP.hN),new $APP.H(null,2,5,$APP.I,[$APP.iD,qIa],null));
if($APP.m(tIa)){var uIa;uIa=esm_import$crypto.createHash("sha1").update($APP.n.g(tIa),"binary").digest("hex");var jJ=esm_import$path.resolve(sIa,uIa),vIa=esm_import$path.resolve(jJ,"deps.edn"),wIa=esm_import$path.resolve(jJ,"nbb-deps.jar"),xIa=esm_import$path.resolve(jJ,"nbb-deps");if(!$APP.m(esm_import$fs.existsSync(xIa))){var yIa=($APP.B.h("win32",process.platform),"bb"),zIa=esm_import$path.resolve(sIa,"extract.bb");esm_import$fs.mkdirSync(jJ,{recursive:!0});esm_import$fs.writeFileSync(vIa,$APP.n.g(new $APP.g(null,
1,[qIa,tIa],null)));$APP.jb.call(null,"Downloading dependencies...");esm_import$child_process.execSync([yIa," --config ",$APP.n.g(vIa)," --deps-root ",$APP.n.g(rIa)," uberjar ",$APP.n.g(wIa)].join(""));$APP.jb.call(null,"Extracting dependencies...");esm_import$fs.writeFileSync(zIa,["(fs/unzip ",$APP.yl.l($APP.F([wIa]))," ",$APP.yl.l($APP.F([xIa])),")"].join(""));esm_import$child_process.execSync(["bb ",$APP.n.g(zIa)].join(""));esm_import$fs.unlinkSync(zIa);$APP.jb.call(null,"Done.")}$APP.Jn(xIa)};