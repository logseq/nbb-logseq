import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
const shadow_esm_import = function(x) { return import(x) };
import*as esm_import$fs from"fs";import*as esm_import$crypto from"crypto";import*as esm_import$child_process from"child_process";import*as esm_import$path from"path";var ZBa=new $APP.G(null,"deps","deps",1883360319);var $Ba=$APP.D.h($APP.q($APP.MO),$APP.bK),aCa=esm_import$path.resolve($Ba,".nbb",".cache"),HQ=$APP.Ao.h($APP.q($APP.MO),new $APP.H(null,2,5,$APP.I,[$APP.ny,ZBa],null));
if($APP.l(HQ)){var bCa;bCa=esm_import$crypto.createHash("sha1").update($APP.p.g(HQ),"binary").digest("hex");var IQ=esm_import$path.resolve(aCa,bCa),cCa=esm_import$path.resolve(IQ,"deps.edn"),dCa=esm_import$path.resolve(IQ,"nbb-deps.jar"),JQ=esm_import$path.resolve(IQ,"nbb-deps");if(!$APP.l(esm_import$fs.existsSync(JQ))){var eCa=($APP.z.h("win32",process.platform),"bb"),KQ=esm_import$path.resolve(aCa,"extract.bb");esm_import$fs.mkdirSync(IQ,{recursive:!0});esm_import$fs.writeFileSync(cCa,$APP.p.g(new $APP.k(null,
1,[ZBa,HQ],null)));$APP.bb.call(null,"Downloading dependencies...");esm_import$child_process.execSync([eCa," --config ",$APP.p.g(cCa)," --deps-root ",$APP.p.g($Ba)," uberjar ",$APP.p.g(dCa)].join(""));$APP.bb.call(null,"Extracting dependencies...");esm_import$fs.writeFileSync(KQ,["(fs/unzip ",$APP.aj.l($APP.C([dCa]))," ",$APP.aj.l($APP.C([JQ])),")"].join(""));esm_import$child_process.execSync(["bb ",$APP.p.g(KQ)].join(""));esm_import$fs.unlinkSync(KQ);$APP.bb.call(null,"Done.")}$APP.Go(JQ)};