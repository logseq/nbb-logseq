import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
const shadow_esm_import = function(x) { return import(x) };
import*as esm_import$fs from"fs";import*as esm_import$crypto from"crypto";import*as esm_import$child_process from"child_process";import*as esm_import$path from"path";var gCa=new $APP.F(null,"deps","deps",1883360319);var hCa=$APP.C.h($APP.q($APP.JO),$APP.eK),iCa=esm_import$path.resolve(hCa,".nbb",".cache"),zQ=$APP.yo.h($APP.q($APP.JO),new $APP.H(null,2,5,$APP.I,[$APP.iy,gCa],null));
if($APP.l(zQ)){var jCa;jCa=esm_import$crypto.createHash("sha1").update($APP.p.g(zQ),"binary").digest("hex");var AQ=esm_import$path.resolve(iCa,jCa),kCa=esm_import$path.resolve(AQ,"deps.edn"),lCa=esm_import$path.resolve(AQ,"nbb-deps.jar"),BQ=esm_import$path.resolve(AQ,"nbb-deps");if(!$APP.l(esm_import$fs.existsSync(BQ))){var mCa=($APP.z.h("win32",process.platform),"bb"),CQ=esm_import$path.resolve(iCa,"extract.bb");esm_import$fs.mkdirSync(AQ,{recursive:!0});esm_import$fs.writeFileSync(kCa,$APP.p.g(new $APP.k(null,
1,[gCa,zQ],null)));$APP.cb.call(null,"Downloading dependencies...");esm_import$child_process.execSync([mCa," --config ",$APP.p.g(kCa)," --deps-root ",$APP.p.g(hCa)," uberjar ",$APP.p.g(lCa)].join(""));$APP.cb.call(null,"Extracting dependencies...");esm_import$fs.writeFileSync(CQ,["(fs/unzip ",$APP.aj.l($APP.B([lCa]))," ",$APP.aj.l($APP.B([BQ])),")"].join(""));esm_import$child_process.execSync(["bb ",$APP.p.g(CQ)].join(""));esm_import$fs.unlinkSync(CQ);$APP.cb.call(null,"Done.")}$APP.Eo(BQ)};