import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
const shadow_esm_import = function(x) { return import(x) };
import*as esm_import$node_crypto from"node:crypto";import*as esm_import$node_fs from"node:fs";import*as esm_import$node_path from"node:path";import*as esm_import$node_child_process from"node:child_process";var xKa=new $APP.F(null,"deps","deps",1883360319);var yKa=$APP.C.h($APP.n($APP.JO),$APP.SK),zKa=esm_import$node_path.resolve(yKa,".nbb",".cache"),AKa=$APP.rp.h($APP.n($APP.JO),new $APP.H(null,2,5,$APP.I,[$APP.xB,xKa],null));
if($APP.k(AKa)){var BKa;BKa=esm_import$node_crypto.createHash("sha1").update($APP.m.g(AKa),"binary").digest("hex");var rQ=esm_import$node_path.resolve(zKa,BKa),CKa=esm_import$node_path.resolve(rQ,"deps.edn"),DKa=esm_import$node_path.resolve(rQ,"nbb-deps.jar"),EKa=esm_import$node_path.resolve(rQ,"nbb-deps");if(!$APP.k(esm_import$node_fs.existsSync(EKa))){var FKa=($APP.x.h("win32",process.platform),"bb"),GKa=esm_import$node_path.resolve(zKa,"extract.bb");esm_import$node_fs.mkdirSync(rQ,{recursive:!0});
esm_import$node_fs.writeFileSync(CKa,$APP.m.g(new $APP.h(null,1,[xKa,AKa],null)));$APP.vb.call(null,"Downloading dependencies...");esm_import$node_child_process.execSync([FKa," --config ",$APP.m.g(CKa)," --deps-root ",$APP.m.g(yKa)," uberjar ",$APP.m.g(DKa)].join(""));$APP.vb.call(null,"Extracting dependencies...");esm_import$node_fs.writeFileSync(GKa,["(fs/unzip ",$APP.yj.l($APP.z([DKa]))," ",$APP.yj.l($APP.z([EKa])),")"].join(""));esm_import$node_child_process.execSync(["bb ",$APP.m.g(GKa)].join(""));
esm_import$node_fs.unlinkSync(GKa);$APP.vb.call(null,"Done.")}$APP.zp(EKa)};