import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
import "./nbb_goog_string.js";
const shadow_esm_import = function(x) { return import(x) };
var Q_a=function(a,b){return a.toString(b)},$T=function(a){return $APP.k(a)?-1<["\r","\n","\t"," ",","].indexOf(a):a},R_a=function(a){return $APP.k(a)?!/[^0-9]/.test(a):null},aU=function(a){if(null!=a&&null!=a.Fc)a=a.Fc(a);else{var b=aU[$APP.fa(null==a?null:a)];if(null!=b)a=b.g?b.g(a):b.call(null,a);else if(b=aU._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Lb("Node.tag",a);}return a},bU=function(a){if(null!=a&&null!=a.Cc)a=a.Cc(a);else{var b=bU[$APP.fa(null==a?null:a)];if(null!=b)a=b.g?b.g(a):
b.call(null,a);else if(b=bU._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Lb("Node.node-type",a);}return a},cU=function(a){if(null!=a&&null!=a.Dc)a=a.Dc(a);else{var b=cU[$APP.fa(null==a?null:a)];if(null!=b)a=b.g?b.g(a):b.call(null,a);else if(b=cU._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Lb("Node.printable-only?",a);}return a},dU=function(a,b){if(null!=a&&null!=a.Ec)a=a.Ec(a,b);else{var c=dU[$APP.fa(null==a?null:a)];if(null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else if(c=dU._,null!=
c)a=c.h?c.h(a,b):c.call(null,a,b);else throw $APP.Lb("Node.sexpr*",a);}return a},eU=function(a){if(null!=a&&null!=a.Bc)a=a.Bc(a);else{var b=eU[$APP.fa(null==a?null:a)];if(null!=b)a=b.g?b.g(a):b.call(null,a);else if(b=eU._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Lb("Node.length",a);}return a},fU=function(a){if(null!=a&&null!=a.Na)a=a.Na(a);else{var b=fU[$APP.fa(null==a?null:a)];if(null!=b)a=b.g?b.g(a):b.call(null,a);else if(b=fU._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Lb("Node.string",
a);}return a},hU=function(a,b){return $APP.fj.h(function(c){return gU.h(c,b)},$APP.js.h(cU,a))},iU=function(a){return $APP.cf.h($APP.Rx,$APP.fj.h(eU,a))},jU=function(a){return $APP.cf.h($APP.l,$APP.fj.h(fU,a))},kU=function(a){if(null!=a&&null!=a.xf)a=!0;else{var b=kU[$APP.fa(null==a?null:a)];if(null!=b)a=b.g?b.g(a):b.call(null,a);else if(b=kU._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Lb("InnerNode.inner?",a);}return a},lU=function(a){if(null!=a&&null!=a.wf)a=a.children;else{var b=lU[$APP.fa(null==
a?null:a)];if(null!=b)a=b.g?b.g(a):b.call(null,a);else if(b=lU._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Lb("InnerNode.children",a);}return a},mU=function(a,b){if(null!=a&&null!=a.ef)a=a.ef(a,b);else{var c=mU[$APP.fa(null==a?null:a)];if(null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else if(c=mU._,null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else throw $APP.Lb("InnerNode.replace-children",a);}return a},nU=function(a){if(null!=a&&null!=a.df)a=a.df(a);else{var b=nU[$APP.fa(null==a?null:a)];if(null!=
b)a=b.g?b.g(a):b.call(null,a);else if(b=nU._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Lb("InnerNode.leader-length",a);}return a},S_a=function(a,b){return $APP.k(kU(a))?hU(lU(a),b):null},oU=function(a){return $APP.x.h($APP.lo,a)?T_a:$APP.lj.g(["??_",$APP.l.g(a),"_??"].join(""))},pU=function(a){if(null!=a&&null!=a.ub)a=a.ub(a);else{var b=pU[$APP.fa(null==a?null:a)];if(null!=b)a=b.g?b.g(a):b.call(null,a);else if(b=pU._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Lb("NodeCoerceable.coerce",
a);}return a},qU=function(){},rU=function(a,b){if(null!=a&&null!=a.Rj)a=a.Rj(a,b);else{var c=rU[$APP.fa(null==a?null:a)];if(null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else if(c=rU._,null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else throw $APP.Lb("MapQualifiable.map-context-apply",a);}return a},sU=function(a){if(null!=a&&null!=a.Sj)a=a.Sj(a);else{var b=sU[$APP.fa(null==a?null:a)];if(null!=b)a=b.g?b.g(a):b.call(null,a);else if(b=sU._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Lb("MapQualifiable.map-context-clear",
a);}return a},uU=function(a){a.prototype.La=$APP.yd;a.prototype.W=function(b,c){b=$APP.l.g($APP.k(cU(this))?$APP.xj.l($APP.z([fU(this)])):fU(this));b=$APP.k($APP.Vi(/\n/,b))?tU.l("\n  %s\n",$APP.z([$APP.$k(b,/\r?\n/,"\n  ")])):[" ",b].join("");b=tU.l("\x3c%s:%s\x3e",$APP.z([$APP.Gi(aU(this)),b]));return $APP.Mc(c,b)}},W_a=function(a){var b=$APP.ue(a),c=$APP.Xf(b);b=$APP.A.h(c,$APP.so);var d=$APP.A.h(c,$APP.Ul),e=$APP.A.h(c,U_a);c=$APP.A.h(c,V_a);if($APP.k($APP.k(b)?$APP.k(d)?$APP.k(e)?c:e:d:b))return new $APP.H(null,
2,5,$APP.J,[e-b,$APP.x.l(b,e,$APP.z([b]))?c-d:c],null);b=fU(a);a=$APP.de($APP.Pg.h($APP.Ml.h($APP.x,"\n"),b));b=0===a?$APP.de(b):$APP.de($APP.Qi.h($APP.sg($APP.Ml.h($APP.x,"\n")),$APP.yf(b)))+1;return new $APP.H(null,2,5,$APP.J,[a,b],null)},X_a=function(a,b){var c=$APP.y.j(a,0,null);a=$APP.y.j(a,1,null);var d=$APP.y.j(b,0,null);b=$APP.y.j(b,1,null);return new $APP.H(null,2,5,$APP.J,[c+d,0===d?b+a:b],null)},Y_a=function(a){return $APP.k(kU(a))?(a=lU(a),a=null==a?null:$APP.v(a),null==a?null:$APP.ol.h(aU,
gU)(a)):gU.g(a)},vU=function(a,b,c,d,e){this.prefix=a;this.ua=b;this.A=c;this.o=d;this.C=e;this.J=2230716170;this.M=139264},xU=function(a){return $APP.x.h(aU(a),wU)},Z_a=function(a,b,c){return new $APP.D(null,$APP.vk,new $APP.D(null,$APP.ef($APP.M.h(a,$APP.k(b)?new $APP.D(null,$APP.ik,new $APP.D(null,b,null,1,null),2,null):null)),new $APP.D(null,c,null,1,null),2,null),3,null)},$_a=function(a){var b=function(){return function m(f){return new $APP.Gf(null,function(){for(;;){var p=$APP.r(f);if(p){if($APP.Fe(p)){var u=
$APP.ed(p),t=$APP.de(u),B=$APP.If(t);a:for(var C=0;;)if(C<t){var E=$APP.qe(u,C);E=$APP.x.h(E,0)?"rest__":["p",$APP.l.g(E),"__"].join("");E=$APP.Gi($APP.co.g(E));$APP.Of(B,$APP.lj.g([E,"#"].join("")));C+=1}else{u=!0;break a}return u?$APP.Nf($APP.Pf(B),m($APP.fd(p))):$APP.Nf($APP.Pf(B),null)}B=$APP.v(p);B=$APP.x.h(B,0)?"rest__":["p",$APP.l.g(B),"__"].join("");B=$APP.Gi($APP.co.g(B));return $APP.Af($APP.lj.g([B,"#"].join("")),m($APP.Ld(p)))}return null}},null,null)}($APP.Xn.D())}(),c=$APP.zj.g(0),d=
$APP.zj.g(!1);a=$APP.qL(function(e){a:{if(e instanceof $APP.q){var f=$APP.Gi(e);if($APP.Da(f,"%")){f=$APP.Yi.h(f,1);if($APP.x.h(f,"\x26"))f=0;else if($APP.x.h(f,""))f=1;else if($APP.k($APP.Ui(/\d+/,f)))f=parseInt(f);else throw $APP.Zl.h("arg literal must be %, %\x26 or %integer.",$APP.Wf);$APP.x.h(f,0)&&$APP.Cb($APP.n(d))&&$APP.vg(d,!0);$APP.Aj.j(c,$APP.ln,f);f=$APP.y.h(b,f);break a}}f=null}return $APP.k(f)?f:e},a);return Z_a($APP.Dg.h($APP.n(c),$APP.Ld(b)),$APP.k($APP.n(d))?$APP.v(b):null,a)},yU=
function(a,b,c,d){this.children=a;this.A=b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},zU=function(a,b,c,d){this.children=a;this.A=b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},AU=function(a,b,c,d,e){this.value=a;this.Xc=b;this.A=c;this.o=d;this.C=e;this.J=2230716170;this.M=139264},a0a=function(a,b){return $APP.Cb($APP.k(a)?$APP.x.h("_",$APP.YG.g(b)):a)?$APP.k(b)?b:a:null},b0a=function(a,b){return $APP.k($APP.k(b)?b:$APP.Cf(a))?new $APP.h(null,2,[BU,b,$APP.YG,$APP.Cf(a)],null):null},
CU=function(a,b,c,d,e,f){this.k=a;this.Lb=b;this.mc=c;this.A=d;this.o=e;this.C=f;this.J=2230716170;this.M=139264},DU=function(a,b){return new CU(a,b,null,null,null,null)},EU=function(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return c0a(arguments[0],arguments[1],2<b.length?new $APP.Hd(b.slice(2),0,null):null)},c0a=function(a,b,c){b=$APP.qg.j(tU,b,c);c=$APP.vl(a);a=$APP.ul(a);throw $APP.Zl.h([$APP.l.g(b)," [at line ",$APP.l.g(a),", column ",$APP.l.g(c),"]"].join(""),
new $APP.h(null,3,[$APP.On,b,$APP.so,a,$APP.Ul,c],null));},d0a=function(a){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,16,[null,null,"@",null,"`",null,'"',null,"'",null,"(",null,")",null,":",null,";",null,"[",null,"{",null,"\\",null,"]",null,"}",null,"^",null,"~",null],null),null),a)},e0a=function(a){return","===a},FU=function(a){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,2,["\n",null,"\r",null],null),null),a)},f0a=function(a){if($APP.k(a)){var b=$T(a);return $APP.k(b)?!$APP.Ue(new $APP.Ai(null,
new $APP.h(null,3,["\n",null,",",null,"\r",null],null),null),a):b}return a},GU=function(a,b){return g0a(a,b,$APP.Cb(b.g?b.g(null):b.call(null,null)))},g0a=function(a,b,c){for(var d=new $APP.hb;;){var e=a.wa(null);if($APP.k(e))if($APP.k(b.g?b.g(e):b.call(null,e)))d.append(e);else return a.ee(null,e),d.toString();else return $APP.k(c)?d.toString():EU(a,"unexpected EOF")}},h0a=function(a,b){return g0a(a,$APP.sg(b),b.g?b.g(null):b.call(null,null))},i0a=function(a){return[$APP.l.g(h0a(a,function(b){return null==
b||FU(b)})),$APP.l.g(a.wa(null))].join("")},HU=function(a){a.wa(null);return null},IU=function(a){a=a.sd(null);return"\r"===a?"\n":a},KU=function(a){var b=JU,c=$APP.Vf([$APP.so,a.Hf(null),$APP.Ul,a.Gf(null)]);b=b.g?b.g(a):b.call(null,a);return $APP.k(b)?$APP.te(b,$APP.Kl.l($APP.z([c,$APP.Vf([$APP.wp,a.Hf(null),$APP.xp,a.Gf(null)])]))):null},j0a=function(a,b){return $APP.Rn.g($APP.Qi.h($APP.gf,$APP.Ls.g(function(){return b.g?b.g(a):b.call(null,a)})))},n0a=function(a){var b=$APP.rl(a);if($APP.ll(b))return $APP.nda(a);
var c=function(){var f=new $APP.Ed(function(){return $APP.pm},k0a,$APP.gi([$APP.Tt,$APP.R,$APP.Q,$APP.Sl,$APP.$z,$APP.oI,$APP.Pm,$APP.Tl,$APP.DK,$APP.W,$APP.N,$APP.lF],[!0,$APP.UE,l0a,"cljs/tools/reader/edn.cljs",18,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,4,$APP.BJ,4,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,3,5,$APP.J,[$APP.iD,$APP.kB,$APP.Bz],null),new $APP.H(null,4,5,$APP.J,[$APP.iD,$APP.kB,$APP.Bz,m0a],null)],null),$APP.W,$APP.K(new $APP.H(null,3,5,$APP.J,[$APP.iD,$APP.kB,$APP.Bz],null),
new $APP.H(null,4,5,$APP.J,[$APP.iD,$APP.kB,$APP.Bz,m0a],null)),$APP.gF,$APP.K(null,null)],null),1,42,42,$APP.K(new $APP.H(null,3,5,$APP.J,[$APP.iD,$APP.kB,$APP.Bz],null),new $APP.H(null,4,5,$APP.J,[$APP.iD,$APP.kB,$APP.Bz,m0a],null)),null,$APP.k($APP.pm)?$APP.pm.H:null]));return f.j?f.j(a,$APP.Cm,b):f.call(null,a,$APP.Cm,b)}(),d=$APP.jm(c);if($APP.k($APP.k(d)?0!==c.indexOf("::"):d)){var e=d.g?d.g(0):d.call(null,0);d=d.g?d.g(1):d.call(null,1);return":"===$APP.y.h(c,0)?$APP.em(a,$APP.Cm,c):$APP.gj.h(e,
d)}return $APP.em(a,$APP.Cm,c)},o0a=function(a){if(""===a||$APP.Fa(a,":")||$APP.Da(a,"::"))return null;var b=$APP.GK.h(a,"/");if($APP.k(b)){var c=$APP.Yi.j(a,0,b);b+=1;if(b===$APP.de(a))return null;a=$APP.Yi.h(a,b);return $APP.Ue(new $APP.Ai(null,new $APP.h(null,9,["9",null,"3",null,"4",null,"8",null,"7",null,"5",null,"6",null,"1",null,"2",null],null),null),a)?new $APP.H(null,2,5,$APP.J,[c,a],null):!$APP.Cb(R_a($APP.y.h(a,0)))||$APP.x.h("",a)||$APP.Fa(c,":")||!$APP.x.h(a,"/")&&null!=$APP.GK.h(a,"/")?
null:new $APP.H(null,2,5,$APP.J,[c,a],null)}return $APP.x.h(a,"/")||null==$APP.GK.h(a,"/")?new $APP.H(null,2,5,$APP.J,[null,a],null):null},p0a=function(a){switch(a){case "nil":return null;case "true":return!0;case "false":return!1;case "/":return $APP.Bm;default:var b=o0a(a);b=$APP.k(b)?$APP.lj.h(b.g?b.g(0):b.call(null,0),b.g?b.g(1):b.call(null,1)):null;return $APP.k(b)?b:$APP.em(null,$APP.Am,a)}},q0a=function(){throw $APP.Zl.h("unsupported operation",$APP.Wf);},LU=function(a,b,c,d){this.jf=a;this.A=
b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},MU=function(a){return new LU(a,null,null,null)},NU=function(a,b,c,d){this.Re=a;this.A=b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},OU=function(a,b,c,d){this.Ye=a;this.A=b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},PU=function(a){return new OU(a,null,null,null)},r0a=function(a){return e0a(a)?QU:FU(a)?RU:SU},s0a=function(a){return $APP.fj.h(function(b){var c=$APP.qg.h($APP.l,b);b=r0a($APP.v(b));switch(b instanceof $APP.F?b.N:null){case "comma":return new NU(c,
null,null,null);case "newline":return PU(c);default:return MU(c)}},$APP.Py.h(r0a,a))},TU=function(a){return MU($APP.qg.h($APP.l,$APP.kn.h(a," ")))},UU=function(a){return PU($APP.qg.h($APP.l,$APP.kn.h(a,"\n")))},u0a=function(a){return $APP.Zk.h($APP.de(t0a),$APP.Og.l(function(b){return $APP.Af(b,t0a)},$APP.z([a])))},VU=function(a){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,3,[SU,null,QU,null,RU,null],null),null),aU(a))},WU=function(a){return $APP.x.h(aU(a),RU)},XU=function(a,b,c,d,e,f){this.tag=
a;this.prefix=b;this.children=c;this.A=d;this.o=e;this.C=f;this.J=2230716170;this.M=139264},YU=function(a,b,c){return new XU(a,b,c,null,null,null)},v0a=function(a,b){return YU($APP.mb,"^",new $APP.H(null,3,5,$APP.J,[a,TU(1),b],null))},ZU=function(a,b,c,d,e){this.Lb=a;this.prefix=b;this.A=c;this.o=d;this.C=e;this.J=2230716170;this.M=139264},w0a=function(a,b){for(var c=null,d=$APP.Sg;;){var e=$APP.v(a);if($APP.k(e))$APP.k(cU(e))?(a=$APP.Ld(a),d=$APP.xf.h(d,e)):$APP.k(c)?(a=$APP.Ld(a),d=$APP.xf.h(d,
b.h?b.h(e,!1):b.call(null,e,!1)),c=null):(a=$APP.Ld(a),c=e,d=$APP.xf.h(d,b.h?b.h(e,!0):b.call(null,e,!0)));else return d}},x0a=function(a,b){return mU(a,w0a(lU(a),function(c,d){return(null!=c?$APP.yd===c.Qj||(c.kd?0:$APP.Jb(qU,c)):$APP.Jb(qU,c))?$APP.k(d)?rU(c,b):sU(c):c}))},y0a=function(a){var b=$APP.v(a),c=$APP.oe(a);return $APP.M.h($APP.Zk.g(a),new $APP.H(null,1,5,$APP.J,[x0a(c,b)],null))},$U=function(a,b,c,d){this.children=a;this.A=b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},z0a=function(a,
b){return new ZU(a,b,null,null,null)},aV=function(a,b,c,d,e,f,m){this.tag=a;this.prefix=b;this.Ob=c;this.children=d;this.A=e;this.o=f;this.C=m;this.J=2230716170;this.M=139264},A0a=function(a){for(;;){if($APP.Be(a))return new aV($APP.ep,"'",$APP.Ak,a,null,null,null);a=new $APP.H(null,1,5,$APP.J,[a],null)}},B0a=function(a){for(;;){if($APP.Be(a))return new aV($APP.eo,"`",$APP.Ak,a,null,null,null);a=new $APP.H(null,1,5,$APP.J,[a],null)}},C0a=function(a){for(;;){if($APP.Be(a))return new aV($APP.hp,"~",
$APP.Yn,a,null,null,null);a=new $APP.H(null,1,5,$APP.J,[a],null)}},D0a=function(a){for(;;){if($APP.Be(a))return new aV($APP.ip,"~@",$APP.$n,a,null,null,null);a=new $APP.H(null,1,5,$APP.J,[a],null)}},bV=function(a,b,c,d,e,f,m,p,u){this.tag=a;this.prefix=b;this.mb=c;this.Tc=d;this.Yd=e;this.children=f;this.A=m;this.o=p;this.C=u;this.J=2230716170;this.M=139264},cV=function(a,b,c,d){this.children=a;this.A=b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},dV=function(a){return new cV(a,null,null,null)},
eV=function(a,b,c,d){this.children=a;this.A=b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},E0a=function(a,b,c,d){return new bV(a,b,"",c,1,d,null,null,null)},F0a=function(a){for(;;){if($APP.Be(a))return E0a($APP.Xo,"'",function(){return function(b){return $APP.Hs.h($APP.zk,b)}}(a),a);a=new $APP.H(null,1,5,$APP.J,[a],null)}},G0a=function(a){for(;;){if($APP.Be(a))return E0a($APP.bBa,"\x3d",function(){return function(b){return new $APP.D(null,$APP.cE,new $APP.D(null,$APP.Hs.h($APP.Ak,b),null,1,
null),2,null)}}(a),a);a=new $APP.H(null,1,5,$APP.J,[a],null)}},H0a=function(a){return $APP.Be(a)?new eV(a,null,null,null):new eV(new $APP.H(null,1,5,$APP.J,[a],null),null,null,null)},fV=function(a,b,c,d){this.pattern=a;this.A=b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},gV=function(a,b,c,d,e,f,m,p){this.tag=a;this.Sd=b;this.Pd=c;this.wd=d;this.children=e;this.A=f;this.o=m;this.C=p;this.J=2230716170;this.M=139264},I0a=function(a){return $APP.qg.h($APP.K,a)},hV=function(a){return new gV($APP.um,
"(%s)",2,I0a,a,null,null,null)},iV=function(a){return new gV($APP.vm,"[%s]",2,$APP.ef,a,null,null,null)},jV=function(a){return new gV($APP.Fm,"#{%s}",3,$APP.Ei,a,null,null,null)},J0a=function(a){return $APP.qg.h($APP.bp,a)},kV=function(a){return new gV($APP.wm,"{%s}",2,J0a,a,null,null,null)},K0a=function(a){return['"',$APP.l.g(a),'"'].join("")},lV=function(a,b,c,d){this.lines=a;this.A=b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},mV=function(a){return"string"===typeof a?new lV(new $APP.H(null,
1,5,$APP.J,[a],null),null,null,null):new lV(a,null,null,null)},L0a=function(a,b){return $APP.Cb($APP.k(a)?$APP.x.h("_",$APP.YG.g(b)):a)?$APP.k(b)?b:a:null},M0a=function(a){var b=(b=a instanceof $APP.q)?$APP.Cf(a):b;return $APP.k(b)?new $APP.h(null,1,[$APP.YG,$APP.Cf(a)],null):null},nV=function(a,b,c,d,e){this.value=a;this.kc=b;this.A=c;this.o=d;this.C=e;this.J=2230716170;this.M=139264},oV=function(a,b,c,d,e,f){this.value=a;this.kc=b;this.mc=c;this.A=d;this.o=e;this.C=f;this.J=2230716170;this.M=139264},
qV=function(a){return pV(a,$APP.xj.l($APP.z([a])))},pV=function(a,b){return a instanceof $APP.q?new oV(a,b,null,null,null,null):new nV(a,b,null,null,null)},rV=function(a,b,c,d){this.children=a;this.A=b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},N0a=function(a){for(;;){if($APP.Be(a))return new rV(a,null,null,null);a=new $APP.H(null,1,5,$APP.J,[a],null)}},O0a=function(a,b){var c=b.toString();b.clear();return $APP.xf.h(a,c)},P0a=function(a){HU(a);for(var b=new $APP.hb,c=!1,d=$APP.Sg;;){var e=
a.wa(null);if($APP.k(e)){if($APP.Cb(c)&&'"'===e)return O0a(d,b);"\n"===e?d=O0a(d,b):(b.append(e),c=$APP.Cb(c)&&"\\"===e)}else return EU(a,"Unexpected EOF while reading string.")}},sV=function(a,b){return(null!=b?b.J&262144||$APP.yd===b.jj||(b.J?0:$APP.Jb($APP.wc,b)):$APP.Jb($APP.wc,b))?(b=$APP.qg.j($APP.Ll,$APP.ue(b),new $APP.H(null,4,5,$APP.J,[$APP.Tl,$APP.Pm,$APP.DK,$APP.$z],null)),$APP.xe(b)?a:v0a(pU(b),a)):a},S0a=function(a){return $APP.ef($APP.Zk.h($APP.de(Q0a),$APP.Og.l(function(b){var c=$APP.y.j(b,
0,null);b=$APP.y.j(b,1,null);return $APP.Hs.F(pU(c),R0a,pU(b),Q0a)},$APP.z([a]))))},tV=function(a,b){var c=$APP.ef($APP.Fi($APP.cn.h($APP.fj.h(pU,b),$APP.kn.g(T0a))));a=a.g?a.g(c):a.call(null,c);return sV(a,b)},U0a=function(a){return VU(a)||xU(a)},vV=function(a){return uV.g(a)},wV=function(a){return $APP.k(vV(a))?$APP.bC.g(a):$APP.jx(a)},xV=function(a){return $APP.k(vV(a))?kU($APP.bC.g(a)):$APP.kx(a)},yV=function(a){if($APP.k(vV(a))){a=$APP.Xf(a);var b=$APP.A.h(a,$APP.bC);if($APP.k(xV(a)))return $APP.r(lU(b));
throw $APP.Zl.h("called children on a leaf node",$APP.Wf);}return $APP.lx(a)},zV=function(a,b,c){return $APP.k(vV(a))?mU(b,c):$APP.mx(a,b,c)},V0a=function(a){if($APP.k(uV.g(a)))return AV.g(a);throw $APP.Zl.h("to use position functions, please construct your zipper with ':track-position?'  set to true.",$APP.Wf);},W0a=function(a){var b=V0a(a);return new $APP.H(null,2,5,$APP.J,[b,X_a(b,W_a(wV(a)))],null)},X0a=function(a){return $APP.k(vV(a))?$APP.fj.h($APP.v,BV.g(a)):$APP.aka(a)},CV=function(a){if($APP.k(vV(a))){if($APP.k(xV(a))){var b=
$APP.Xf(a),c=$APP.A.h(b,AV),d=$APP.y.j(c,0,null);c=$APP.y.j(c,1,null);b=$APP.A.h(b,$APP.bC);var e=yV(a),f=$APP.r(e),m=$APP.v(f);f=$APP.w(f);return $APP.k(e)?$APP.te(new $APP.h(null,6,[uV,!0,$APP.bC,m,AV,new $APP.H(null,2,5,$APP.J,[d,c+nU(b)],null),$APP.qK,a,BV,$APP.Sg,$APP.jD,f],null),$APP.ue(a)):null}return null}return $APP.rx(a)},DV=function(a){if($APP.k(vV(a))){var b=$APP.Xf(a),c=$APP.A.h(b,$APP.bC),d=$APP.A.h(b,$APP.qK),e=$APP.A.h(b,BV),f=$APP.A.h(b,$APP.jD);b=$APP.A.h(b,$APP.ux);return $APP.k(d)?
$APP.k(b)?$APP.xi.l(d,$APP.ux,!0,$APP.z([$APP.bC,zV(a,$APP.bC.g(d),$APP.M.h($APP.fj.h($APP.v,e),$APP.Af(c,f)))])):d:null}return $APP.vx(a)},FV=function(a){for(;;)if($APP.k(vV(a))){if($APP.k(EV.g(a)))return wV(a);var b=DV(a);if($APP.k(b))a=b;else return wV(a)}else return $APP.bka(a)},GV=function(a){if($APP.k(vV(a))){var b=$APP.Xf(a),c=$APP.A.h(b,$APP.jD),d=$APP.r(c),e=$APP.v(d);d=$APP.w(d);var f=$APP.A.h(b,$APP.bC),m=$APP.A.h(b,$APP.qK),p=$APP.A.h(b,AV);b=$APP.A.h(b,BV);return $APP.k($APP.k(m)?c:m)?
$APP.xi.l(a,$APP.bC,e,$APP.z([BV,$APP.xf.h(b,new $APP.H(null,2,5,$APP.J,[f,p],null)),$APP.jD,d,AV,X_a(p,W_a(f))])):null}return $APP.xx(a)},HV=function(a){for(;;)if($APP.k(vV(a))){var b=GV(a);if($APP.k(b))a=b;else return a}else return $APP.yx(a)},IV=function(a){if($APP.k(vV(a))){var b=$APP.Xf(a),c=$APP.A.h(b,$APP.bC),d=$APP.A.h(b,$APP.qK),e=$APP.A.h(b,BV);b=$APP.A.h(b,$APP.jD);if($APP.k($APP.k(d)?$APP.r(e):d)){var f=$APP.ve(e);d=$APP.y.j(f,0,null);f=$APP.y.j(f,1,null);return $APP.xi.l(a,$APP.bC,d,
$APP.z([AV,f,BV,$APP.we(e),$APP.jD,$APP.Af(c,b)]))}return null}return $APP.zx(a)},Y0a=function(a){if($APP.k(vV(a))){var b=$APP.Xf(a),c=$APP.A.h(b,$APP.bC),d=$APP.A.h(b,$APP.qK),e=$APP.A.h(b,BV);b=$APP.A.h(b,$APP.jD);if($APP.k($APP.k(d)?$APP.r(e):d)){var f=$APP.v(e);d=$APP.y.j(f,0,null);f=$APP.y.j(f,1,null);return $APP.xi.l(a,$APP.bC,d,$APP.z([AV,f,BV,$APP.Sg,$APP.jD,$APP.M.l($APP.fj.h($APP.v,$APP.Ld(e)),new $APP.H(null,1,5,$APP.J,[c],null),$APP.z([b]))]))}return a}return $APP.cka(a)},JV=function(a,
b){if($APP.k(vV(a))){var c=$APP.Xf(a),d=$APP.A.h(c,$APP.qK),e=$APP.A.h(c,AV);c=$APP.A.h(c,BV);if($APP.Cb(d))throw $APP.Zl.h("cannot insert left at top",$APP.Wf);return $APP.xi.l(a,$APP.ux,!0,$APP.z([BV,$APP.xf.h(c,new $APP.H(null,2,5,$APP.J,[b,e],null)),AV,X_a(e,W_a(b))]))}return $APP.dka(a,b)},KV=function(a,b){if($APP.k(vV(a))){var c=$APP.Xf(a),d=$APP.A.h(c,$APP.qK);c=$APP.A.h(c,$APP.jD);if($APP.Cb(d))throw $APP.Zl.h("cannot insert right at top",$APP.Wf);return $APP.xi.l(a,$APP.ux,!0,$APP.z([$APP.jD,
$APP.Af(b,c)]))}return $APP.eka(a,b)},LV=function(a,b){return $APP.k(vV(a))?$APP.xi.l(a,$APP.ux,!0,$APP.z([$APP.bC,b])):$APP.Ax(a,b)},Z0a=function(a,b){return $APP.k(vV(a))?LV(a,zV(a,wV(a),$APP.Af(b,yV(a)))):$APP.fka(a,b)},$0a=function(a,b){return $APP.k(vV(a))?LV(a,zV(a,wV(a),$APP.M.h(yV(a),new $APP.H(null,1,5,$APP.J,[b],null)))):$APP.gka(a,b)},MV=function(a){if($APP.k(vV(a))){if($APP.k(EV.g(a)))return a;var b=xV(a);b=$APP.k(b)?CV(a):b;if($APP.k(b))return b;b=GV(a);if($APP.k(b))return b;for(;;)if($APP.k(DV(a))){b=
GV(DV(a));if($APP.k(b))return b;a=DV(a)}else return $APP.xi.j(a,EV,!0)}else return $APP.hka(a)},NV=function(a){if($APP.k(vV(a))){var b=IV(a);if($APP.k(b))for(a=b;;)if(b=xV(a),b=$APP.k(b)?CV(a):b,$APP.k(b))a=HV(b);else return a;else return DV(a)}else return $APP.ika(a)},a1a=function(a){return $APP.k(vV(a))?EV.g(a):$APP.jka(a)},OV=function(a){if($APP.k(vV(a))){var b=$APP.Xf(a),c=$APP.A.h(b,$APP.qK),d=$APP.A.h(b,BV);b=$APP.A.h(b,$APP.jD);if($APP.Cb(c))throw $APP.Zl.h("cannot remove at top",$APP.Wf);
if($APP.r(d))for(var e=function(){var f=$APP.ve(d),m=$APP.y.j(f,0,null);f=$APP.y.j(f,1,null);return $APP.xi.l(a,$APP.ux,!0,$APP.z([AV,f,$APP.bC,m,BV,$APP.we(d)]))}();;)if(c=function(){var f=xV(e);return $APP.k(f)?CV(e):f}(),$APP.k(c))e=HV(c);else return e;else return $APP.xi.l(c,$APP.ux,!0,$APP.z([$APP.bC,zV(a,$APP.bC.g(c),b)]))}else return $APP.kka(a)},b1a=function(a,b,c){var d=$APP.y.j(a,0,null),e=$APP.y.j(a,1,null),f=$APP.A.h(e,b);return $APP.r(f)?$APP.te(new $APP.H(null,2,5,$APP.J,[d,$APP.xi.l(e,
b,c.g?c.g(f):c.call(null,f),$APP.z([$APP.ux,!0]))],null),$APP.ue(a)):a},c1a=function(a){if($APP.k(uV.g(a))){var b=$APP.Xf(a);b=$APP.A.h(b,$APP.jD);b=$APP.r(b);$APP.v(b);b=$APP.w(b);return $APP.xi.l(a,$APP.jD,b,$APP.z([$APP.ux,!0]))}return b1a(a,$APP.qx,$APP.w)},PV=function(a,b){for(;;){var c=GV(a);if($APP.k(c))if($APP.k(b.g?b.g(c):b.call(null,c)))a=c1a(a);else return a;else return a}},QV=function(a,b){for(;;){var c=IV(a);if($APP.k(c))if($APP.k(b.g?b.g(c):b.call(null,c)))if($APP.k(uV.g(a))){c=$APP.Xf(a);
c=$APP.A.h(c,BV);var d=$APP.ve(c);$APP.k(d)&&($APP.y.j(d,0,null),d=$APP.y.j(d,1,null),a=$APP.xi.l(a,BV,$APP.we(c),$APP.z([AV,d,$APP.ux,!0])))}else a=b1a(a,$APP.nx,$APP.we);else return a;else return a}},d1a=function(a){if($APP.k(uV.g(a))){var b=$APP.Xf(a),c=$APP.A.h(b,BV),d=$APP.A.h(b,$APP.qK);b=$APP.A.h(b,$APP.jD);if(null==$APP.qK.g(d))throw $APP.Zl.h("cannot remove at top",$APP.Wf);return $APP.r(c)?$APP.xi.l(d,$APP.ux,!0,$APP.z([$APP.bC,zV(a,$APP.bC.g(d),$APP.M.h($APP.fj.h($APP.v,c),b))])):OV(a)}$APP.y.j(a,
0,null);c=$APP.y.j(a,1,null);c=$APP.Xf(c);d=$APP.A.h(c,$APP.nx);b=$APP.A.h(c,$APP.px);var e=$APP.A.h(c,$APP.ox),f=$APP.A.h(c,$APP.qx);if(null==b)throw $APP.Zl.h("cannot remove at top",$APP.Wf);return 0<$APP.de(d)?DV($APP.te(new $APP.H(null,2,5,$APP.J,[$APP.ve(d),$APP.xi.l(c,$APP.nx,$APP.we(d),$APP.z([$APP.ux,!0]))],null),$APP.ue(a))):$APP.te(new $APP.H(null,2,5,$APP.J,[zV(a,$APP.ve(e),f),$APP.k(b)?$APP.xi.j(b,$APP.ux,!0):b],null),$APP.ue(a))},e1a=function(a){var b=$APP.x.h(":",GU(a,function(c){return $APP.x.h(":",
c)}));a=h0a(a,function(c){var d=d0a(c);return d?d:$T(c)});return z0a(b,$APP.r(a)?a:null)},g1a=function(a){var b=f1a;HU(a);var c=e1a(a);$APP.Cb(c.Lb)&&null==c.prefix&&EU(a,"namespaced map expects a namespace");var d;a:for(d=$APP.Sg;;){var e=b.g?b.g(a):b.call(null,a);var f=e;f=$APP.k(f)?VU(e):f;if($APP.k(f))d=$APP.xf.h(d,e);else{d=new $APP.H(null,2,5,$APP.J,[d,e],null);break a}}b=$APP.y.j(d,0,null);d=$APP.y.j(d,1,null);($APP.Cb(d)||$APP.wi.h($APP.wm,aU(d)))&&EU(a,"namespaced map expects a map");return new $U(y0a($APP.M.l(new $APP.H(null,
1,5,$APP.J,[c],null),b,$APP.z([new $APP.H(null,1,5,$APP.J,[d],null)]))),null,null,null)},h1a=function(a){a=P0a(a);return $APP.on.h("\n",a)},j1a=function(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return i1a(arguments[0],1<b.length?new $APP.Hd(b.slice(1),0,null):null)},i1a=function(a,b){b=$APP.y.j(b,0,null);var c=$APP.Ei(b);return h0a(a,function(d){var e=$APP.Cb(c.g?c.g(d):c.call(null,d));e?(e=$T(d),d=$APP.k(e)?e:d0a(d)):d=e;return d})},k1a=function(a){var b=
a.wa(null),c=$APP.l.g(b),d=$APP.l,e=d.g;if($APP.x.h(b,"\\")){var f=a.wa(null);f=[$APP.l.g(f),$APP.l.g($APP.wi.h(f,"\\")?j1a(a):"")].join("")}else f=j1a(a);c=[c,e.call(d,f)].join("");(d=$APP.x.h(b,"\\"))?b=d:(b=$APP.x.h(b,"#"),b||(d=$APP.y.j(c,0,null),b=$APP.y.j(c,1,null),e=R_a(d),b=$APP.k(e)?e:(d="+"===d||"-"===d)?R_a(b):d));b=$APP.k(b)?$APP.HK.g(c):p0a(c);b instanceof $APP.q?(a=i1a(a,$APP.z([new $APP.H(null,2,5,$APP.J,["'",":"],null)])),$APP.xe(a)?a=pV(b,c):(a=[$APP.l.g(c),$APP.l.g(a)].join(""),
a=pV(p0a(a),a))):a=pV(b,c);return a},n1a=function(a){return null==a?$APP.cm:$APP.k($T(a))?SU:$APP.x.h(a,RV)?l1a:$APP.A.j($APP.gi("@`\"#'():;[{]}^~".split(""),[$APP.cp,$APP.eo,$APP.fm,m1a,$APP.ep,$APP.um,SV,$APP.Cm,wU,$APP.vm,$APP.wm,SV,SV,$APP.mb,$APP.hp]),a,$APP.ZT)},f1a=function(a){return KU(a)},TV=function(a,b){HU(a);return j0a(a,function(c){var d=RV;RV=b;try{return KU(c)}finally{RV=d}})},VV=function(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return UV(arguments[0],
arguments[1],arguments[2],3<b.length?new $APP.Hd(b.slice(3),0,null):null)},UV=function(a,b,c,d){d=$APP.y.j(d,0,null);$APP.k(d)&&HU(a);a:{d=f1a;for(var e=$APP.sg(cU),f=0,m=$APP.Sg;;)if(f<c){var p=d.g?d.g(a):d.call(null,a);if($APP.k(p))f=$APP.k(e.g?e.g(p):e.call(null,p))?f+1:f,m=$APP.xf.h(m,p);else{a=c0a(a,"%s node expects %d value%s.",$APP.z([b,c,$APP.x.h(c,1)?"":"s"]));break a}}else{a=m;break a}}return a},o1a=function(a){a.ee(null,"#");return k1a(a)},p1a=function(a){HU(a);a=i0a(a);return new vU("#!",
a,null,null,null)},q1a=function(a){var b=$APP.Qi.h($APP.gf,$APP.Ls.g(function(){return KU(a)})),c=$APP.Kl.l($APP.z([$APP.ue($APP.v(b)),$APP.yi($APP.ue($APP.oe(b)),new $APP.H(null,2,5,$APP.J,[$APP.wp,$APP.xp],null))]));return $APP.te(new zU(b,null,null,null),c)},r1a=function(a){return q1a($APP.Gl($APP.Fl(a)))},WV=function(a){a=null==a?null:wV(a);return null==a?null:VU(a)},XV=function(a){a=null==a?null:wV(a);return null==a?null:WU(a)},s1a=function(a){a=null==a?null:wV(a);return null==a?null:xU(a)},
t1a=function(a){var b=WV(a);return $APP.k(b)?$APP.Cb(XV(a)):b},YV=function(a){a=null==a?null:wV(a);return null==a?null:U0a(a)},u1a=function(a,b,c){return $APP.v($APP.Ri.h(b,$APP.Qi.h($APP.sg(a1a),$APP.Qi.h($APP.gf,$APP.Ng(a,c)))))},ZV=function(a,b){return u1a(a,YV,b)},$V=function(a,b){return 0<b?JV(a,TU(b)):a},aW=function(a,b){return 0<b?KV(a,TU(b)):a},cW=function(a,b){a=$APP.k(v1a.g(b))?new $APP.h(null,6,[uV,!0,$APP.bC,a,AV,new $APP.H(null,2,5,$APP.J,[1,1],null),$APP.qK,null,BV,$APP.Sg,$APP.jD,$APP.Kd],
null):$APP.ix(kU,$APP.sq.h($APP.r,lU),mU,a);return $APP.ko.F(a,$APP.xi,bW,$APP.Kl.l($APP.z([w1a,b])))},dW=function(a,b){for(;;){if($APP.x.h(aU(a),$APP.ww))return a=cW(a,b),b=ZV(GV,CV(a)),$APP.k(b)?b:a;a=new zU(new $APP.H(null,1,5,$APP.J,[a],null),null,null,null)}},eW=function(a){a=null==a?null:wV(a);return null==a?null:aU(a)},fW=function(a){var b=null==a?null:wV(a);return null==b?null:gU.h(b,bW.g($APP.ue(a)))},x1a=function(a,b){a=null==a?null:r1a(a);return null==a?null:cW(a,b)},y1a=function(a,b){a=
null==a?null:r1a(a);return null==a?null:dW(a,b)},gW=function(a){a=null==a?null:wV(a);return null==a?null:fU(a)},z1a=function(a){a=null==a?null:FV(a);return null==a?null:fU(a)},A1a=function(a){a=null==a?null:gW(a);return null==a?null:$APP.dj(a)},B1a=function(a){a=null==a?null:z1a(a);return null==a?null:$APP.dj(a)},hW=function(a){a=null==a?null:GV(a);return null==a?null:ZV(GV,a)},iW=function(a){a=null==a?null:IV(a);return null==a?null:ZV(IV,a)},jW=function(a){a=null==a?null:CV(a);return null==a?null:
ZV(GV,a)},kW=function(a){a=null==a?null:DV(a);return null==a?null:ZV(IV,a)},lW=function(a){if($APP.k(a)){var b=null==a?null:MV(a);b=null==b?null:ZV(MV,b);return $APP.k(b)?b:$APP.ko.F(a,$APP.xi,C1a,!0)}return null},mW=function(a){var b=$APP.Cb(a);if(b)return b;b=a1a(a);return $APP.k(b)?b:C1a.g($APP.ue(a))},D1a=function(a){a=null==a?null:NV(a);return null==a?null:ZV(NV,a)},E1a=function(a){a=null==a?null:Y0a(a);return null==a?null:ZV(GV,a)},nW=function(a){a=null==a?null:HV(a);return null==a?null:ZV(IV,
a)},F1a=function(a){var b=PV(a,WV);var c=$APP.x.h(1,$APP.de($APP.Qi.h($APP.gf,$APP.Ng(DV,a)))-1);a=c?(c=$APP.Cb(hW(a)))?$APP.og(XV,$APP.Qi.h($APP.gf,$APP.Ng(GV,a))):c:c;return $APP.k(a)?KV(b,UU(1)):b},G1a=function(a,b,c){a=b.g?b.g(a):b.call(null,a);c=c.g?c.g(a):c.call(null,a);return ZV(NV,OV(c))},pW=function(a){return G1a(a,oW,F1a)},H1a=function(a){return function(){function b(c){var d=WV(c);return $APP.k(d)?$APP.Cb(XV(c)):d}return G1a(a,function(c){return oW.h(c,b)},function(c){return PV(c,b)})}()},
I1a=function(a){return function(b,c){b=gU.h(b,a);c=c.g?c.g(b):c.call(null,b);return pU(c)}},J1a=function(a,b){var c=fW(a),d="string"===typeof c?b.g?b.g(c):b.call(null,c):c instanceof $APP.F?$APP.gj.h($APP.Cf(c),function(){var e=$APP.Gi(c);return b.g?b.g(e):b.call(null,e)}()):c instanceof $APP.q?$APP.lj.h($APP.Cf(c),function(){var e=$APP.Gi(c);return b.g?b.g(e):b.call(null,e)}()):null;return LV(a,qV(d))},K1a=function(a,b){b=$APP.Il.j(wV(a),new $APP.H(null,1,5,$APP.J,[$APP.cJ],null),$APP.sq.h(b,$APP.ef));
return LV(a,b)},L1a=function(a,b){var c=eW(a);c=c instanceof $APP.F?c.N:null;switch(c){case "token":return J1a(a,function(d){return[$APP.l.g(b),$APP.l.g(d)].join("")});case "multi-line":return K1a(a,function(d){return $APP.xe(d)?new $APP.H(null,1,5,$APP.J,[b],null):$APP.Il.j(d,new $APP.H(null,1,5,$APP.J,[0],null),function(e){return[$APP.l.g(b),$APP.l.g(e)].join("")})});default:throw Error(["No matching clause: ",$APP.l.g(c)].join(""));}},M1a=function(a,b){var c=eW(a);c=c instanceof $APP.F?c.N:null;
switch(c){case "token":return J1a(a,function(d){return[$APP.l.g(d),$APP.l.g(b)].join("")});case "multi-line":return K1a(a,function(d){return $APP.xe(d)?new $APP.H(null,1,5,$APP.J,[b],null):$APP.M.h($APP.Fi(d),new $APP.H(null,1,5,$APP.J,[[$APP.l.g($APP.oe(d)),$APP.l.g(b)].join("")],null))});default:throw Error(["No matching clause: ",$APP.l.g(c)].join(""));}},O1a=function(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return N1a(arguments[0],1<b.length?new $APP.Hd(b.slice(1),
0,null):null)},N1a=function(a,b){var c=$APP.y.j(b,0,null);return $APP.k(c)?function(d){var e=$APP.x.h(eW(d),a);return e?c.g?c.g(d):c.call(null,d):e}:function(d){return $APP.x.h(eW(d),a)}},qW=function(a,b,c){return $APP.v($APP.Ri.h($APP.sg(c),$APP.Qi.h($APP.sg(mW),$APP.Qi.h($APP.gf,$APP.Ng(b,a)))))},P1a=function(a,b,c){return $APP.oe($APP.Pg.h(function(d){var e=c.g?c.g(d):c.call(null,d);if($APP.k(e)){var f=$APP.Ce(b)?new $APP.H(null,2,5,$APP.J,[$APP.so.g(b),$APP.Ul.g(b)],null):b;e=$APP.y.j(f,0,null);
f=$APP.y.j(f,1,null);if(0>=e||0>=f)throw $APP.Zl.h("zipper row and col positions are ones-based",new $APP.h(null,1,[$APP.AK,b],null));var m=W0a(d),p=$APP.y.j(m,0,null);d=$APP.y.j(p,0,null);p=$APP.y.j(p,1,null);var u=$APP.y.j(m,1,null);m=$APP.y.j(u,0,null);u=$APP.y.j(u,1,null);var t=e>=d;e=t?(t=e<=m)?(d=$APP.x.h(e,d)?f>=p:!0)?$APP.x.h(e,m)?f<u:!0:d:t:t}return e},$APP.Qi.h($APP.sg(mW),$APP.Qi.h($APP.gf,$APP.Ng(MV,a)))))},rW=function(a,b,c){a=null==a?null:b.g?b.g(a):b.call(null,a);return null==a?null:
qW(a,b,c)},Q1a=function(a,b,c){return qW(a,b,function(d){return $APP.x.h(eW(d),c)})},R1a=function(a,b,c){return P1a(a,b,function(d){return $APP.x.h(eW(d),c)})},sW=function(a,b,c){return qW(a,b,N1a($APP.ZT,$APP.z([c])))},S1a=function(a,b,c){return sW(b.g?b.g(a):b.call(null,a),b,c)},tW=function(a,b,c){var d=$APP.ze(c)?$APP.sq.h(c,fW):function(e){return $APP.x.h(fW(e),c)};return sW(a,b,d)},T1a=function(a,b,c){return tW(b.g?b.g(a):b.call(null,a),b,c)},vW=function(a,b,c,d,e){e=pU(e);a=a.g?a.g(d):a.call(null,
d);return $APP.cf.j(b,d,$APP.M.l($APP.k($APP.k(a)?$APP.Cb(WV(a)):a)?new $APP.H(null,1,5,$APP.J,[uW],null):null,new $APP.H(null,1,5,$APP.J,[e],null),$APP.z([$APP.Cb(WV(d))?c:null])))},U1a=function(a,b){return vW(function(c){c=null==c?null:CV(c);return null==c?null:HV(c)},$0a,$APP.Sg,a,b)},wW=function(a){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,6,[$APP.Gm,null,$APP.vm,null,$APP.um,null,$APP.Fm,null,$APP.wm,null,$APP.ww,null],null),null),eW(a))},xW=function(a){return $APP.x.h(eW(a),$APP.Gm)},
V1a=function(a,b){var c=jW(b);return $APP.k(c)?(b=a.g?a.g(c):a.call(null,c),b=null==b?null:$APP.Ng(function(d){d=hW(d);return $APP.k(d)?a.g?a.g(d):a.call(null,d):null},b),b=null==b?null:$APP.Qi.h($APP.gf,b),b=null==b?null:$APP.oe(b),null==b?null:kW(b)):b},W1a=function(a,b){for(var c=jW(b);;){var d=c;d=$APP.k(d)?wV(c):d;if($APP.Cb(d))return b;c=hW(c);if($APP.k(c))d=a.g?a.g(c):a.call(null,c),$APP.k(d)?(c=d,b=hW(c),d=kW(c),c=b,b=d):c=hW(c);else return b}},yW=function(a){return xW(a)?nW(jW(a)):a},zW=
function(a,b){return xW(a)?kW(b):b},X1a=function(a,b){if($APP.x.h(eW(a),$APP.wm)){var c=null==a?null:jW(a);b=null==c?null:tW(c,hW,b);return null==b?null:hW(b)}if(xW(a))return c=null==a?null:jW(a),c=null==c?null:nW(c),c=null==c?null:jW(c),b=null==c?null:tW(c,hW,b),null==b?null:hW(b);c=$APP.y;var d=c.h;a=jW(a);a=null==a?null:$APP.Ng(hW,a);a=null==a?null:$APP.Qi.h($APP.gf,a);return d.call(c,a,b)},Y1a=function(a,b){return $APP.y.h($APP.Ng(GV,CV(a)),b)},Z1a=function(a){var b=null==a?null:wV(a);return null==
b?null:cW(b,bW.g($APP.ue(a)))},AW=function(a,b){var c=Z1a(a);b=b.g?b.g(c):b.call(null,c);return LV(a,FV(b))},$1a=function(a,b,c){return $APP.k(b.g?b.g(a):b.call(null,a))?(b=c.g?c.g(a):c.call(null,a),$APP.k(b)?b:a):a},a2a=function(a,b,c){for(;;){if($APP.k(mW(c)))return c;c=lW($1a(c,a,b))}},b2a=function(a,b,c){return AW(a,function(d){a:for(d=$APP.oe($APP.Qi.h($APP.gf,$APP.Ng(jW,d)));;)if(d=$1a(d,b,c),$APP.k(hW(d)))d=$APP.oe($APP.Qi.h($APP.gf,$APP.Ng(jW,hW(d))));else if($APP.k(kW(d)))d=kW(d);else break a;
return d})},c2a=function(a){return b2a(a,function(b){b=wV(b);return null!=b?$APP.yd===b.Qj?!0:b.kd?!1:$APP.Jb(qU,b):$APP.Jb(qU,b)},function(b){var c=DV(DV(b));c=$APP.k($APP.k(c)?xW(c):c)?c:null;return $APP.k($APP.k(c)?!$APP.pg($APP.de($APP.Qi.h($APP.gf,$APP.Ng(IV,b)))):c)?LV(b,rU(wV(b),$APP.v(lU(wV(c))))):LV(b,sU(wV(b)))})},d2a=function(a){return wV(a)},BW=function(a,b){return LV(a,pU(b))},CW=function(a){if($APP.k(xV(a))){var b=$APP.r($APP.Ri.h(VU,$APP.yf($APP.Ri.h(VU,yV(a)))));if(b){a=$APP.cf.j(KV,
a,b);if($APP.k(uV.g(a)))b=$APP.Xf(a),b=$APP.A.h(b,$APP.jD),a=$APP.r(b)?$APP.xi.l(a,$APP.ux,!0,$APP.z([$APP.bC,$APP.v(b),$APP.jD,$APP.w(b)])):null;else{$APP.y.j(a,0,null);b=$APP.y.j(a,1,null);b=$APP.Xf(b);var c=$APP.A.h(b,$APP.qx);a=$APP.r(c)?$APP.te(new $APP.H(null,2,5,$APP.J,[$APP.v(c),$APP.xi.j($APP.Il.j(b,new $APP.H(null,1,5,$APP.J,[$APP.qx],null),$APP.w),$APP.ux,!0)],null),$APP.ue(a)):null}b=ZV(GV,a);a=$APP.k(b)?b:a}else a=pW(a)}return a},DW=function(a,b){return vW(GV,KV,new $APP.H(null,1,5,$APP.J,
[uW],null),a,b)},EW=function(a,b){return vW(IV,JV,new $APP.H(null,1,5,$APP.J,[uW],null),a,b)},e2a=function(a,b){return vW(CV,Z0a,$APP.Sg,a,b)},f2a=function(a,b){return U1a(a,b)},FW=function(a){return iW(a)},GW=function(a){return hW(a)},g2a=function(a){return kW(a)},HW=function(a){return GV(a)},h2a=function(a){return IV(a)},i2a=function(a){return MV(a)},j2a=function(a,b){return KV(a,b)},k2a=function(a,b){return $0a(a,b)},IW=function(a){return wW(a)&&$APP.Cb($APP.r(fW(a)))},l2a=function(a,b){return $APP.x.h(0,
b)?a:$APP.oe($APP.Dg.h(b+1,$APP.Ng(g2a,a)))},KW=function(a,b){return JW.j($APP.oe($APP.Qi.h($APP.gf,$APP.Ng(g2a,a))),i2a,function(c){return $APP.x.h($APP.ue(wV(c)),$APP.ue(b))})},LW=function(a,b,c){return $APP.fj.h(d2a,$APP.Qi.h(c,$APP.Qi.h($APP.gf,$APP.Ng(b,a))))},m2a=function(a){return $APP.r(a)?VU($APP.v(a))?$APP.Ld(a):a:null},n2a=function(a){for(;;){if($APP.Cb(YV(a)))return a;a=OV(a)}},MW=function(a,b){switch(a instanceof $APP.F?a.N:null){case "list":return hV(b);case "vector":return iV(b);case "map":return kV(b);
case "set":return jV(b);default:throw $APP.Zl.h(["usupported wrap type: ",$APP.l.g(a)].join(""),$APP.Wf);}},NW=function(a){var b=$APP.x,c=b.h;a=null==a?null:wV(a);return c.call(b,null==a?null:$APP.Kb(a),$APP.Kb(mV(" ")))},o2a=function(a){var b=IV(a);a=OV(PV(a,$APP.tg(!0)));return $APP.k(b)?KW(a,wV(b)):a},p2a=function(a,b){if($APP.x.h(gW(a),'""'))return pW(a);var c=$APP.ue(wV(a)),d=$APP.so.g(b)-$APP.so.g(c),e=$APP.x.h($APP.so.g(b),$APP.so.g(c))?$APP.Ul.g(b)-($APP.Ul.g(c)+1):$APP.Ul.g(b)-1;return BW(a,
mV($APP.Il.j($APP.ef($APP.Dg.h(d+1,$APP.cJ.g(wV(a)))),new $APP.H(null,1,5,$APP.J,[d],null),function(f){return $APP.Yi.j(f,0,e)})))},q2a=function(a,b){return b<=$APP.de(a)?new $APP.H(null,2,5,$APP.J,[b-$APP.de($APP.Qi.h(function(c){return!$APP.x.h(c," ")},$APP.yf($APP.Dg.h(b,$APP.r(a))))),b+$APP.de($APP.Qi.h(function(c){return!($APP.x.h(c," ")||$APP.x.h(c,"\n"))},$APP.Eg.h(b,$APP.r(a))))],null):null},r2a=function(a,b){var c=q2a(a,b);return $APP.k(c)?(b=$APP.y.j(c,0,null),c=$APP.y.j(c,1,null),[$APP.Yi.j(a,
0,b),$APP.Yi.h(a,c)].join("")):null},s2a=function(a,b){var c=$APP.ue(wV(a)),d=$APP.so.g(b)-$APP.so.g(c),e=$APP.x.h(0,d)?$APP.Ul.g(b)-$APP.Ul.g(c):$APP.Ul.g(b);return BW(a,mV($APP.Il.j($APP.cJ.g(wV(a)),new $APP.H(null,1,5,$APP.J,[d],null),function(f){return r2a(f,e)})))},OW=function(a,b){if(IW(a))return new $APP.H(null,2,5,$APP.J,[b.g?b.g(a):b.call(null,a),0],null);if(null==a)b=null;else a:{a=kW(a);for(var c=1;;){if(null==a){b=null;break a}if(null!=(b.g?b.g(a):b.call(null,a))){b=new $APP.H(null,2,
5,$APP.J,[c,b.g?b.g(a):b.call(null,a)],null);break a}if(null==kW(a)){b=null;break a}a=kW(a);c+=1}}return null==b?null:$APP.yf(b)},t2a=function(a){var b=OW(a,GW),c=$APP.y.j(b,0,null);b=$APP.y.j(b,1,null);if($APP.Cb(c))return a;b=l2a(a,b);var d=$APP.Pg.h(function(e){return WU(e)||xU(e)},LW(GV(b),HW,function(e){return!$APP.x.h(wV(c),wV(e))}));return function(e){return IW(a)?QV(jW(e),WV):KW(e,wV(a))}(f2a($APP.Ml.h($APP.cf,f2a)(c1a(PV(b,YV)),d),wV(c)))},u2a=function(a){var b=function(){var d=null==a?null:
OW(a,GW);return null==d?null:$APP.v(d)}(),c=function(){var d=null==b?null:LW(b,GW,$APP.tg);d=null==d?null:$APP.de(d);return null==d?null:d+1}();return $APP.oe($APP.Dg.h(c,$APP.Ng(t2a,a)))},v2a=function(a){var b=OW(a,FW);if($APP.k(b)){var c=$APP.y.j(b,0,null);$APP.y.j(b,1,null);b=$APP.Pg.h(function(d){return WU(d)||xU(d)},LW(GV(c),HW,YV));return function(d){return IW(a)?PV(jW(d),XV):KW(d,wV(a))}(e2a($APP.Ml.h($APP.cf,e2a)(lW(OV(PV(function(d){var e=iW(c);e=$APP.k(e)?$APP.Cb(XV(IV(d))):e;return $APP.k(e)?
$V(d,1):d}(QV(c,t1a)),YV))),b),wV(c)))}return a},w2a=function(a,b){if(!$APP.Cb(kW(a))){var c=$APP.tg(!0);b=b.h?b.h(a,c):b.call(null,a,c);b=kW(b);b=CW.g?CW.g(b):CW.call(null,b);a=KW(b,wV(a))}return a},x2a=function(a){var b=kW(a);if($APP.Cb(b))return a;var c=eW(b);var d=hW(a);d=LW(d,h2a,$APP.tg);d=$APP.yf(m2a($APP.Ld(d)));var e=hW(a);e=LW(e,HW,$APP.tg);e=m2a(e);$APP.r(d)&&$APP.r(e)&&(b=pW(EW(EW(b,MW(c,d)),MW(c,e))),a=KW(b,wV(a)),a=$APP.k(a)?a:KW(b,$APP.oe(d)));return a},y2a=function(a,b){var c=$APP.ue(wV(a)),
d=$APP.so.g(b)-$APP.so.g(c),e=$APP.cJ.g(wV(a)),f=$APP.x.h($APP.so.g(b),$APP.so.g(c))?$APP.Ul.g(b)-($APP.Ul.g(c)+1):$APP.Ul.g(b)-1;return DW(BW(a,mV($APP.Il.j($APP.ef($APP.Dg.h(d+1,e)),new $APP.H(null,1,5,$APP.J,[d],null),function(m){return $APP.Yi.j(m,0,f)}))),mV($APP.Il.j($APP.ef($APP.Eg.h(d,e)),new $APP.H(null,1,5,$APP.J,[0],null),function(m){return $APP.Yi.h(m,f)})))},PW=new $APP.q(null,"auto-resolved?","auto-resolved?",-303944824,null),z2a=new $APP.q(null,"remove*","remove*",-1039003656,null),
QW=new $APP.F(null,"commas","commas",1094507436),A2a=new $APP.q("rewrite-clj.node","value","rewrite-clj.node/value",-732159104,null),B2a=new $APP.q(null,"-\x3eroot-string","-\x3eroot-string",1057289099,null),C2a=new $APP.q(null,"prev*","prev*",-98391779,null),D2a=new $APP.q(null,"map-vals","map-vals",-818445670,null),E2a=new $APP.q("rewrite-clj.zip","root","rewrite-clj.zip/root",1676550069,null),F2a=new $APP.q("rewrite-clj.paredit","splice-killing-backward","rewrite-clj.paredit/splice-killing-backward",
310640504,null),G2a=new $APP.q(null,"keyword-node","keyword-node",1365835578,null),H2a=new $APP.q("rewrite-clj.node","uneval-node","rewrite-clj.node/uneval-node",567781006,null),I2a=new $APP.q("rewrite-clj.node","map-node","rewrite-clj.node/map-node",1841144389,null),J2a=new $APP.q("rewrite-clj.zip","prev","rewrite-clj.zip/prev",649762864,null),RW=new $APP.q(null,"zloc","zloc",-482528240,null),K2a=new $APP.q(null,"position","position",-371200385,null),L2a=new $APP.q("rewrite-clj.node","node?","rewrite-clj.node/node?",
1743299246,null),M2a=new $APP.q("rewrite-clj.node","vector-node","rewrite-clj.node/vector-node",1314613621,null),N2a=new $APP.q(null,"pattern-string","pattern-string",-327196914,null),O2a=new $APP.q(null,"of-string*","of-string*",-1713659327,null),P2a=new $APP.q(null,"find-next-depth-first","find-next-depth-first",495552010,null),Q2a=new $APP.q("rewrite-clj.zip","find-next-token","rewrite-clj.zip/find-next-token",967604030,null),R2a=new $APP.q("rewrite-clj.paredit","join","rewrite-clj.paredit/join",
1962684002,null),S2a=new $APP.q(null,"forms-node","forms-node",1284122026,null),T2a=new $APP.F(null,"int","int",-1741416922),U2a=new $APP.q("rewrite-clj.zip","insert-left","rewrite-clj.zip/insert-left",376252912,null),V2a=new $APP.q("rewrite-clj.zip","of-string","rewrite-clj.zip/of-string",-1809472470,null),W2a=new $APP.q(null,"find-tag","find-tag",1309624400,null),X2a=new $APP.q("rewrite-clj.zip","print-root","rewrite-clj.zip/print-root",1359543544,null),l0a=new $APP.q(null,"read-token","read-token",
392624627,null),Y2a=new $APP.q(null,"slurp-backward-fully","slurp-backward-fully",-459030776,null),Z2a=new $APP.q(null,"insert-left*","insert-left*",-331277308,null),$2a=new $APP.q(null,"find-last-by-pos","find-last-by-pos",-2099911467,null),a3a=new $APP.q(null,"splice-killing-backward","splice-killing-backward",1391642395,null),b3a=new $APP.q(null,"find-next-tag","find-next-tag",532022898,null),c3a=new $APP.q("rewrite-clj.zip","insert-child","rewrite-clj.zip/insert-child",820888808,null),d3a=new $APP.q(null,
"root-string","root-string",-1309366614,null),e3a=new $APP.q(null,"find-next-token","find-next-token",1439744427,null),f3a=new $APP.q("rewrite-clj.zip","child-sexprs","rewrite-clj.zip/child-sexprs",486426579,null),g3a=new $APP.q("rewrite-clj.parser.core","dispatch","rewrite-clj.parser.core/dispatch",-1962626312,null),h3a=new $APP.q("rewrite-clj.node","whitespace-nodes","rewrite-clj.node/whitespace-nodes",1549252955,null),i3a=new $APP.q("rewrite-clj.node","newline-node","rewrite-clj.node/newline-node",
1695707042,null),j3a=new $APP.q("rewrite-clj.paredit","kill","rewrite-clj.paredit/kill",568157203,null),k3a=new $APP.q("rewrite-clj.node","map-context-apply","rewrite-clj.node/map-context-apply",-1964372922,null),l3a=new $APP.q(null,"edit-node","edit-node",-557486059,null),m3a=new $APP.q("rewrite-clj.node","raw-meta-node","rewrite-clj.node/raw-meta-node",103892874,null),SW=new $APP.F(null,"wrap-length","wrap-length",-268108519),n3a=new $APP.q("rewrite-clj.zip","up","rewrite-clj.zip/up",2102499745,
null),o3a=new $APP.q("rewrite-clj.zip","insert-newline-left","rewrite-clj.zip/insert-newline-left",190026550,null),p3a=new $APP.q(null,"set-node","set-node",-1175314694,null),q3a=new $APP.q(null,"left*","left*",2122475758,null),r3a=new $APP.q("rewrite-clj.paredit","splice-killing-forward","rewrite-clj.paredit/splice-killing-forward",847584124,null),s3a=new $APP.q("rewrite-clj.paredit","wrap-around","rewrite-clj.paredit/wrap-around",-745290392,null),TW=new $APP.F(null,"seq-fn","seq-fn",-991013231),
t3a=new $APP.q("rewrite-clj.node","map-qualifier-node","rewrite-clj.node/map-qualifier-node",847080829,null),u3a=new $APP.q("rewrite-clj.zip","find-token","rewrite-clj.zip/find-token",1930927546,null),v3a=new $APP.q(null,"unquote-node","unquote-node",-169205251,null),w3a=new $APP.q(null,"rightmost?","rightmost?",-2034235798,null),x3a=new $APP.q(null,"rightmost*","rightmost*",-686817564,null),y3a=new $APP.q("rewrite-clj.node","syntax-quote-node","rewrite-clj.node/syntax-quote-node",-1480128160,null),
z3a=new $APP.q("rewrite-clj.node","symbol-node?","rewrite-clj.node/symbol-node?",1105845260,null),A3a=new $APP.q("rewrite-clj.paredit","slurp-backward","rewrite-clj.paredit/slurp-backward",1085595173,null),QU=new $APP.F(null,"comma","comma",1699024745),B3a=new $APP.q("rewrite-clj.node","namespaced-map-node","rewrite-clj.node/namespaced-map-node",1636241056,null),C3a=new $APP.q("rewrite-clj.zip","splice","rewrite-clj.zip/splice",1484309403,null),D3a=new $APP.q("rewrite-clj.node","comment-node","rewrite-clj.node/comment-node",
1714189066,null),E3a=new $APP.q("rewrite-clj.node","tag","rewrite-clj.node/tag",1955193360,null),F3a=new $APP.q(null,"slurp-backward","slurp-backward",24786368,null),G3a=new $APP.q("rewrite-clj.node","var-node","rewrite-clj.node/var-node",1545203061,null),bW=new $APP.F("rewrite-clj.zip","opts","rewrite-clj.zip/opts",-1382883702),H3a=new $APP.q("rewrite-clj.zip","left","rewrite-clj.zip/left",635293979,null),I3a=new $APP.q(null,"find-depth-first","find-depth-first",-1257674889,null),J3a=new $APP.q(null,
"keyword-node?","keyword-node?",-1986799138,null),K3a=new $APP.q(null,"find-next","find-next",-758984784,null),L3a=new $APP.q(null,"kill","kill",1628195952,null),M3a=new $APP.q("rewrite-clj.node","token-node","rewrite-clj.node/token-node",-824377137,null),N3a=new $APP.q("rewrite-clj.node","coerce","rewrite-clj.node/coerce",1945099471,null),O3a=new $APP.q(null,"deref-node","deref-node",-1195516122,null),P3a=new $APP.q("rewrite-clj.zip","insert-left*","rewrite-clj.zip/insert-left*",-1071272301,null),
Q3a=new $APP.q("rewrite-clj.node","comment?","rewrite-clj.node/comment?",-505235704,null),AV=new $APP.F(null,"position","position",-2011731912),uV=new $APP.F("rewrite-clj.custom-zipper.core","custom?","rewrite-clj.custom-zipper.core/custom?",-1122119625),BV=new $APP.F(null,"left","left",-399115937),R3a=new $APP.q("rewrite-clj.zip","insert-right","rewrite-clj.zip/insert-right",1240710026,null),S3a=new $APP.q("rewrite-clj.zip","subedit-node","rewrite-clj.zip/subedit-node",-26892970,null),T3a=new $APP.q("rewrite-clj.zip",
"append-child*","rewrite-clj.zip/append-child*",312017385,null),U3a=new $APP.q("rewrite-clj.node","whitespace?","rewrite-clj.node/whitespace?",-1155325967,null),V3a=new $APP.q(null,"list-node","list-node",887782095,null),W3a=new $APP.q("rewrite-clj.node","whitespace-or-comment?","rewrite-clj.node/whitespace-or-comment?",-1926426417,null),X3a=new $APP.q("rewrite-clj.zip","map-keys","rewrite-clj.zip/map-keys",-910790738,null),Y3a=new $APP.q(null,"string-node","string-node",1969706986,null),UW=new $APP.q(null,
"p?","p?",468369826,null),Z3a=new $APP.q(null,"prepend-space","prepend-space",-763094232,null),$3a=new $APP.q(null,"sexpr-able?","sexpr-able?",1084129006,null),a4a=new $APP.q("rewrite-clj.node","sexpr","rewrite-clj.node/sexpr",-1868503488,null),b4a=new $APP.q(null,"whitespace-or-comment?","whitespace-or-comment?",-304852449,null),c4a=new $APP.q(null,"map-context-clear","map-context-clear",1382056931,null),d4a=new $APP.q("rewrite-clj.zip","replace","rewrite-clj.zip/replace",1443466110,null),e4a=new $APP.q(null,
"reapply-context","reapply-context",292435679,null),f4a=new $APP.q(null,"sexprs","sexprs",2063442121,null),g4a=new $APP.q(null,"insert-child*","insert-child*",-1445680733,null),h4a=new $APP.q(null,"integer-node","integer-node",1616855975,null),i4a=new $APP.q("rewrite-clj.zip","vector?","rewrite-clj.zip/vector?",-797709764,null),j4a=new $APP.q("rewrite-clj.zip","skip-whitespace-left","rewrite-clj.zip/skip-whitespace-left",-814067092,null),k4a=new $APP.q("rewrite-clj.node","line-separated","rewrite-clj.node/line-separated",
-1264782417,null),l4a=new $APP.q("rewrite-clj.zip","next","rewrite-clj.zip/next",1722366319,null),m4a=new $APP.q(null,"vector-node","vector-node",774154149,null),n4a=new $APP.q("rewrite-clj.node","whitespace-node","rewrite-clj.node/whitespace-node",-166869198,null),o4a=new $APP.q(null,"length","length",-2065447907,null),p4a=new $APP.q(null,"edn*","edn*",425368850,null),q4a=new $APP.q(null,"comma?","comma?",-1122266806,null),r4a=new $APP.q("rewrite-clj.zip","position","rewrite-clj.zip/position",-1929159672,
null),s4a=new $APP.q("rewrite-clj.paredit","split","rewrite-clj.paredit/split",-4507846,null),t4a=new $APP.q("rewrite-clj.node","spaces","rewrite-clj.node/spaces",388153482,null),u4a=new $APP.q(null,"prepend-newline","prepend-newline",-1324335219,null),v4a=new $APP.q("rewrite-clj.zip","postwalk","rewrite-clj.zip/postwalk",-444110539,null),w4a=new $APP.q(null,"printable-only?","printable-only?",361613452,null),x4a=new $APP.q("rewrite-clj.paredit","slurp-forward-fully","rewrite-clj.paredit/slurp-forward-fully",
1134635179,null),y4a=new $APP.q(null,"leader-length","leader-length",-1604296434,null),VW=new $APP.q(null,"macro-node","macro-node",-1359692574,null),wU=new $APP.F(null,"comment","comment",532206069),v1a=new $APP.F(null,"track-position?","track-position?",1860535489),z4a=new $APP.q("rewrite-clj.node","quote-node","rewrite-clj.node/quote-node",-1968910419,null),SV=new $APP.F(null,"unmatched","unmatched",1628955483),A4a=new $APP.q(null,"lines","lines",940365746,null),B4a=new $APP.q("rewrite-clj.zip",
"leftmost","rewrite-clj.zip/leftmost",-690099638,null),C4a=new $APP.q("rewrite-clj.zip","of-node","rewrite-clj.zip/of-node",204017766,null),D4a=new $APP.F(null,"reader","reader",169660853),E4a=new $APP.q("rewrite-clj.node","leader-length","rewrite-clj.node/leader-length",3089406,null),F4a=new $APP.q("rewrite-clj.node","replace-children","rewrite-clj.node/replace-children",1388173082,null),G4a=new $APP.q("rewrite-clj.zip","down","rewrite-clj.zip/down",-1820797594,null),H4a=new $APP.q("rewrite-clj.zip",
"next*","rewrite-clj.zip/next*",1632834063,null),I4a=new $APP.q("rewrite-clj.zip","string","rewrite-clj.zip/string",-954853658,null),J4a=new $APP.q(null,"raise","raise",1824672588,null),K4a=new $APP.q("rewrite-clj.zip","find-next-depth-first","rewrite-clj.zip/find-next-depth-first",1920332965,null),L4a=new $APP.q(null,"linebreak?","linebreak?",1689546852,null),M4a=new $APP.q(null,"whitespace?","whitespace?",445930913,null),WW=new $APP.F(null,"reader-macro","reader-macro",750056422),N4a=new $APP.q(null,
"find-token","find-token",389278535,null),O4a=new $APP.q("rewrite-clj.zip","map?","rewrite-clj.zip/map?",2042249157,null),P4a=new $APP.q(null,"slurp-forward","slurp-forward",774246961,null),Q4a=new $APP.q("rewrite-clj.zip","find-next-value","rewrite-clj.zip/find-next-value",1543586734,null),R4a=new $APP.q("rewrite-clj.zip","skip","rewrite-clj.zip/skip",1632720309,null),S4a=new $APP.q(null,"uneval-node","uneval-node",-1046551330,null),T4a=new $APP.q("rewrite-clj.zip","of-node*","rewrite-clj.zip/of-node*",
1727101465,null),U4a=new $APP.q(null,"replace*","replace*",1688093522,null),V4a=new $APP.q(null,"sexpr","sexpr",857187440,null),W4a=new $APP.q(null,"slurp-forward-fully","slurp-forward-fully",-2112868340,null),X4a=new $APP.q(null,"of-node*","of-node*",43324916,null),Y4a=new $APP.q("rewrite-clj.node","sexprs","rewrite-clj.node/sexprs",-628825447,null),Z4a=new $APP.q("rewrite-clj.node","comma-separated","rewrite-clj.node/comma-separated",2132322232,null),$4a=new $APP.q("rewrite-clj.node","meta-node",
"rewrite-clj.node/meta-node",756025115,null),a5a=new $APP.q(null,"split-at-pos","split-at-pos",-1301012891,null),b5a=new $APP.q("rewrite-clj.node","keyword-node","rewrite-clj.node/keyword-node",825307466,null),c5a=new $APP.q(null,"rewrite-clj.parser.core","rewrite-clj.parser.core",1408837387,null),d5a=new $APP.q(null,"spaces","spaces",2006516090,null),e5a=new $APP.q("rewrite-clj.zip","value","rewrite-clj.zip/value",-1741057211,null),f5a=new $APP.q("rewrite-clj.paredit","move-to-prev","rewrite-clj.paredit/move-to-prev",
-1640412638,null),g5a=new $APP.q("rewrite-clj.zip","edit-node","rewrite-clj.zip/edit-node",988475014,null),h5a=new $APP.q("rewrite-clj.zip","insert-child*","rewrite-clj.zip/insert-child*",1437800496,null),i5a=new $APP.q("rewrite-clj.zip","get","rewrite-clj.zip/get",-1560328071,null),j5a=new $APP.q("rewrite-clj.node","unquote-splicing-node","rewrite-clj.node/unquote-splicing-node",1455983140,null),k5a=new $APP.q("rewrite-clj.node","comma-node","rewrite-clj.node/comma-node",-1514795262,null),l5a=new $APP.q("rewrite-clj.zip",
"print","rewrite-clj.zip/print",-1956784318,null),m5a=new $APP.q(null,"subzip","subzip",1750940594,null),n5a=new $APP.q("rewrite-clj.zip","replace*","rewrite-clj.zip/replace*",1089663463,null),o5a=new $APP.q("rewrite-clj.zip","right*","rewrite-clj.zip/right*",532454960,null),p5a=new $APP.q("rewrite-clj.node","set-node","rewrite-clj.node/set-node",405098506,null),q5a=new $APP.q("rewrite-clj.zip","edit*","rewrite-clj.zip/edit*",-780485119,null),r5a=new $APP.q(null,"inner?","inner?",1594251881,null),
s5a=new $APP.q(null,"edit*","edit*",-178894740,null),t5a=new $APP.q(null,"skip-whitespace","skip-whitespace",-1365795337,null),u5a=new $APP.q(null,"append-child*","append-child*",2121971550,null),v5a=new $APP.q(null,"next*","next*",-1921539974,null),w5a=new $APP.q(null,"map-keys","map-keys",-304742863,null),x5a=new $APP.q(null,"map-node","map-node",-831069803,null),y5a=new $APP.q("rewrite-clj.node","length","rewrite-clj.node/length",606636621,null),z5a=new $APP.q(null,"insert-newline-right","insert-newline-right",
-560836101,null),A5a=new $APP.q("rewrite-clj.zip","find-tag-by-pos","rewrite-clj.zip/find-tag-by-pos",1631039971,null),B5a=new $APP.q("rewrite-clj.zip","up*","rewrite-clj.zip/up*",-1747452412,null),C5a=new $APP.q("rewrite-clj.paredit","barf-forward","rewrite-clj.paredit/barf-forward",1839833565,null),D5a=new $APP.q(null,"map-qualifier","map-qualifier",392413807,null),E5a=new $APP.q(null,"append-space","append-space",187959182,null),F5a=new $APP.q("rewrite-clj.zip","remove","rewrite-clj.zip/remove",
2111284378,null),XW=new $APP.q(null,"form-node","form-node",413863104,null),G5a=new $APP.q("rewrite-clj.zip","map","rewrite-clj.zip/map",1605266839,null),H5a=new $APP.q("rewrite-clj.zip","of-string*","rewrite-clj.zip/of-string*",1979208148,null),I5a=new $APP.q(null,"kill-at-pos","kill-at-pos",1361422606,null),J5a=new $APP.q(null,"map-qualifier-node","map-qualifier-node",-1850465651,null),K5a=new $APP.q("rewrite-clj.paredit","slurp-forward","rewrite-clj.paredit/slurp-forward",1861712338,null),L5a=
new $APP.q(null,"print-root","print-root",-1389597355,null),M5a=new $APP.q("rewrite-clj.zip","leftmost*","rewrite-clj.zip/leftmost*",1780342707,null),N5a=new $APP.q(null,"skip","skip",-2051720378,null),O5a=new $APP.q(null,"reader-macro-node","reader-macro-node",1742424216,null),P5a=new $APP.q("rewrite-clj.node","reader-macro-node","rewrite-clj.node/reader-macro-node",-947775832,null),Q5a=new $APP.q("rewrite-clj.zip","end?","rewrite-clj.zip/end?",1758263385,null),R5a=new $APP.q(null,"position-span",
"position-span",803718098,null),S5a=new $APP.q("rewrite-clj.node","string-node","rewrite-clj.node/string-node",363731418,null),T5a=new $APP.q("rewrite-clj.zip","insert-space-left","rewrite-clj.zip/insert-space-left",772006995,null),U5a=new $APP.q("rewrite-clj.parser","parse-string","rewrite-clj.parser/parse-string",207237463,null),V5a=new $APP.q("rewrite-clj.zip","whitespace-or-comment?","rewrite-clj.zip/whitespace-or-comment?",-1309622142,null),W5a=new $APP.q("rewrite-clj.zip","down*","rewrite-clj.zip/down*",
338184326,null),X5a=new $APP.q("rewrite-clj.paredit","splice","rewrite-clj.paredit/splice",-1125426783,null),Y5a=new $APP.q(null,"down*","down*",813038101,null),YW=new $APP.F(null,"deprecated","deprecated",1498275348),Z5a=new $APP.q("rewrite-clj.zip","leftmost?","rewrite-clj.zip/leftmost?",599810381,null),$5a=new $APP.q("rewrite-clj.zip","remove*","rewrite-clj.zip/remove*",507485515,null),a6a=new $APP.q("rewrite-clj.zip","prepend-space","rewrite-clj.zip/prepend-space",920685767,null),b6a=new $APP.q(null,
"subedit-node","subedit-node",-1706476743,null),RU=new $APP.F(null,"newline","newline",1790071323),c6a=new $APP.q("rewrite-clj.paredit","barf-backward","rewrite-clj.paredit/barf-backward",-1203715873,null),d6a=new $APP.q("rewrite-clj.node","eval-node","rewrite-clj.node/eval-node",-1327927851,null),e6a=new $APP.q("rewrite-clj.zip","append-newline","rewrite-clj.zip/append-newline",-1234353468,null),f6a=new $APP.q("rewrite-clj.zip","insert-newline-right","rewrite-clj.zip/insert-newline-right",985057102,
null),g6a=new $APP.q("rewrite-clj.node","sexpr-able?","rewrite-clj.node/sexpr-able?",-521690818,null),h6a=new $APP.q("rewrite-clj.node","linebreak?","rewrite-clj.node/linebreak?",125645364,null),i6a=new $APP.q("rewrite-clj.node","comma?","rewrite-clj.node/comma?",-590293222,null),j6a=new $APP.q(null,"eval-node","eval-node",277916581,null),V_a=new $APP.F(null,"next-col","next-col",601697889),k6a=new $APP.q("rewrite-clj.paredit","kill-one-at-pos","rewrite-clj.paredit/kill-one-at-pos",-1103758704,null),
l6a=new $APP.q(null,"leftmost*","leftmost*",301576526,null),m6a=new $APP.q(null,"leftmost?","leftmost?",-31657032,null),n6a=new $APP.q("rewrite-clj.zip","node","rewrite-clj.zip/node",1615815398,null),o6a=new $APP.q("rewrite-clj.zip","edit","rewrite-clj.zip/edit",604548110,null),p6a=new $APP.q("rewrite-clj.zip","append-space","rewrite-clj.zip/append-space",-284585703,null),q6a=new $APP.q(null,"insert-space-right","insert-space-right",-1929502473,null),r6a=new $APP.q(null,"append-newline","append-newline",
-363932885,null),s6a=new $APP.q("rewrite-clj.zip","edn*","rewrite-clj.zip/edn*",-39384153,null),t6a=new $APP.q(null,"regex-node","regex-node",-531443697,null),u6a=new $APP.q("rewrite-clj.node","keyword-node?","rewrite-clj.node/keyword-node?",1766497038,null),v6a=new $APP.q(null,"find-value","find-value",680029008,null),w6a=new $APP.q("rewrite-clj.zip","linebreak?","rewrite-clj.zip/linebreak?",1083736563,null),ZW=new $APP.F(null,"string-value","string-value",1109600561),x6a=new $APP.q("rewrite-clj.zip",
"skip-whitespace","rewrite-clj.zip/skip-whitespace",-890237084,null),y6a=new $APP.q("rewrite-clj.node","fn-node","rewrite-clj.node/fn-node",-518844813,null),$W=new $APP.F(null,"format-string","format-string",832187437),z6a=new $APP.q("rewrite-clj.zip","assoc","rewrite-clj.zip/assoc",1200833553,null),A6a=new $APP.q(null,"raw-meta-node","raw-meta-node",-1505262150,null),SU=new $APP.F(null,"whitespace","whitespace",-1340035483),B6a=new $APP.q(null,"comma-node","comma-node",-977187534,null),C6a=new $APP.q(null,
"namespaced-map-node","namespaced-map-node",-1051606832,null),D6a=new $APP.q("rewrite-clj.zip","find-next-tag","rewrite-clj.zip/find-next-tag",-480925695,null),E6a=new $APP.q(null,"unquote-splicing-node","unquote-splicing-node",-160347020,null),F6a=new $APP.q(null,"kill-one-at-pos","kill-one-at-pos",1910805101,null),G6a=new $APP.q("rewrite-clj.zip","edn","rewrite-clj.zip/edn",-1803969361,null),H6a=new $APP.q("rewrite-clj.zip","set?","rewrite-clj.zip/set?",228985181,null),I6a=new $APP.q("rewrite-clj.zip",
"insert-space-right","rewrite-clj.zip/insert-space-right",-1601071510,null),J6a=new $APP.q("rewrite-clj.zip","suffix","rewrite-clj.zip/suffix",1539982045,null),K6a=new $APP.q(null,"node?","node?",-946740002,null),aX=new $APP.q(null,"metadata","metadata",-855134172,null),L6a=new $APP.q(null,"whitespace-nodes","whitespace-nodes",1016004235,null),M6a=new $APP.F(null,"unknown","unknown",-935977881),N6a=new $APP.q("rewrite-clj.zip","seq?","rewrite-clj.zip/seq?",-271899244,null),O6a=new $APP.q(null,"namespaced-map?",
"namespaced-map?",848389202,null),P6a=new $APP.q("rewrite-clj.zip","reapply-context","rewrite-clj.zip/reapply-context",889952332,null),bX=new $APP.q(null,"string-value","string-value",-1544835208,null),Q6a=new $APP.q("rewrite-clj.zip","namespaced-map?","rewrite-clj.zip/namespaced-map?",-290073881,null),R6a=new $APP.q("rewrite-clj.zip","map-vals","rewrite-clj.zip/map-vals",-346352849,null),S6a=new $APP.q("rewrite-clj.node","list-node","rewrite-clj.node/list-node",-1806322433,null),T6a=new $APP.q("rewrite-clj.node",
"child-sexprs","rewrite-clj.node/child-sexprs",-522963056,null),k0a=new $APP.q("cljs.tools.reader.edn","read-token","cljs.tools.reader.edn/read-token",-1809266548,null),U6a=new $APP.q(null,"replace-children","replace-children",839291210,null),V6a=new $APP.q("rewrite-clj.zip","sexpr-able?","rewrite-clj.zip/sexpr-able?",-1530785415,null),W6a=new $APP.q("rewrite-clj.paredit","split-at-pos","rewrite-clj.paredit/split-at-pos",1925522950,null),X6a=new $APP.q(null,"splice","splice",2090119692,null),Y6a=
new $APP.q(null,"of-node","of-node",-535985419,null),Z6a=new $APP.q(null,"quote-node","quote-node",-353398275,null),$6a=new $APP.q("rewrite-clj.node","string","rewrite-clj.node/string",-1957936859,null),a7a=new $APP.q("rewrite-clj.node","inner?","rewrite-clj.node/inner?",-1082188743,null),b7a=new $APP.q(null,"fn-node","fn-node",1121734723,null),c7a=new $APP.q("rewrite-clj.zip","find-last-by-pos","rewrite-clj.zip/find-last-by-pos",-555125432,null),cX=new $APP.F(null,"newlines","newlines",-1185451518),
d7a=new $APP.q("rewrite-clj.node","newlines","rewrite-clj.node/newlines",2059451929,null),e7a=new $APP.q("rewrite-clj.zip","-\x3eroot-string","rewrite-clj.zip/-\x3eroot-string",-614440418,null),f7a=new $APP.q("rewrite-clj.zip","sexpr","rewrite-clj.zip/sexpr",-855951867,null),g7a=new $APP.q("rewrite-clj.node","map-context-clear","rewrite-clj.node/map-context-clear",-845594349,null),h7a=new $APP.q(null,"comma-separated","comma-separated",-549329464,null),l1a=new $APP.F(null,"delimiter","delimiter",
-1766618E3),i7a=new $APP.q("rewrite-clj.paredit","kill-at-pos","rewrite-clj.paredit/kill-at-pos",-1634565965,null),BU=new $APP.F(null,"auto-resolved?","auto-resolved?",-1944476351),dX=new $APP.F(null,"sexpr-fn","sexpr-fn",-1214941414),m1a=new $APP.F(null,"sharp","sharp",-83698408),j7a=new $APP.q("rewrite-clj.zip","insert-right*","rewrite-clj.zip/insert-right*",-1993433014,null),k7a=new $APP.q("rewrite-clj.zip","append-child","rewrite-clj.zip/append-child",2115158186,null),l7a=new $APP.q(null,"wrap-around",
"wrap-around",331492491,null),eX=new $APP.F(null,"sexpr-count","sexpr-count",890534957),m7a=new $APP.q(null,"splice-killing-forward","splice-killing-forward",-220957927,null),n7a=new $APP.q("rewrite-clj.zip","find-next","rewrite-clj.zip/find-next",-157197051,null),o7a=new $APP.q("rewrite-clj.zip","prepend-newline","rewrite-clj.zip/prepend-newline",-584266208,null),p7a=new $APP.q(null,"newlines","newlines",455080009,null),q7a=new $APP.q(null,"barf-forward","barf-forward",-1375823432,null),r7a=new $APP.q(null,
"line-separated","line-separated",1424732543,null),fX=new $APP.F(null,"map-qualifier","map-qualifier",-1248117720),EV=new $APP.F(null,"end?","end?",-1423391609),s7a=new $APP.q(null,"edn","edn",-1336594884,null),t7a=new $APP.q("rewrite-clj.node","integer-node","rewrite-clj.node/integer-node",396759,null),u7a=new $APP.q("rewrite-clj.zip","remove-preserve-newline","rewrite-clj.zip/remove-preserve-newline",1001000374,null),v7a=new $APP.q("rewrite-clj.zip","rightmost","rewrite-clj.zip/rightmost",-1381547086,
null),w7a=new $APP.q(null,"whitespace-node","whitespace-node",-1765635742,null),x7a=new $APP.q(null,"insert-space-left","insert-space-left",309270208,null),m0a=new $APP.q(null,"validate-leading?","validate-leading?",1185429770,null),y7a=new $APP.q("rewrite-clj.zip","whitespace?","rewrite-clj.zip/whitespace?",1992871476,null),z7a=new $APP.q(null,"comment-node","comment-node",-2031963654,null),A7a=new $APP.q("rewrite-clj.node","deref-node","rewrite-clj.node/deref-node",-653848298,null),B7a=new $APP.q("rewrite-clj.parser",
"parse-string-all","rewrite-clj.parser/parse-string-all",-427971892,null),C7a=new $APP.q("rewrite-clj.paredit","slurp-backward-fully","rewrite-clj.paredit/slurp-backward-fully",609257453,null),D7a=new $APP.q("rewrite-clj.paredit","wrap-fully-forward-slurp","rewrite-clj.paredit/wrap-fully-forward-slurp",1172546728,null),E7a=new $APP.q(null,"find-next-value","find-next-value",6148379,null),gX=new $APP.F(null,"children","children",-940561982),F7a=new $APP.F(null,"multi-line","multi-line",240640676),
G7a=new $APP.q(null,"var-node","var-node",-60772539,null),U_a=new $APP.F(null,"next-row","next-row",-408963777),H7a=new $APP.q("rewrite-clj.zip","prewalk","rewrite-clj.zip/prewalk",-1411096635,null),I7a=new $APP.q("rewrite-clj.zip","length","rewrite-clj.zip/length",-133212752,null),J7a=new $APP.q(null,"symbol-node?","symbol-node?",643702364,null),K7a=new $APP.q("rewrite-clj.zip","find-tag","rewrite-clj.zip/find-tag",1641274085,null),L7a=new $APP.q("rewrite-clj.node","forms-node","rewrite-clj.node/forms-node",
-1396481030,null),M7a=new $APP.q("rewrite-clj.zip","prev*","rewrite-clj.zip/prev*",-1777935446,null),N7a=new $APP.q("rewrite-clj.zip","find-value","rewrite-clj.zip/find-value",77962725,null),O7a=new $APP.q(null,"remove-preserve-newline","remove-preserve-newline",1549188633,null),P7a=new $APP.q(null,"wrap-fully-forward-slurp","wrap-fully-forward-slurp",-2058318763,null),Q7a=new $APP.q(null,"insert-newline-left","insert-newline-left",1873797795,null),R7a=new $APP.q("rewrite-clj.zip","find-depth-first",
"rewrite-clj.zip/find-depth-first",-1993009766,null),S7a=new $APP.q("rewrite-clj.zip","rightmost*","rewrite-clj.zip/rightmost*",-215323559,null),T7a=new $APP.q("rewrite-clj.zip","prefix","rewrite-clj.zip/prefix",1980467147,null),U7a=new $APP.q("rewrite-clj.zip","rightmost?","rewrite-clj.zip/rightmost?",-635457025,null),V7a=new $APP.q("rewrite-clj.zip","subzip","rewrite-clj.zip/subzip",1417324871,null),W7a=new $APP.q(null,"skip-whitespace-left","skip-whitespace-left",-346096397,null),X7a=new $APP.q(null,
"up*","up*",1811123313,null),Y7a=new $APP.q(null,"right*","right*",2052648867,null),Z7a=new $APP.q("rewrite-clj.paredit","raise","rewrite-clj.paredit/raise",-1401867345,null),$7a=new $APP.q("rewrite-clj.node","printable-only?","rewrite-clj.node/printable-only?",-171537668,null),a8a=new $APP.q(null,"-\x3estring","-\x3estring",-2061296812,null),b8a=new $APP.q(null,"map-context-apply","map-context-apply",895274550,null),c8a=new $APP.q("rewrite-clj.zip","find","rewrite-clj.zip/find",-1821272236,null),
d8a=new $APP.q(null,"find-tag-by-pos","find-tag-by-pos",-1109778610,null),e8a=new $APP.q("rewrite-clj.zip","left*","rewrite-clj.zip/left*",1520819843,null),f8a=new $APP.q("rewrite-clj.node","children","rewrite-clj.node/children",-1989020071,null),g8a=new $APP.q(null,"syntax-quote-node","syntax-quote-node",101470128,null),h8a=new $APP.q(null,"barf-backward","barf-backward",2075385722,null),i8a=new $APP.q(null,"insert-right*","insert-right*",1858211517,null),j8a=new $APP.q(null,"meta-node","meta-node",
-850475573,null),C1a=new $APP.F("rewrite-clj.zip.move","end?","rewrite-clj.zip.move/end?",891526475),k8a=new $APP.q(null,"newline-node","newline-node",-975655470,null),l8a=new $APP.q(null,"child-sexprs","child-sexprs",1076032576,null),m8a=new $APP.q(null,"comment?","comment?",28866040,null),n8a=new $APP.q(null,"token-node","token-node",773308959,null),o8a=new $APP.q(null,"move-to-prev","move-to-prev",1584288385,null),p8a=new $APP.q("rewrite-clj.zip","root-string","rewrite-clj.zip/root-string",-1785710523,
null),q8a=new $APP.F(null,"meta*","meta*",-949431606),r8a=new $APP.q(null,"of-string","of-string",2046441373,null),s8a=new $APP.q("rewrite-clj.zip","tag","rewrite-clj.zip/tag",1218687571,null),T_a=new $APP.q(null,"?_current-ns_?","?_current-ns_?",1667571229,null),t8a=new $APP.q("rewrite-clj.node","regex-node","rewrite-clj.node/regex-node",1334514239,null),u8a=new $APP.q("rewrite-clj.zip","right","rewrite-clj.zip/right",1655332499,null),v8a=new $APP.q("rewrite-clj.node","unquote-node","rewrite-clj.node/unquote-node",
1436589997,null),w8a=new $APP.q("rewrite-clj.zip","-\x3estring","rewrite-clj.zip/-\x3estring",-1580209927,null),x8a=new $APP.q("rewrite-clj.zip","list?","rewrite-clj.zip/list?",-1550467026,null),y8a=new $APP.q("rewrite-clj.zip","position-span","rewrite-clj.zip/position-span",-885312921,null);var tU=function tU(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return tU.l(arguments[0],1<c.length?new $APP.Hd(c.slice(1),0,null):null)};tU.l=function(a,b){return $APP.qg.j($APP.YT,a,b)};tU.B=1;tU.G=function(a){var b=$APP.v(a);a=$APP.w(a);return this.l(b,a)};aU._=function(){return M6a};bU._=function(){return M6a};cU._=function(){return!1};dU._=function(a){return a};eU._=function(a){return $APP.de(fU(a))};fU._=function(a){return $APP.xj.l($APP.z([a]))};var gU=function gU(a){switch(arguments.length){case 1:return gU.g(arguments[0]);case 2:return gU.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};gU.g=function(a){return gU.h(a,$APP.Wf)};gU.h=function(a,b){return dU(a,b)};gU.B=2;kU._=function(){return!1};
lU._=function(){throw $APP.Zl.h("unsupported operation",$APP.Wf);};mU._=function(){throw $APP.Zl.h("unsupported operation",$APP.Wf);};nU._=function(){throw $APP.Zl.h("unsupported operation",$APP.Wf);};$APP.g=vU.prototype;$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "prefix":return this.prefix;case "s":return this.ua;default:return $APP.A.j(this.o,b,c)}};$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.comment.CommentNode{",", ","}",c,$APP.M.h(new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[$APP.YG,this.prefix],null),new $APP.H(null,2,5,$APP.J,[$APP.Tm,this.ua],null)],null),this.o))};$APP.g.fa=function(){return new $APP.vh(this,2,new $APP.H(null,2,5,$APP.J,[$APP.YG,$APP.Tm],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};$APP.g.U=function(){return this.A};
$APP.g.ca=function(){return new vU(this.prefix,this.ua,this.A,this.o,this.C)};$APP.g.aa=function(){return 2+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=495469178^$APP.Pd(this)};$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.prefix,b.prefix)&&$APP.x.h(this.ua,b.ua)&&$APP.x.h(this.o,b.o)};$APP.g.Fc=function(){return wU};$APP.g.Cc=function(){return wU};$APP.g.Dc=function(){return!0};
$APP.g.Ec=function(){throw $APP.Zl.h("unsupported operation",$APP.Wf);};$APP.g.Bc=function(){return $APP.de(this.prefix)+$APP.de(this.ua)};$APP.g.Na=function(){return[$APP.l.g(this.prefix),$APP.l.g(this.ua)].join("")};$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,2,[$APP.Tm,null,$APP.YG,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new vU(this.prefix,this.ua,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};
$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "prefix":case "s":return!0;default:return $APP.Ue(this.o,b)}};$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h($APP.YG,b):$APP.G.call(null,$APP.YG,b))?new vU(c,this.ua,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h($APP.Tm,b):$APP.G.call(null,$APP.Tm,b))?new vU(this.prefix,c,this.A,this.o,null):new vU(this.prefix,this.ua,this.A,$APP.xi.j(this.o,b,c),null)};
$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,2,5,$APP.J,[new $APP.Ve($APP.YG,this.prefix,null),new $APP.Ve($APP.Tm,this.ua,null)],null),this.o))};$APP.g.V=function(a,b){return new vU(this.prefix,this.ua,b,this.o,this.C)};$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};uU(vU);$APP.g=yU.prototype;$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "children":return this.children;default:return $APP.A.j(this.o,b,c)}};$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.fn.FnNode{",", ","}",c,$APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[gX,this.children],null)],null),this.o))};$APP.g.fa=function(){return new $APP.vh(this,1,new $APP.H(null,1,5,$APP.J,[gX],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ca=function(){return new yU(this.children,this.A,this.o,this.C)};
$APP.g.aa=function(){return 1+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=-1740346885^$APP.Pd(this)};$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.children,b.children)&&$APP.x.h(this.o,b.o)};$APP.g.Fc=function(){return $APP.In};$APP.g.Cc=function(){return $APP.In};$APP.g.Dc=function(){return!1};$APP.g.Ec=function(a,b){return $_a(hU(this.children,b))};$APP.g.Bc=function(){return 3+iU(this.children)};
$APP.g.Na=function(){return["#(",$APP.l.g(jU(this.children)),")"].join("")};$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,1,[gX,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new yU(this.children,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};$APP.g.xf=function(){return!0};$APP.g.wf=function(){return this.children};$APP.g.ef=function(a,b){return $APP.xi.j(this,gX,b)};$APP.g.df=function(){return 2};
$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "children":return!0;default:return $APP.Ue(this.o,b)}};$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h(gX,b):$APP.G.call(null,gX,b))?new yU(c,this.A,this.o,null):new yU(this.children,this.A,$APP.xi.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.Ve(gX,this.children,null)],null),this.o))};$APP.g.V=function(a,b){return new yU(this.children,b,this.o,this.C)};
$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};uU(yU);$APP.g=zU.prototype;$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "children":return this.children;default:return $APP.A.j(this.o,b,c)}};$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.forms.FormsNode{",", ","}",c,$APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[gX,this.children],null)],null),this.o))};$APP.g.fa=function(){return new $APP.vh(this,1,new $APP.H(null,1,5,$APP.J,[gX],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ca=function(){return new zU(this.children,this.A,this.o,this.C)};
$APP.g.aa=function(){return 1+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=116885345^$APP.Pd(this)};$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.children,b.children)&&$APP.x.h(this.o,b.o)};$APP.g.Fc=function(){return $APP.ww};$APP.g.Cc=function(){return $APP.ww};$APP.g.Dc=function(){return!1};$APP.g.Ec=function(a,b){a=hU(this.children,b);return $APP.w(a)?$APP.Hs.h($APP.nk,a):$APP.v(a)};$APP.g.Bc=function(){return iU(this.children)};
$APP.g.Na=function(){return jU(this.children)};$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,1,[gX,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new zU(this.children,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};$APP.g.xf=function(){return!0};$APP.g.wf=function(){return this.children};$APP.g.ef=function(a,b){return $APP.xi.j(this,gX,b)};$APP.g.df=function(){return 0};
$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "children":return!0;default:return $APP.Ue(this.o,b)}};$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h(gX,b):$APP.G.call(null,gX,b))?new zU(c,this.A,this.o,null):new zU(this.children,this.A,$APP.xi.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.Ve(gX,this.children,null)],null),this.o))};$APP.g.V=function(a,b){return new zU(this.children,b,this.o,this.C)};
$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};uU(zU);$APP.g=AU.prototype;$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "value":return this.value;case "base":return this.Xc;default:return $APP.A.j(this.o,b,c)}};$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.integer.IntNode{",", ","}",c,$APP.M.h(new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[$APP.JI,this.value],null),new $APP.H(null,2,5,$APP.J,[$APP.FF,this.Xc],null)],null),this.o))};$APP.g.fa=function(){return new $APP.vh(this,2,new $APP.H(null,2,5,$APP.J,[$APP.JI,$APP.FF],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};$APP.g.U=function(){return this.A};
$APP.g.ca=function(){return new AU(this.value,this.Xc,this.A,this.o,this.C)};$APP.g.aa=function(){return 2+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=-2088146928^$APP.Pd(this)};$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.value,b.value)&&$APP.x.h(this.Xc,b.Xc)&&$APP.x.h(this.o,b.o)};$APP.g.Fc=function(){return $APP.ZT};$APP.g.Cc=function(){return T2a};$APP.g.Dc=function(){return!1};$APP.g.Ec=function(){return this.value};
$APP.g.Bc=function(){return $APP.de(this.Na(null))};$APP.g.Na=function(){var a=this,b=0>a.value?"-":null,c=Q_a(function(){var e=a.value;return 0>a.value?-e:e}(),a.Xc),d=function(){switch($APP.lf(a.Xc)){case 8:return"0";case 10:return"";case 16:return"0x";default:return[$APP.l.g(a.Xc),"r"].join("")}}();return[b,$APP.l.g(d),$APP.l.g(c)].join("")};
$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,2,[$APP.JI,null,$APP.FF,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new AU(this.value,this.Xc,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "value":case "base":return!0;default:return $APP.Ue(this.o,b)}};
$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h($APP.JI,b):$APP.G.call(null,$APP.JI,b))?new AU(c,this.Xc,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h($APP.FF,b):$APP.G.call(null,$APP.FF,b))?new AU(this.value,c,this.A,this.o,null):new AU(this.value,this.Xc,this.A,$APP.xi.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,2,5,$APP.J,[new $APP.Ve($APP.JI,this.value,null),new $APP.Ve($APP.FF,this.Xc,null)],null),this.o))};
$APP.g.V=function(a,b){return new AU(this.value,this.Xc,b,this.o,this.C)};$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};uU(AU);$APP.g=CU.prototype;$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "k":return this.k;case "auto-resolved?":return this.Lb;case "map-qualifier":return this.mc;default:return $APP.A.j(this.o,b,c)}};$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};$APP.g.Qj=$APP.yd;
$APP.g.Rj=function(a,b){return $APP.xi.j(this,fX,b)};$APP.g.Sj=function(){return $APP.xi.j(this,fX,null)};$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.keyword.KeywordNode{",", ","}",c,$APP.M.h(new $APP.H(null,3,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[$APP.aK,this.k],null),new $APP.H(null,2,5,$APP.J,[BU,this.Lb],null),new $APP.H(null,2,5,$APP.J,[fX,this.mc],null)],null),this.o))};
$APP.g.fa=function(){return new $APP.vh(this,3,new $APP.H(null,3,5,$APP.J,[$APP.aK,BU,fX],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ca=function(){return new CU(this.k,this.Lb,this.mc,this.A,this.o,this.C)};$APP.g.aa=function(){return 3+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=-1681863292^$APP.Pd(this)};
$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.k,b.k)&&$APP.x.h(this.Lb,b.Lb)&&$APP.x.h(this.mc,b.mc)&&$APP.x.h(this.o,b.o)};$APP.g.Fc=function(){return $APP.ZT};$APP.g.Cc=function(){return $APP.Cm};$APP.g.Dc=function(){return!1};
$APP.g.Ec=function(a,b){a=this.k;var c=this.Lb,d=this.mc;b=$APP.Xf(b);b=$APP.A.h(b,$APP.Oo);d=a0a(d,b0a(a,c));c=$APP.gj.h;$APP.k(BU.g(d))?(d=$APP.YG.g(d),d=null==d?null:$APP.lj.g(d),d=$APP.k(d)?d:$APP.lo,b=$APP.k(b)?b:oU,b=b.g?b.g(d):b.call(null,d)):b=$APP.YG.g(d);b=null==b?null:$APP.l.g(b);return a=c.call($APP.gj,b,$APP.Gi(a))};$APP.g.Bc=function(){var a=$APP.Gi(this.k).length+1;if($APP.k(this.Lb))return a+1;var b=$APP.Cf(this.k);return $APP.k(b)?1+a+b.length:a};
$APP.g.Na=function(){return[$APP.k(this.Lb)?":":null,$APP.xj.l($APP.z([this.k]))].join("")};$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,3,[BU,null,fX,null,$APP.aK,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new CU(this.k,this.Lb,this.mc,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "k":case "auto-resolved?":case "map-qualifier":return!0;default:return $APP.Ue(this.o,b)}};
$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h($APP.aK,b):$APP.G.call(null,$APP.aK,b))?new CU(c,this.Lb,this.mc,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h(BU,b):$APP.G.call(null,BU,b))?new CU(this.k,c,this.mc,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h(fX,b):$APP.G.call(null,fX,b))?new CU(this.k,this.Lb,c,this.A,this.o,null):new CU(this.k,this.Lb,this.mc,this.A,$APP.xi.j(this.o,b,c),null)};
$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,3,5,$APP.J,[new $APP.Ve($APP.aK,this.k,null),new $APP.Ve(BU,this.Lb,null),new $APP.Ve(fX,this.mc,null)],null),this.o))};$APP.g.V=function(a,b){return new CU(this.k,this.Lb,this.mc,b,this.o,this.C)};$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};uU(CU);$APP.g=LU.prototype;$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "whitespace":return this.jf;default:return $APP.A.j(this.o,b,c)}};$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.whitespace.WhitespaceNode{",", ","}",c,$APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[SU,this.jf],null)],null),this.o))};$APP.g.fa=function(){return new $APP.vh(this,1,new $APP.H(null,1,5,$APP.J,[SU],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ca=function(){return new LU(this.jf,this.A,this.o,this.C)};
$APP.g.aa=function(){return 1+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=1595850179^$APP.Pd(this)};$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.jf,b.jf)&&$APP.x.h(this.o,b.o)};$APP.g.Fc=function(){return SU};$APP.g.Cc=function(){return SU};$APP.g.Dc=function(){return!0};$APP.g.Ec=function(){return q0a()};$APP.g.Bc=function(){return $APP.de(this.jf)};$APP.g.Na=function(){return this.jf};
$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,1,[SU,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new LU(this.jf,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "whitespace":return!0;default:return $APP.Ue(this.o,b)}};$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h(SU,b):$APP.G.call(null,SU,b))?new LU(c,this.A,this.o,null):new LU(this.jf,this.A,$APP.xi.j(this.o,b,c),null)};
$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.Ve(SU,this.jf,null)],null),this.o))};$APP.g.V=function(a,b){return new LU(this.jf,b,this.o,this.C)};$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};$APP.g=NU.prototype;$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};
$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "commas":return this.Re;default:return $APP.A.j(this.o,b,c)}};$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.whitespace.CommaNode{",", ","}",c,$APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[QW,this.Re],null)],null),this.o))};$APP.g.fa=function(){return new $APP.vh(this,1,new $APP.H(null,1,5,$APP.J,[QW],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ca=function(){return new NU(this.Re,this.A,this.o,this.C)};
$APP.g.aa=function(){return 1+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=-551131754^$APP.Pd(this)};$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.Re,b.Re)&&$APP.x.h(this.o,b.o)};$APP.g.Fc=function(){return QU};$APP.g.Cc=function(){return QU};$APP.g.Dc=function(){return!0};$APP.g.Ec=function(){return q0a()};$APP.g.Bc=function(){return $APP.de(this.Re)};$APP.g.Na=function(){return this.Re};
$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,1,[QW,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new NU(this.Re,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "commas":return!0;default:return $APP.Ue(this.o,b)}};$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h(QW,b):$APP.G.call(null,QW,b))?new NU(c,this.A,this.o,null):new NU(this.Re,this.A,$APP.xi.j(this.o,b,c),null)};
$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.Ve(QW,this.Re,null)],null),this.o))};$APP.g.V=function(a,b){return new NU(this.Re,b,this.o,this.C)};$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};$APP.g=OU.prototype;$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};
$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "newlines":return this.Ye;default:return $APP.A.j(this.o,b,c)}};$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.whitespace.NewlineNode{",", ","}",c,$APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[cX,this.Ye],null)],null),this.o))};$APP.g.fa=function(){return new $APP.vh(this,1,new $APP.H(null,1,5,$APP.J,[cX],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ca=function(){return new OU(this.Ye,this.A,this.o,this.C)};
$APP.g.aa=function(){return 1+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=979711303^$APP.Pd(this)};$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.Ye,b.Ye)&&$APP.x.h(this.o,b.o)};$APP.g.Fc=function(){return RU};$APP.g.Cc=function(){return RU};$APP.g.Dc=function(){return!0};$APP.g.Ec=function(){return q0a()};$APP.g.Bc=function(){return $APP.de.call(null,this.Ye)};$APP.g.Na=function(){return this.Ye};
$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,1,[cX,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new OU(this.Ye,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "newlines":return!0;default:return $APP.Ue(this.o,b)}};$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h(cX,b):$APP.G.call(null,cX,b))?new OU(c,this.A,this.o,null):new OU(this.Ye,this.A,$APP.xi.j(this.o,b,c),null)};
$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.Ve(cX,this.Ye,null)],null),this.o))};$APP.g.V=function(a,b){return new OU(this.Ye,b,this.o,this.C)};$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};uU(LU);uU(NU);uU(OU);var t0a=s0a(", "),z8a=PU("\n"),T0a=MU(" ");$APP.g=XU.prototype;$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "tag":return this.tag;case "prefix":return this.prefix;case "children":return this.children;default:return $APP.A.j(this.o,b,c)}};$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.meta.MetaNode{",", ","}",c,$APP.M.h(new $APP.H(null,3,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[$APP.Dm,this.tag],null),new $APP.H(null,2,5,$APP.J,[$APP.YG,this.prefix],null),new $APP.H(null,2,5,$APP.J,[gX,this.children],null)],null),this.o))};$APP.g.fa=function(){return new $APP.vh(this,3,new $APP.H(null,3,5,$APP.J,[$APP.Dm,$APP.YG,gX],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};
$APP.g.U=function(){return this.A};$APP.g.ca=function(){return new XU(this.tag,this.prefix,this.children,this.A,this.o,this.C)};$APP.g.aa=function(){return 3+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=1501447658^$APP.Pd(this)};$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.tag,b.tag)&&$APP.x.h(this.prefix,b.prefix)&&$APP.x.h(this.children,b.children)&&$APP.x.h(this.o,b.o)};$APP.g.Fc=function(){return this.tag};$APP.g.Cc=function(){return $APP.mb};
$APP.g.Dc=function(){return!1};$APP.g.Ec=function(a,b){a=hU(this.children,b);var c=$APP.y.j(a,0,null);a=$APP.y.j(a,1,null);b=$APP.ko.j;if(!$APP.Ce(c))if(c instanceof $APP.F)c=$APP.Vf([c,!0]);else if(c instanceof $APP.q)c=new $APP.h(null,1,[$APP.Dm,c],null);else if("string"===typeof c)c=new $APP.h(null,1,[$APP.Dm,c],null);else if($APP.Ee(c))c=new $APP.h(null,1,[$APP.Em,c],null);else throw $APP.Zl.h("Metadata must be a map, keyword, symbol or string",$APP.Wf);return b.call($APP.ko,a,$APP.Kl,c)};
$APP.g.Bc=function(){return $APP.de(this.prefix)+iU(this.children)};$APP.g.Na=function(){return[$APP.l.g(this.prefix),$APP.l.g(jU(this.children))].join("")};$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,3,[gX,null,$APP.YG,null,$APP.Dm,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new XU(this.tag,this.prefix,this.children,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};$APP.g.xf=function(){return!0};$APP.g.wf=function(){return this.children};
$APP.g.ef=function(a,b){return $APP.xi.j(this,gX,b)};$APP.g.df=function(){return $APP.de(this.prefix)};$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "tag":case "prefix":case "children":return!0;default:return $APP.Ue(this.o,b)}};
$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h($APP.Dm,b):$APP.G.call(null,$APP.Dm,b))?new XU(c,this.prefix,this.children,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h($APP.YG,b):$APP.G.call(null,$APP.YG,b))?new XU(this.tag,c,this.children,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h(gX,b):$APP.G.call(null,gX,b))?new XU(this.tag,this.prefix,c,this.A,this.o,null):new XU(this.tag,this.prefix,this.children,this.A,$APP.xi.j(this.o,b,c),null)};
$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,3,5,$APP.J,[new $APP.Ve($APP.Dm,this.tag,null),new $APP.Ve($APP.YG,this.prefix,null),new $APP.Ve(gX,this.children,null)],null),this.o))};$APP.g.V=function(a,b){return new XU(this.tag,this.prefix,this.children,b,this.o,this.C)};$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};uU(XU);$APP.g=ZU.prototype;$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "auto-resolved?":return this.Lb;case "prefix":return this.prefix;default:return $APP.A.j(this.o,b,c)}};$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.namespaced-map.MapQualifierNode{",", ","}",c,$APP.M.h(new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[BU,this.Lb],null),new $APP.H(null,2,5,$APP.J,[$APP.YG,this.prefix],null)],null),this.o))};$APP.g.fa=function(){return new $APP.vh(this,2,new $APP.H(null,2,5,$APP.J,[BU,$APP.YG],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};$APP.g.U=function(){return this.A};
$APP.g.ca=function(){return new ZU(this.Lb,this.prefix,this.A,this.o,this.C)};$APP.g.aa=function(){return 2+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=-426705749^$APP.Pd(this)};$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.Lb,b.Lb)&&$APP.x.h(this.prefix,b.prefix)&&$APP.x.h(this.o,b.o)};$APP.g.Fc=function(){return fX};$APP.g.Cc=function(){return fX};$APP.g.Dc=function(){return!1};
$APP.g.Ec=function(a,b){return $APP.k(this.Lb)?(a=$APP.k(this.prefix)?$APP.lj.g(this.prefix):$APP.lo,b=$APP.Oo.g(b),b=$APP.k(b)?b:oU,b.g?b.g(a):b.call(null,a)):$APP.lj.g(this.prefix)};$APP.g.Bc=function(){return 1+($APP.k(this.Lb)?1:0)+$APP.de(this.prefix)};$APP.g.Na=function(){return[":",$APP.k(this.Lb)?":":null,$APP.l.g(this.prefix)].join("")};
$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,2,[BU,null,$APP.YG,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new ZU(this.Lb,this.prefix,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "auto-resolved?":case "prefix":return!0;default:return $APP.Ue(this.o,b)}};
$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h(BU,b):$APP.G.call(null,BU,b))?new ZU(c,this.prefix,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h($APP.YG,b):$APP.G.call(null,$APP.YG,b))?new ZU(this.Lb,c,this.A,this.o,null):new ZU(this.Lb,this.prefix,this.A,$APP.xi.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,2,5,$APP.J,[new $APP.Ve(BU,this.Lb,null),new $APP.Ve($APP.YG,this.prefix,null)],null),this.o))};
$APP.g.V=function(a,b){return new ZU(this.Lb,this.prefix,b,this.o,this.C)};$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};$APP.g=$U.prototype;$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "children":return this.children;default:return $APP.A.j(this.o,b,c)}};
$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.namespaced-map.NamespacedMapNode{",", ","}",c,$APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[gX,this.children],null)],null),this.o))};
$APP.g.fa=function(){return new $APP.vh(this,1,new $APP.H(null,1,5,$APP.J,[gX],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ca=function(){return new $U(this.children,this.A,this.o,this.C)};$APP.g.aa=function(){return 1+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=679326169^$APP.Pd(this)};$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.children,b.children)&&$APP.x.h(this.o,b.o)};
$APP.g.Fc=function(){return $APP.Gm};$APP.g.Cc=function(){return $APP.Gm};$APP.g.Dc=function(){return!1};$APP.g.Ec=function(a,b){return gU.h($APP.oe(this.children),b)};$APP.g.Bc=function(){return 1+iU(this.children)};$APP.g.Na=function(){return["#",$APP.l.g(jU(this.children))].join("")};$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,1,[gX,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new $U(this.children,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};
$APP.g.xf=function(){return!0};$APP.g.wf=function(){return this.children};$APP.g.ef=function(a,b){return $APP.xi.j(this,gX,y0a(b))};$APP.g.df=function(){return 1};$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "children":return!0;default:return $APP.Ue(this.o,b)}};$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h(gX,b):$APP.G.call(null,gX,b))?new $U(c,this.A,this.o,null):new $U(this.children,this.A,$APP.xi.j(this.o,b,c),null)};
$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.Ve(gX,this.children,null)],null),this.o))};$APP.g.V=function(a,b){return new $U(this.children,b,this.o,this.C)};$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};uU(ZU);uU($U);$APP.g=aV.prototype;$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "tag":return this.tag;case "prefix":return this.prefix;case "sym":return this.Ob;case "children":return this.children;default:return $APP.A.j(this.o,b,c)}};$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.quote.QuoteNode{",", ","}",c,$APP.M.h(new $APP.H(null,4,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[$APP.Dm,this.tag],null),new $APP.H(null,2,5,$APP.J,[$APP.YG,this.prefix],null),new $APP.H(null,2,5,$APP.J,[$APP.AE,this.Ob],null),new $APP.H(null,2,5,$APP.J,[gX,this.children],null)],null),this.o))};
$APP.g.fa=function(){return new $APP.vh(this,4,new $APP.H(null,4,5,$APP.J,[$APP.Dm,$APP.YG,$APP.AE,gX],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ca=function(){return new aV(this.tag,this.prefix,this.Ob,this.children,this.A,this.o,this.C)};$APP.g.aa=function(){return 4+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=1712251858^$APP.Pd(this)};
$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.tag,b.tag)&&$APP.x.h(this.prefix,b.prefix)&&$APP.x.h(this.Ob,b.Ob)&&$APP.x.h(this.children,b.children)&&$APP.x.h(this.o,b.o)};$APP.g.Fc=function(){return this.tag};$APP.g.Cc=function(){return $APP.ep};$APP.g.Dc=function(){return!1};$APP.g.Ec=function(a,b){return new $APP.D(null,this.Ob,new $APP.D(null,$APP.v(hU(this.children,b)),null,1,null),2,null)};$APP.g.Bc=function(){return $APP.de(this.prefix)+iU(this.children)};
$APP.g.Na=function(){return[$APP.l.g(this.prefix),$APP.l.g(jU(this.children))].join("")};$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,4,[gX,null,$APP.AE,null,$APP.YG,null,$APP.Dm,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new aV(this.tag,this.prefix,this.Ob,this.children,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};$APP.g.xf=function(){return!0};$APP.g.wf=function(){return this.children};$APP.g.ef=function(a,b){return $APP.xi.j(this,gX,b)};
$APP.g.df=function(){return $APP.de(this.prefix)};$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "tag":case "prefix":case "sym":case "children":return!0;default:return $APP.Ue(this.o,b)}};
$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h($APP.Dm,b):$APP.G.call(null,$APP.Dm,b))?new aV(c,this.prefix,this.Ob,this.children,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h($APP.YG,b):$APP.G.call(null,$APP.YG,b))?new aV(this.tag,c,this.Ob,this.children,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h($APP.AE,b):$APP.G.call(null,$APP.AE,b))?new aV(this.tag,this.prefix,c,this.children,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h(gX,b):$APP.G.call(null,gX,b))?new aV(this.tag,this.prefix,this.Ob,
c,this.A,this.o,null):new aV(this.tag,this.prefix,this.Ob,this.children,this.A,$APP.xi.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,4,5,$APP.J,[new $APP.Ve($APP.Dm,this.tag,null),new $APP.Ve($APP.YG,this.prefix,null),new $APP.Ve($APP.AE,this.Ob,null),new $APP.Ve(gX,this.children,null)],null),this.o))};$APP.g.V=function(a,b){return new aV(this.tag,this.prefix,this.Ob,this.children,b,this.o,this.C)};
$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};uU(aV);$APP.g=bV.prototype;$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "tag":return this.tag;case "prefix":return this.prefix;case "suffix":return this.mb;case "sexpr-fn":return this.Tc;case "sexpr-count":return this.Yd;case "children":return this.children;default:return $APP.A.j(this.o,b,c)}};
$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.reader-macro.ReaderNode{",", ","}",c,$APP.M.h(new $APP.H(null,6,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[$APP.Dm,this.tag],null),new $APP.H(null,2,5,$APP.J,[$APP.YG,this.prefix],null),new $APP.H(null,2,5,$APP.J,[$APP.fH,this.mb],null),new $APP.H(null,2,5,$APP.J,[dX,this.Tc],null),new $APP.H(null,2,5,$APP.J,[eX,this.Yd],null),new $APP.H(null,2,5,$APP.J,[gX,this.children],null)],null),this.o))};
$APP.g.fa=function(){return new $APP.vh(this,6,new $APP.H(null,6,5,$APP.J,[$APP.Dm,$APP.YG,$APP.fH,dX,eX,gX],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ca=function(){return new bV(this.tag,this.prefix,this.mb,this.Tc,this.Yd,this.children,this.A,this.o,this.C)};$APP.g.aa=function(){return 6+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=1051800113^$APP.Pd(this)};
$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.tag,b.tag)&&$APP.x.h(this.prefix,b.prefix)&&$APP.x.h(this.mb,b.mb)&&$APP.x.h(this.Tc,b.Tc)&&$APP.x.h(this.Yd,b.Yd)&&$APP.x.h(this.children,b.children)&&$APP.x.h(this.o,b.o)};$APP.g.Fc=function(){return this.tag};$APP.g.Cc=function(){return D4a};$APP.g.Dc=function(){return $APP.Cb(this.Tc)};
$APP.g.Ec=function(a,b){if($APP.k(this.Tc))return a=hU(this.children,b),this.Tc.g?this.Tc.g(a):this.Tc.call(null,a);throw $APP.Zl.h("unsupported operation",$APP.Wf);};$APP.g.Bc=function(){return iU(this.children)+1+$APP.de(this.prefix)+$APP.de(this.mb)};$APP.g.Na=function(){return["#",$APP.l.g(this.prefix),$APP.l.g(jU(this.children)),$APP.l.g(this.mb)].join("")};
$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,6,[$APP.fH,null,gX,null,eX,null,$APP.YG,null,$APP.Dm,null,dX,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new bV(this.tag,this.prefix,this.mb,this.Tc,this.Yd,this.children,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};$APP.g.xf=function(){return!0};$APP.g.wf=function(){return this.children};$APP.g.ef=function(a,b){return $APP.xi.j(this,gX,b)};$APP.g.df=function(){return $APP.de(this.prefix)+1};
$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "tag":case "prefix":case "suffix":case "sexpr-fn":case "sexpr-count":case "children":return!0;default:return $APP.Ue(this.o,b)}};
$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h($APP.Dm,b):$APP.G.call(null,$APP.Dm,b))?new bV(c,this.prefix,this.mb,this.Tc,this.Yd,this.children,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h($APP.YG,b):$APP.G.call(null,$APP.YG,b))?new bV(this.tag,c,this.mb,this.Tc,this.Yd,this.children,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h($APP.fH,b):$APP.G.call(null,$APP.fH,b))?new bV(this.tag,this.prefix,c,this.Tc,this.Yd,this.children,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h(dX,b):$APP.G.call(null,
dX,b))?new bV(this.tag,this.prefix,this.mb,c,this.Yd,this.children,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h(eX,b):$APP.G.call(null,eX,b))?new bV(this.tag,this.prefix,this.mb,this.Tc,c,this.children,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h(gX,b):$APP.G.call(null,gX,b))?new bV(this.tag,this.prefix,this.mb,this.Tc,this.Yd,c,this.A,this.o,null):new bV(this.tag,this.prefix,this.mb,this.Tc,this.Yd,this.children,this.A,$APP.xi.j(this.o,b,c),null)};
$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,6,5,$APP.J,[new $APP.Ve($APP.Dm,this.tag,null),new $APP.Ve($APP.YG,this.prefix,null),new $APP.Ve($APP.fH,this.mb,null),new $APP.Ve(dX,this.Tc,null),new $APP.Ve(eX,this.Yd,null),new $APP.Ve(gX,this.children,null)],null),this.o))};$APP.g.V=function(a,b){return new bV(this.tag,this.prefix,this.mb,this.Tc,this.Yd,this.children,b,this.o,this.C)};
$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};$APP.g=cV.prototype;$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "children":return this.children;default:return $APP.A.j(this.o,b,c)}};
$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.reader-macro.ReaderMacroNode{",", ","}",c,$APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[gX,this.children],null)],null),this.o))};
$APP.g.fa=function(){return new $APP.vh(this,1,new $APP.H(null,1,5,$APP.J,[gX],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ca=function(){return new cV(this.children,this.A,this.o,this.C)};$APP.g.aa=function(){return 1+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=856986356^$APP.Pd(this)};$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.children,b.children)&&$APP.x.h(this.o,b.o)};
$APP.g.Fc=function(){return WW};$APP.g.Cc=function(){return WW};$APP.g.Dc=function(){return!1};$APP.g.Ec=function(){return new $APP.D(null,$APP.qC,new $APP.D(null,this.Na(null),null,1,null),2,null)};$APP.g.Bc=function(){return iU(this.children)+1};$APP.g.Na=function(){return["#",$APP.l.g(jU(this.children))].join("")};
$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,1,[gX,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new cV(this.children,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};$APP.g.xf=function(){return!0};$APP.g.wf=function(){return this.children};$APP.g.ef=function(a,b){return $APP.xi.j(this,gX,b)};$APP.g.df=function(){return 1};$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "children":return!0;default:return $APP.Ue(this.o,b)}};
$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h(gX,b):$APP.G.call(null,gX,b))?new cV(c,this.A,this.o,null):new cV(this.children,this.A,$APP.xi.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.Ve(gX,this.children,null)],null),this.o))};$APP.g.V=function(a,b){return new cV(this.children,b,this.o,this.C)};$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};$APP.g=eV.prototype;
$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "children":return this.children;default:return $APP.A.j(this.o,b,c)}};$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.reader-macro.DerefNode{",", ","}",c,$APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[gX,this.children],null)],null),this.o))};$APP.g.fa=function(){return new $APP.vh(this,1,new $APP.H(null,1,5,$APP.J,[gX],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ca=function(){return new eV(this.children,this.A,this.o,this.C)};
$APP.g.aa=function(){return 1+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=-1560233006^$APP.Pd(this)};$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.children,b.children)&&$APP.x.h(this.o,b.o)};$APP.g.Fc=function(){return $APP.cp};$APP.g.Cc=function(){return $APP.cp};$APP.g.Dc=function(){return!1};$APP.g.Ec=function(a,b){return $APP.Hs.h($APP.dp,hU(this.children,b))};$APP.g.Bc=function(){return iU(this.children)+1};
$APP.g.Na=function(){return["@",$APP.l.g(jU(this.children))].join("")};$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,1,[gX,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new eV(this.children,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};$APP.g.xf=function(){return!0};$APP.g.wf=function(){return this.children};$APP.g.ef=function(a,b){return $APP.xi.j(this,gX,b)};$APP.g.df=function(){return 1};
$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "children":return!0;default:return $APP.Ue(this.o,b)}};$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h(gX,b):$APP.G.call(null,gX,b))?new eV(c,this.A,this.o,null):new eV(this.children,this.A,$APP.xi.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.Ve(gX,this.children,null)],null),this.o))};$APP.g.V=function(a,b){return new eV(this.children,b,this.o,this.C)};
$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};uU(bV);uU(cV);uU(eV);$APP.g=fV.prototype;$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "pattern":return this.pattern;default:return $APP.A.j(this.o,b,c)}};$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.regex.RegexNode{",", ","}",c,$APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[$APP.MF,this.pattern],null)],null),this.o))};$APP.g.fa=function(){return new $APP.vh(this,1,new $APP.H(null,1,5,$APP.J,[$APP.MF],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ca=function(){return new fV(this.pattern,this.A,this.o,this.C)};
$APP.g.aa=function(){return 1+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=705094795^$APP.Pd(this)};$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.pattern,b.pattern)&&$APP.x.h(this.o,b.o)};$APP.g.Fc=function(){return $APP.Vo};$APP.g.Cc=function(){return $APP.Vo};$APP.g.Dc=function(){return!1};$APP.g.Ec=function(){return new $APP.D(null,$APP.jC,new $APP.D(null,this.pattern,null,1,null),2,null)};$APP.g.Bc=function(){return 3+$APP.de(this.pattern)};
$APP.g.Na=function(){return['#"',$APP.l.g(this.pattern),'"'].join("")};$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,1,[$APP.MF,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new fV(this.pattern,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "pattern":return!0;default:return $APP.Ue(this.o,b)}};
$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h($APP.MF,b):$APP.G.call(null,$APP.MF,b))?new fV(c,this.A,this.o,null):new fV(this.pattern,this.A,$APP.xi.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.Ve($APP.MF,this.pattern,null)],null),this.o))};$APP.g.V=function(a,b){return new fV(this.pattern,b,this.o,this.C)};$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};uU(fV);$APP.g=gV.prototype;$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "tag":return this.tag;case "format-string":return this.Sd;case "wrap-length":return this.Pd;case "seq-fn":return this.wd;case "children":return this.children;default:return $APP.A.j(this.o,b,c)}};
$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.seq.SeqNode{",", ","}",c,$APP.M.h(new $APP.H(null,5,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[$APP.Dm,this.tag],null),new $APP.H(null,2,5,$APP.J,[$W,this.Sd],null),new $APP.H(null,2,5,$APP.J,[SW,this.Pd],null),new $APP.H(null,2,5,$APP.J,[TW,this.wd],null),new $APP.H(null,2,5,$APP.J,[gX,this.children],null)],null),this.o))};
$APP.g.fa=function(){return new $APP.vh(this,5,new $APP.H(null,5,5,$APP.J,[$APP.Dm,$W,SW,TW,gX],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ca=function(){return new gV(this.tag,this.Sd,this.Pd,this.wd,this.children,this.A,this.o,this.C)};$APP.g.aa=function(){return 5+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=580297420^$APP.Pd(this)};
$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.tag,b.tag)&&$APP.x.h(this.Sd,b.Sd)&&$APP.x.h(this.Pd,b.Pd)&&$APP.x.h(this.wd,b.wd)&&$APP.x.h(this.children,b.children)&&$APP.x.h(this.o,b.o)};$APP.g.Fc=function(){return this.tag};$APP.g.Cc=function(){return $APP.SB};$APP.g.Dc=function(){return!1};$APP.g.Ec=function(a,b){a=hU(this.children,b);return this.wd.g?this.wd.g(a):this.wd.call(null,a)};$APP.g.Bc=function(){return this.Pd+iU(this.children)};
$APP.g.Na=function(){return tU.l(this.Sd,$APP.z([jU(this.children)]))};$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,5,[gX,null,$W,null,TW,null,SW,null,$APP.Dm,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new gV(this.tag,this.Sd,this.Pd,this.wd,this.children,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};$APP.g.xf=function(){return!0};$APP.g.wf=function(){return this.children};$APP.g.ef=function(a,b){return $APP.xi.j(this,gX,b)};
$APP.g.df=function(){return this.Pd-1};$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "tag":case "format-string":case "wrap-length":case "seq-fn":case "children":return!0;default:return $APP.Ue(this.o,b)}};
$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h($APP.Dm,b):$APP.G.call(null,$APP.Dm,b))?new gV(c,this.Sd,this.Pd,this.wd,this.children,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h($W,b):$APP.G.call(null,$W,b))?new gV(this.tag,c,this.Pd,this.wd,this.children,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h(SW,b):$APP.G.call(null,SW,b))?new gV(this.tag,this.Sd,c,this.wd,this.children,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h(TW,b):$APP.G.call(null,TW,b))?new gV(this.tag,this.Sd,this.Pd,c,this.children,
this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h(gX,b):$APP.G.call(null,gX,b))?new gV(this.tag,this.Sd,this.Pd,this.wd,c,this.A,this.o,null):new gV(this.tag,this.Sd,this.Pd,this.wd,this.children,this.A,$APP.xi.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,5,5,$APP.J,[new $APP.Ve($APP.Dm,this.tag,null),new $APP.Ve($W,this.Sd,null),new $APP.Ve(SW,this.Pd,null),new $APP.Ve(TW,this.wd,null),new $APP.Ve(gX,this.children,null)],null),this.o))};
$APP.g.V=function(a,b){return new gV(this.tag,this.Sd,this.Pd,this.wd,this.children,b,this.o,this.C)};$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};uU(gV);$APP.g=lV.prototype;$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "lines":return this.lines;default:return $APP.A.j(this.o,b,c)}};$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.stringz.StringNode{",", ","}",c,$APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[$APP.cJ,this.lines],null)],null),this.o))};$APP.g.fa=function(){return new $APP.vh(this,1,new $APP.H(null,1,5,$APP.J,[$APP.cJ],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ca=function(){return new lV(this.lines,this.A,this.o,this.C)};
$APP.g.aa=function(){return 1+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=1538615006^$APP.Pd(this)};$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.lines,b.lines)&&$APP.x.h(this.o,b.o)};$APP.g.Fc=function(){return $APP.w(this.lines)?F7a:$APP.ZT};$APP.g.Cc=function(){return $APP.fm};$APP.g.Dc=function(){return!1};$APP.g.Ec=function(){return $APP.on.h("\n",$APP.fj.h($APP.sq.h($APP.HK,K0a),this.lines))};
$APP.g.Bc=function(){return 2+$APP.cf.h($APP.Rx,$APP.fj.h($APP.de,this.lines))};$APP.g.Na=function(){return K0a($APP.on.h("\n",this.lines))};$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,1,[$APP.cJ,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new lV(this.lines,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "lines":return!0;default:return $APP.Ue(this.o,b)}};
$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h($APP.cJ,b):$APP.G.call(null,$APP.cJ,b))?new lV(c,this.A,this.o,null):new lV(this.lines,this.A,$APP.xi.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.Ve($APP.cJ,this.lines,null)],null),this.o))};$APP.g.V=function(a,b){return new lV(this.lines,b,this.o,this.C)};$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};uU(lV);$APP.g=nV.prototype;$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "value":return this.value;case "string-value":return this.kc;default:return $APP.A.j(this.o,b,c)}};$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.token.TokenNode{",", ","}",c,$APP.M.h(new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[$APP.JI,this.value],null),new $APP.H(null,2,5,$APP.J,[ZW,this.kc],null)],null),this.o))};$APP.g.fa=function(){return new $APP.vh(this,2,new $APP.H(null,2,5,$APP.J,[$APP.JI,ZW],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};$APP.g.U=function(){return this.A};
$APP.g.ca=function(){return new nV(this.value,this.kc,this.A,this.o,this.C)};$APP.g.aa=function(){return 2+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=1106307029^$APP.Pd(this)};$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.value,b.value)&&$APP.x.h(this.kc,b.kc)&&$APP.x.h(this.o,b.o)};$APP.g.Fc=function(){return $APP.ZT};$APP.g.Cc=function(){return $APP.ZT};$APP.g.Dc=function(){return!1};$APP.g.Ec=function(){return this.value};
$APP.g.Bc=function(){return $APP.de(this.kc)};$APP.g.Na=function(){return this.kc};$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,2,[$APP.JI,null,ZW,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new nV(this.value,this.kc,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "value":case "string-value":return!0;default:return $APP.Ue(this.o,b)}};
$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h($APP.JI,b):$APP.G.call(null,$APP.JI,b))?new nV(c,this.kc,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h(ZW,b):$APP.G.call(null,ZW,b))?new nV(this.value,c,this.A,this.o,null):new nV(this.value,this.kc,this.A,$APP.xi.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,2,5,$APP.J,[new $APP.Ve($APP.JI,this.value,null),new $APP.Ve(ZW,this.kc,null)],null),this.o))};
$APP.g.V=function(a,b){return new nV(this.value,this.kc,b,this.o,this.C)};$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};$APP.g=oV.prototype;$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "value":return this.value;case "string-value":return this.kc;case "map-qualifier":return this.mc;default:return $APP.A.j(this.o,b,c)}};
$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};$APP.g.Qj=$APP.yd;$APP.g.Rj=function(a,b){return $APP.xi.j(this,fX,b)};$APP.g.Sj=function(){return $APP.xi.j(this,fX,null)};
$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.token.SymbolNode{",", ","}",c,$APP.M.h(new $APP.H(null,3,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[$APP.JI,this.value],null),new $APP.H(null,2,5,$APP.J,[ZW,this.kc],null),new $APP.H(null,2,5,$APP.J,[fX,this.mc],null)],null),this.o))};$APP.g.fa=function(){return new $APP.vh(this,3,new $APP.H(null,3,5,$APP.J,[$APP.JI,ZW,fX],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};$APP.g.U=function(){return this.A};
$APP.g.ca=function(){return new oV(this.value,this.kc,this.mc,this.A,this.o,this.C)};$APP.g.aa=function(){return 3+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=2093419088^$APP.Pd(this)};$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.value,b.value)&&$APP.x.h(this.kc,b.kc)&&$APP.x.h(this.mc,b.mc)&&$APP.x.h(this.o,b.o)};$APP.g.Fc=function(){return $APP.ZT};$APP.g.Cc=function(){return $APP.Am};$APP.g.Dc=function(){return!1};
$APP.g.Ec=function(a,b){a=this.value;var c=this.mc;b=$APP.Xf(b);b=$APP.A.h(b,$APP.Oo);var d=L0a(c,M0a(a));c=$APP.lj.h;$APP.k(BU.g(d))?(d=$APP.YG.g(d),d=null==d?null:$APP.lj.g(d),d=$APP.k(d)?d:$APP.lo,b=$APP.k(b)?b:oU,b=b.g?b.g(d):b.call(null,d)):b=$APP.YG.g(d);b=null==b?null:$APP.l.g(b);return a=c.call($APP.lj,b,$APP.Gi(a))};$APP.g.Bc=function(){return $APP.de(this.kc)};$APP.g.Na=function(){return this.kc};
$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,3,[fX,null,$APP.JI,null,ZW,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new oV(this.value,this.kc,this.mc,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "value":case "string-value":case "map-qualifier":return!0;default:return $APP.Ue(this.o,b)}};
$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h($APP.JI,b):$APP.G.call(null,$APP.JI,b))?new oV(c,this.kc,this.mc,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h(ZW,b):$APP.G.call(null,ZW,b))?new oV(this.value,c,this.mc,this.A,this.o,null):$APP.k($APP.G.h?$APP.G.h(fX,b):$APP.G.call(null,fX,b))?new oV(this.value,this.kc,c,this.A,this.o,null):new oV(this.value,this.kc,this.mc,this.A,$APP.xi.j(this.o,b,c),null)};
$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,3,5,$APP.J,[new $APP.Ve($APP.JI,this.value,null),new $APP.Ve(ZW,this.kc,null),new $APP.Ve(fX,this.mc,null)],null),this.o))};$APP.g.V=function(a,b){return new oV(this.value,this.kc,this.mc,b,this.o,this.C)};$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};uU(nV);uU(oV);$APP.g=rV.prototype;$APP.g.toString=function(){return this.Na(null)};$APP.g.ba=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "children":return this.children;default:return $APP.A.j(this.o,b,c)}};$APP.g.ja=function(a,b,c){return $APP.cf.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.W=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.ej,""," ","",c,d)},"#rewrite-clj.node.uneval.UnevalNode{",", ","}",c,$APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[gX,this.children],null)],null),this.o))};$APP.g.fa=function(){return new $APP.vh(this,1,new $APP.H(null,1,5,$APP.J,[gX],null),$APP.k(this.o)?$APP.nd(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ca=function(){return new rV(this.children,this.A,this.o,this.C)};
$APP.g.aa=function(){return 1+$APP.de(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=-1883175395^$APP.Pd(this)};$APP.g.R=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.children,b.children)&&$APP.x.h(this.o,b.o)};$APP.g.Fc=function(){return $APP.Zo};$APP.g.Cc=function(){return $APP.Zo};$APP.g.Dc=function(){return!0};$APP.g.Ec=function(){throw $APP.Zl.h("unsupported operation",$APP.Wf);};$APP.g.Bc=function(){return 2+iU(this.children)};
$APP.g.Na=function(){return["#_",$APP.l.g(jU(this.children))].join("")};$APP.g.la=function(a,b){return $APP.Ue(new $APP.Ai(null,new $APP.h(null,1,[gX,null],null),null),b)?$APP.Ll.h($APP.xc($APP.Eh.h($APP.Wf,this),this.A),b):new rV(this.children,this.A,$APP.Yf($APP.Ll.h(this.o,b)),null)};$APP.g.xf=function(){return!0};$APP.g.wf=function(){return this.children};$APP.g.ef=function(a,b){return $APP.xi.j(this,gX,b)};$APP.g.df=function(){return 2};
$APP.g.ga=function(a,b){switch(b instanceof $APP.F?b.N:null){case "children":return!0;default:return $APP.Ue(this.o,b)}};$APP.g.O=function(a,b,c){return $APP.k($APP.G.h?$APP.G.h(gX,b):$APP.G.call(null,gX,b))?new rV(c,this.A,this.o,null):new rV(this.children,this.A,$APP.xi.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.M.h(new $APP.H(null,1,5,$APP.J,[new $APP.Ve(gX,this.children,null)],null),this.o))};$APP.g.V=function(a,b){return new rV(this.children,b,this.o,this.C)};
$APP.g.da=function(a,b){return $APP.Ee(b)?this.O(null,$APP.qe(b,0),$APP.qe(b,1)):$APP.cf.j($APP.Wb,this,b)};uU(rV);LU.prototype.ub=function(){return this};nV.prototype.ub=function(){return this};fV.prototype.ub=function(){return this};ZU.prototype.ub=function(){return this};XU.prototype.ub=function(){return this};eV.prototype.ub=function(){return this};AU.prototype.ub=function(){return this};lV.prototype.ub=function(){return this};CU.prototype.ub=function(){return this};NU.prototype.ub=function(){return this};OU.prototype.ub=function(){return this};rV.prototype.ub=function(){return this};cV.prototype.ub=function(){return this};
zU.prototype.ub=function(){return this};oV.prototype.ub=function(){return this};$U.prototype.ub=function(){return this};vU.prototype.ub=function(){return this};gV.prototype.ub=function(){return this};aV.prototype.ub=function(){return this};bV.prototype.ub=function(){return this};yU.prototype.ub=function(){return this};var Q0a=s0a(", "),R0a=MU(" ");$APP.F.prototype.ub=function(){return DU(this,!1)};pU.string=function(a){return mV(P0a($APP.Gl($APP.Fl($APP.xj.l($APP.z([a]))))))};
pU._=function(a){if($APP.De(a)){var b=$APP.J;var c=$APP.xj.l($APP.z([a]));c=$APP.lj.g($APP.Yi.j(c,1,$APP.GK.h(c,"{")));b=dV(new $APP.H(null,2,5,b,[qV(c),kV(S0a(a))],null))}else b=qV(a);return sV(b,a)};pU["null"]=function(){return qV(null)};RegExp.prototype.ub=function(){return new fV(this.source,null,null,null)};$APP.H.prototype.ub=function(){return tV(iV,this)};$APP.D.prototype.ub=function(){return tV(hV,this)};$APP.Gf.prototype.ub=function(){return tV(hV,this)};
$APP.zf.prototype.ub=function(){return tV(hV,this)};$APP.Ai.prototype.ub=function(){return tV(jV,this)};$APP.wf.prototype.ub=function(){return tV(hV,this)};$APP.fi.prototype.ub=function(){return sV(kV(S0a(this)),this)};$APP.h.prototype.ub=function(){return sV(kV(S0a(this)),this)};$APP.Ed.prototype.ub=function(){return F0a(new $APP.H(null,1,5,$APP.J,[qV($APP.lj.g($APP.Yi.h($APP.l.g(this),2)))],null))};var hX=function hX(a){switch(arguments.length){case 1:return hX.g(arguments[0]);case 2:return hX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};hX.g=function(a){return S_a(a,$APP.Wf)};hX.h=function(a,b){return S_a(a,b)};hX.B=2;var iX=function iX(a){switch(arguments.length){case 1:return iX.g(arguments[0]);case 2:return iX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};iX.g=function(a){return gU.g(a)};
iX.h=function(a,b){return gU.h(a,b)};iX.B=2;var rX=function rX(a){switch(arguments.length){case 1:return rX.g(arguments[0]);case 2:return rX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};rX.g=function(a){return hU(a,$APP.Wf)};rX.h=function(a,b){return hU(a,b)};rX.B=2;
var sX=function sX(a){switch(arguments.length){case 1:return sX.g(arguments[0]);case 2:return sX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};sX.g=function(a){return new vU(";",a,null,null,null)};sX.h=function(a,b){return new vU(a,b,null,null,null)};sX.B=2;
var tX=function tX(a){switch(arguments.length){case 1:return tX.g(arguments[0]);case 2:return tX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};tX.g=function(a){return new AU(a,10,null,null,null)};tX.h=function(a,b){return new AU(a,b,null,null,null)};tX.B=2;
var uX=function uX(a){switch(arguments.length){case 2:return uX.h(arguments[0],arguments[1]);case 1:return uX.g(arguments[0]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};uX.h=function(a,b){return DU(a,b)};uX.g=function(a){return DU(a,!1)};uX.B=2;var vX=function vX(a){switch(arguments.length){case 1:return vX.g(arguments[0]);case 2:return vX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};
vX.g=function(a){return YU($APP.mb,"^",a)};vX.h=function(a,b){return v0a(a,b)};vX.B=2;var wX=function wX(a){switch(arguments.length){case 1:return wX.g(arguments[0]);case 2:return wX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};wX.g=function(a){return YU(q8a,"#^",a)};wX.h=function(a,b){return YU(q8a,"#^",new $APP.H(null,3,5,$APP.J,[a,TU(1),b],null))};wX.B=2;
var xX=function xX(a){switch(arguments.length){case 1:return xX.g(arguments[0]);case 2:return xX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};xX.g=function(a){return dV(a)};xX.h=function(a,b){return dV(new $APP.H(null,3,5,$APP.J,[a,TU(1),b],null))};xX.B=2;
var yX=function yX(a){switch(arguments.length){case 1:return yX.g(arguments[0]);case 2:return yX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};yX.g=function(a){return qV(a)};yX.h=function(a,b){return pV(a,b)};yX.B=2;var zX=function zX(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return zX.l(arguments[0],arguments[1],2<c.length?new $APP.Hd(c.slice(2),0,null):null)};zX.l=function(a,b,c){return $APP.k(uV.g(a))?LV(a,$APP.qg.j(b,wV(a),c)):$APP.qg.F($APP.HN,a,b,c)};zX.B=2;zX.G=function(a){var b=$APP.v(a),c=$APP.w(a);a=$APP.v(c);c=$APP.w(c);return this.l(b,a,c)};var RV=null,JU=function(){var a=$APP.zj.g($APP.Wf),b=$APP.zj.g($APP.Wf),c=$APP.zj.g($APP.Wf),d=$APP.zj.g($APP.Wf),e=$APP.A.j($APP.Wf,$APP.lr,$APP.Lj.D?$APP.Lj.D():$APP.Lj.call(null));return new $APP.ak($APP.lj.h("rewrite-clj.parser.core","parse-next*"),$APP.sq.h(new $APP.Ed(function(){return n1a},g3a,$APP.gi([$APP.Tt,$APP.R,$APP.Q,$APP.Sl,$APP.$z,$APP.Pm,$APP.Tl,$APP.DK,$APP.W,$APP.N,$APP.lF],[!0,$APP.te(c5a,new $APP.h(null,1,[$APP.tu,!0],null)),$APP.Zza,"rewrite_clj/parser/core.cljc",16,1,28,28,
$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.CH],null)),null,$APP.k(n1a)?n1a.H:null])),IU),$APP.Lm,e,a,b,c,d)}();JU.ea(null,$APP.ZT,function(a){return k1a(a)});JU.ea(null,l1a,function(a){return HU(a)});JU.ea(null,SV,function(a){return c0a(a,"Unmatched delimiter: %s",$APP.z([IU(a)]))});JU.ea(null,$APP.cm,function(a){return $APP.k(RV)?EU(a,"Unexpected EOF."):null});JU.ea(null,SU,function(a){var b=IU(a);return FU(b)?PU(GU(a,FU)):e0a(b)?new NU(GU(a,e0a),null,null,null):MU(GU(a,f0a))});
JU.ea(null,wU,function(a){HU(a);a=i0a(a);return new vU(";",a,null,null,null)});JU.ea(null,$APP.Cm,function(a){HU(a);var b=IU(a);$APP.k(b)?$APP.x.h(b,":")?(a.wa(null),a=n0a(a),a=DU(a,!0)):a=DU(n0a(a),!1):a=EU(a,"unexpected EOF while reading keyword.");return a});JU.ea(null,$APP.fm,function(a){return mV(P0a(a))});JU.ea(null,$APP.mb,function(a){HU(a);return YU($APP.mb,"^",VV(a,$APP.mb,2))});
JU.ea(null,m1a,function(a){HU(a);var b=IU(a);return $APP.x.h(null,b)?EU(a,"Unexpected EOF."):$APP.x.h("!",b)?p1a(a):$APP.x.h('"',b)?new fV(h1a(a),null,null,null):$APP.x.h("#",b)?o1a(a):$APP.x.h("'",b)?F0a(UV(a,$APP.Xo,1,$APP.z([!0]))):$APP.x.h("(",b)?new yU(TV(a,")"),null,null,null):$APP.x.h(":",b)?g1a(a):$APP.x.h("{",b)?jV(TV(a,"}")):$APP.x.h("\x3d",b)?G0a(UV(a,$APP.bBa,1,$APP.z([!0]))):$APP.x.h("^",b)?YU(q8a,"#^",UV(a,$APP.mb,2,$APP.z([!0]))):$APP.x.h("?",b)?(a.wa(null),dV(function(){return $APP.Af(function(){switch(IU(a)){case "(":return qV($APP.lj.g("?"));
case "@":return a.wa(null),qV($APP.lj.g("?@"));default:return a.ee(null,"?"),$APP.v(VV(a,WW,1))}}(),VV(a,WW,1))}())):$APP.x.h("_",b)?N0a(UV(a,$APP.Zo,1,$APP.z([!0]))):dV(VV(a,WW,2))});JU.ea(null,$APP.cp,function(a){return H0a(UV(a,$APP.cp,1,$APP.z([!0])))});JU.ea(null,$APP.ep,function(a){return A0a(UV(a,$APP.ep,1,$APP.z([!0])))});JU.ea(null,$APP.eo,function(a){return B0a(UV(a,$APP.eo,1,$APP.z([!0])))});
JU.ea(null,$APP.hp,function(a){HU(a);var b=IU(a);return $APP.x.h(b,"@")?D0a(UV(a,$APP.hp,1,$APP.z([!0]))):C0a(VV(a,$APP.hp,1))});JU.ea(null,$APP.um,function(a){return hV(TV(a,")"))});JU.ea(null,$APP.vm,function(a){return iV(TV(a,"]"))});JU.ea(null,$APP.wm,function(a){return kV(TV(a,"}"))});var w1a=new $APP.h(null,2,[v1a,!1,$APP.Oo,oU],null);var oW=function oW(a){switch(arguments.length){case 1:return oW.g(arguments[0]);case 2:return oW.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};oW.g=function(a){return oW.h(a,WV)};oW.h=function(a,b){return null==ZV(GV,GV(a))||null==ZV(IV,IV(a))?QV(a,b):a};oW.B=2;var AX=function AX(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return AX.l(arguments[0],arguments[1],2<c.length?new $APP.Hd(c.slice(2),0,null):null)};AX.l=function(a,b,c){return zX.l(a,I1a(bW.g($APP.ue(a))),$APP.z([function(d){return $APP.qg.j(b,d,c)}]))};AX.B=2;AX.G=function(a){var b=$APP.v(a),c=$APP.w(a);a=$APP.v(c);c=$APP.w(c);return this.l(b,a,c)};var uW=TU(1);var BX=function BX(a){switch(arguments.length){case 1:return BX.g(arguments[0]);case 2:return BX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};BX.g=function(a){return cW(a,$APP.Wf)};BX.h=function(a,b){return cW(a,b)};BX.B=2;var CX=function CX(a){switch(arguments.length){case 1:return CX.g(arguments[0]);case 2:return CX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};
CX.g=function(a){return cW(a,$APP.Wf)};CX.h=function(a,b){return cW(a,b)};CX.B=2;var DX=function DX(a){switch(arguments.length){case 1:return DX.g(arguments[0]);case 2:return DX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};DX.g=function(a){return dW(a,$APP.Wf)};DX.h=function(a,b){return dW(a,b)};DX.B=2;
var EX=function EX(a){switch(arguments.length){case 1:return EX.g(arguments[0]);case 2:return EX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};EX.g=function(a){return dW(a,$APP.Wf)};EX.h=function(a,b){return dW(a,b)};EX.B=2;var FX=function FX(a){switch(arguments.length){case 1:return FX.g(arguments[0]);case 2:return FX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};
FX.g=function(a){return y1a(a,$APP.Wf)};FX.h=function(a,b){return y1a(a,b)};FX.B=2;var GX=function GX(a){switch(arguments.length){case 1:return GX.g(arguments[0]);case 2:return GX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};GX.g=function(a){return x1a(a,$APP.Wf)};GX.h=function(a,b){return x1a(a,b)};GX.B=2;
var HX=function HX(a){switch(arguments.length){case 2:return HX.h(arguments[0],arguments[1]);case 1:return HX.g(arguments[0]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};HX.h=function(a){return A1a(a)};HX.g=function(a){return A1a(a)};HX.B=2;var IX=function IX(a){switch(arguments.length){case 2:return IX.h(arguments[0],arguments[1]);case 1:return IX.g(arguments[0]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};IX.h=function(a){return B1a(a)};
IX.g=function(a){return B1a(a)};IX.B=2;var JX=function JX(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return JX.l(arguments[0],arguments[1],2<c.length?new $APP.Hd(c.slice(2),0,null):null)};JX.l=function(a,b,c){return $APP.qg.F(AX,a,b,c)};JX.B=2;JX.G=function(a){var b=$APP.v(a),c=$APP.w(a);a=$APP.v(c);c=$APP.w(c);return this.l(b,a,c)};
var JW=function JW(a){switch(arguments.length){case 2:return JW.h(arguments[0],arguments[1]);case 3:return JW.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};JW.h=function(a,b){return qW(a,hW,b)};JW.j=function(a,b,c){return qW(a,b,c)};JW.B=3;
var KX=function KX(a){switch(arguments.length){case 2:return KX.h(arguments[0],arguments[1]);case 3:return KX.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};KX.h=function(a,b){return rW(a,hW,b)};KX.j=function(a,b,c){return rW(a,b,c)};KX.B=3;
var LX=function LX(a){switch(arguments.length){case 2:return LX.h(arguments[0],arguments[1]);case 3:return LX.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};LX.h=function(a,b){return Q1a(a,hW,b)};LX.j=function(a,b,c){return Q1a(a,b,c)};LX.B=3;
var MX=function MX(a){switch(arguments.length){case 2:return MX.h(arguments[0],arguments[1]);case 3:return MX.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};MX.h=function(a,b){return rW(a,hW,O1a(b))};MX.j=function(a,b,c){return rW(a,b,O1a(c))};MX.B=3;
var NX=function NX(a){switch(arguments.length){case 2:return NX.h(arguments[0],arguments[1]);case 3:return NX.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};NX.h=function(a,b){return tW(a,hW,b)};NX.j=function(a,b,c){return tW(a,b,c)};NX.B=3;
var OX=function OX(a){switch(arguments.length){case 2:return OX.h(arguments[0],arguments[1]);case 3:return OX.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};OX.h=function(a,b){return T1a(a,hW,b)};OX.j=function(a,b,c){return T1a(a,b,c)};OX.B=3;
var PX=function PX(a){switch(arguments.length){case 2:return PX.h(arguments[0],arguments[1]);case 3:return PX.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};PX.h=function(a,b){return sW(a,hW,b)};PX.j=function(a,b,c){return sW(a,b,c)};PX.B=3;
var QX=function QX(a){switch(arguments.length){case 2:return QX.h(arguments[0],arguments[1]);case 3:return QX.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};QX.h=function(a,b){return S1a(a,hW,b)};QX.j=function(a,b,c){return S1a(a,b,c)};QX.B=3;
var RX=function RX(a){switch(arguments.length){case 2:return RX.h(arguments[0],arguments[1]);case 3:return RX.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};RX.h=function(a,b){return P1a(a,b,$APP.tg(!0))};RX.j=function(a,b,c){return P1a(a,b,c)};RX.B=3;
var SX=function SX(a){switch(arguments.length){case 2:return SX.h(arguments[0],arguments[1]);case 3:return SX.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};SX.h=function(a,b){return AW(a,$APP.Ml.j(a2a,$APP.tg(!0),b))};SX.j=function(a,b,c){return AW(a,$APP.Ml.j(a2a,b,c))};SX.B=3;
var TX=function TX(a){switch(arguments.length){case 2:return TX.h(arguments[0],arguments[1]);case 3:return TX.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};TX.h=function(a,b){return b2a(a,$APP.tg(!0),b)};TX.j=function(a,b,c){return b2a(a,b,c)};TX.B=3;
var UX=function UX(a){switch(arguments.length){case 1:return UX.g(arguments[0]);case 2:return UX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};UX.g=function(a){return ZV(GV,a)};UX.h=function(a,b){return ZV(a,b)};UX.B=2;var VX=function VX(a){switch(arguments.length){case 1:return VX.g(arguments[0]);case 2:return VX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};
VX.g=function(a){return $V(a,1)};VX.h=function(a,b){return $V(a,b)};VX.B=2;var WX=function WX(a){switch(arguments.length){case 1:return WX.g(arguments[0]);case 2:return WX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};WX.g=function(a){return aW(a,1)};WX.h=function(a,b){return aW(a,b)};WX.B=2;
var XX=function XX(a){switch(arguments.length){case 1:return XX.g(arguments[0]);case 2:return XX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};XX.g=function(a){return JV(a,UU(1))};XX.h=function(a,b){return JV(a,UU(b))};XX.B=2;var YX=function YX(a){switch(arguments.length){case 1:return YX.g(arguments[0]);case 2:return YX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};
YX.g=function(a){return KV(a,UU(1))};YX.h=function(a,b){return KV(a,UU(b))};YX.B=2;var ZX=function ZX(a){switch(arguments.length){case 2:return ZX.h(arguments[0],arguments[1]);case 1:return ZX.g(arguments[0]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};ZX.h=function(a,b){return $V(a,$APP.k(b)?b:1)};ZX.g=function(a){return $V(a,$APP.k(null)?null:1)};ZX.B=2;
var $X=function $X(a){switch(arguments.length){case 2:return $X.h(arguments[0],arguments[1]);case 1:return $X.g(arguments[0]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};$X.h=function(a,b){return aW(a,$APP.k(b)?b:1)};$X.g=function(a){return aW(a,$APP.k(null)?null:1)};$X.B=2;
var aY=function aY(a){switch(arguments.length){case 2:return aY.h(arguments[0],arguments[1]);case 1:return aY.g(arguments[0]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};aY.h=function(a,b){return JV(a,UU($APP.k(b)?b:1))};aY.g=function(a){return JV(a,UU($APP.k(null)?null:1))};aY.B=2;
var bY=function bY(a){switch(arguments.length){case 2:return bY.h(arguments[0],arguments[1]);case 1:return bY.g(arguments[0]);default:throw Error(["Invalid arity: ",$APP.l.g(arguments.length)].join(""));}};bY.h=function(a,b){return KV(a,UU($APP.k(b)?b:1))};bY.g=function(a){return KV(a,UU($APP.k(null)?null:1))};bY.B=2;
var cY=function cY(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return cY.l(arguments[0],arguments[1],2<c.length?new $APP.Hd(c.slice(2),0,null):null)};cY.l=function(a,b,c){return $APP.qg.F(zX,a,b,c)};cY.B=2;cY.G=function(a){var b=$APP.v(a),c=$APP.w(a);a=$APP.v(c);c=$APP.w(c);return this.l(b,a,c)};var A8a=$APP.kN.h($APP.ICa,null),B8a=$APP.kN.h($APP.XA,null),C8a=$APP.kN.h($APP.Ywa,null),D8a=$APP.kN.h($APP.BEa,null),E8a=$APP.pu($APP.gi([$APP.te(U6a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.$F],null))),$APP.N,"Returns `node` replacing current children with `children`."],null)),$APP.te(p7a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.MH],null))),$APP.N,"Create node representing `n` newline characters."],null)),$APP.te(V4a,
new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null))),$APP.N,"Return `node` converted to form.\n\n  Optional `opts` can specify:\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances).",$APP.oI,new $APP.h(null,6,[$APP.EA,
!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null)],null),$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te(J5a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[PW,$APP.GE],null))),$APP.N,'Create a map qualifier node.\n   The map qualifier node is a child node of [[namespaced-map-node]].\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   ;; qualified\n   (-\x3e (n/map-qualifier-node false "my-prefix")\n       n/string)\n   ;; \x3d\x3e ":my-prefix"\n\n   ;; auto-resolved to current ns\n   (-\x3e (n/map-qualifier-node true nil)\n       n/string)\n   ;; \x3d\x3e "::"\n\n   ;; auto-resolve to namespace with alias\n   (-\x3e (n/map-qualifier-node true "my-ns-alias")\n       n/string)\n   ;; \x3d\x3e "::my-ns-alias"\n   ```'],
null)),$APP.te(o4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null))),$APP.N,"Return number of characters for the string version of `node`."],null)),$APP.te(O3a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null))),$APP.N,'Create node representing the dereferencing of a form\n   where `children` is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/deref-node (n/token-node \'my-var))\n       n/string)\n   ;; \x3d\x3e "@my-var"\n\n   ;; specifying a sequence allows for whitespace between @ and form\n   (-\x3e (n/deref-node [(n/spaces 2)\n                      (n/token-node \'my-var)])\n       n/string)\n   ;; \x3d\x3e "@  my-var"\n   ```'],
null)),$APP.te(J7a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.MH],null))),$APP.N,"Returns true if `n` is a node representing a symbol."],null)),$APP.te(b8a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[$APP.rE,D5a],null))),$APP.N,"Applies `map-qualifier` context to `node`"],null)),$APP.te(G7a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null))),$APP.N,"Create node representing a var where `children` is either a\n   sequence of nodes or a single node.\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-\x3e (n/var-node (n/token-node 'my-var))\n       n/string)\n   ;; \x3d\x3e \"#'my-var\"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; prefix and the var\n   (-\x3e (n/var-node [(n/spaces 2)\n                    (n/token-node 'my-var)])\n       n/string)\n   ;; \x3d\x3e \"#'  my-var\"\n   ```"],
null)),$APP.te(c4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null))),$APP.N,"Removes map-qualifier context for `node`"],null)),$APP.te(n8a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.mH],null),new $APP.H(null,2,5,$APP.J,[$APP.mH,bX],null))),$APP.N,'Create node for an unspecified token of `value`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/token-node \'sym) n/string)\n   ;; \x3d\x3e "sym"\n\n   (-\x3e (n/token-node 42) n/string)\n   ;; \x3d\x3e "42"\n\n   (-\x3e (n/token-node "astring") n/string)\n   ;; \x3d\x3e "\\"astring\\""\n   ```\n\n   To construct strings appearing over multiple lines, see [[string-node]].',
$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,1,5,$APP.J,[$APP.mH],null),new $APP.H(null,2,5,$APP.J,[$APP.mH,bX],null)],null),$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.mH],null),new $APP.H(null,2,5,$APP.J,[$APP.mH,bX],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te(E6a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null))),$APP.N,'Create node representing a single unquote-spliced form where `children`\n   is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/unquote-splicing-node (n/token-node \'my-var))\n       n/string)\n   ;; \x3d\x3e "~@my-var"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; splicing unquote and the splicing unquoted\n   (-\x3e (n/unquote-splicing-node [(n/spaces 2)\n                                 (n/token-node \'my-var)])\n       n/string)\n   ;; \x3d\x3e "~@  my-var"\n   ```'],
null)),$APP.te(h7a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.pI],null))),$APP.N,'Interleave `nodes` with `", "` nodes.'],null)),$APP.te(M4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null))),$APP.N,"Returns true if `node` represents Clojure whitespace."],null)),$APP.te($APP.RG,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null))),$APP.N,"Returns keyword representing type of `node`."],
null)),$APP.te(S4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null))),$APP.N,'Create node representing an unevaled form with `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/uneval-node [(n/spaces 1)\n                       (n/token-node 42)])\n       n/string)\n   ;; \x3d\x3e "#_ 42"\n   ```'],null)),$APP.te(q4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null))),$APP.N,"Returns true if `node` represents one or more commas."],
null)),$APP.te(L6a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],null))),$APP.N,"Convert string `s` of whitespace to whitespace/newline nodes."],null)),$APP.te($APP.mH,new $APP.h(null,3,[YW,"0.4.0",$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null))),$APP.N,"DEPRECATED: Get first child as a pair of tag/sexpr (if inner node),\n   or just the node's own sexpr. (use explicit analysis of `children`\n   `child-sexprs` instead) "],null)),$APP.te(r7a,
new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.pI],null))),$APP.N,"Interleave `nodes` with newline nodes."],null)),$APP.te(x5a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null))),$APP.N,'Create a node representing a map with `children`.\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/map-node [(n/keyword-node :a)\n                    (n/spaces 1)\n                    (n/token-node 1)\n                    (n/spaces 1)\n                    (n/keyword-node :b)\n                    (n/spaces 1)\n                    (n/token-node 2)])\n       (n/string))\n   ;; \x3d\x3e "{:a 1 :b 2}"\n   ```\n\n   Note that rewrite-clj allows the, technically illegal, unbalanced map:\n   ```Clojure\n   (-\x3e (n/map-node [(n/keyword-node :a)])\n       (n/string))\n   ;; \x3d\x3e "{:a}"\n   ```\n   See [docs on unbalanced maps](/doc/01-user-guide.adoc#unbalanced-maps).\n\n   Rewrite-clj also allows the, also technically illegal, map with duplicate keys:\n   ```Clojure\n   (-\x3e (n/map-node [(n/keyword-node :a)\n                    (n/spaces 1)\n                    (n/token-node 1)\n                    (n/spaces 1)\n                    (n/keyword-node :a)\n                    (n/spaces 1)\n                    (n/token-node 2)])\n       (n/string))\n   ;; \x3d\x3e "{:a 1 :a 2}"\n   ```\n   See [docs on maps with duplicate keys](/doc/01-user-guide.adoc#maps-with-duplicate-keys).'],
null)),$APP.te(y4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null))),$APP.N,"Returns number of characters before children for `node`."],null)),$APP.te(g8a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null))),$APP.N,'Create node representing a single syntax-quoted form where `children`\n   is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/syntax-quote-node (n/token-node \'map))\n       n/string)\n   ;; \x3d\x3e "`map"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; syntax quote and the syntax quoted\n   (-\x3e (n/syntax-quote-node [(n/spaces 3)\n                             (n/token-node \'map)])\n       n/string)\n   ;; \x3d\x3e "`   map"\n   ```'],
null)),$APP.te($APP.mK,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null))),$APP.N,"Return the string version of `node`."],null)),$APP.te(b7a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null))),$APP.N,"Create node representing an anonymous function with `children`.\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-\x3e (n/fn-node [(n/token-node '+)\n                   (n/spaces 1)\n                   (n/token-node 1)\n                   (n/spaces 1)\n                   (n/token-node '%1)])\n       n/string)\n   ;; \x3d\x3e \"#(+ 1 %1)\"\n   ```"],
null)),$APP.te(m4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null))),$APP.N,'Create a node representing a vector with `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/vector-node [(n/token-node 1)\n                       (n/spaces 1)\n                       (n/token-node 2)\n                       (n/spaces 1)\n                       (n/token-node 3)])\n       n/string)\n   ;; \x3d\x3e "[1 2 3]"\n   ```'],null)),$APP.te($3a,
new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null))),$APP.N,"Return true if [[sexpr]] is supported for `node`'s element type.\n\n   See [related docs in user guide](/doc/01-user-guide.adoc#not-all-clojure-is-sexpr-able)"],null)),$APP.te(S2a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null))),$APP.N,'Create top-level node wrapping multiple `children`.\n   The forms node is equivalent to an implicit `do` at the top-level.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/forms-node [(n/token-node 1)\n                      (n/spaces 1)\n                      (n/token-node 2)])\n       n/string)\n   ;; \x3d\x3e "1 2"\n   ```\n   '],
null)),$APP.te(f4a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.pI],null),new $APP.H(null,2,5,$APP.J,[$APP.pI,$APP.bG],null))),$APP.N,"Return forms for `nodes`. Nodes that do not represent s-expression are skipped.\n\n  Optional `opts` can specify:\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances).",
$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,1,5,$APP.J,[$APP.pI],null),new $APP.H(null,2,5,$APP.J,[$APP.pI,$APP.bG],null)],null),$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.pI],null),new $APP.H(null,2,5,$APP.J,[$APP.pI,$APP.bG],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te(B6a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],null))),$APP.N,"Create comma node of string `s`, where `s` is one or more comma characters."],
null)),$APP.te(Y3a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[A4a],null))),$APP.N,'Create node representing a string value where `lines` can be a sequence of strings or a single string.\n\n  When `lines` is a sequence, the resulting node `tag` will be `:multi-line`, otherwise `:token`.\n\n  `:multi-line` refers to a single string in your source that appears over multiple lines, for example:\n\n  ```Clojure\n  (def s "foo\n            bar\n              baz")\n  ```\n\n  It does not apply to a string that appears on a single line that includes escaped newlines, for example:\n\n  ```Clojure\n  (def s "foo\\nbar\\n\\baz")\n  ```\n\n  Naive examples (see example on escaping below):\n\n  ```Clojure\n  (require \'[rewrite-clj.node :as n])\n\n  (-\x3e (n/string-node "hello")\n      n/string)\n  ;; \x3d\x3e "\\"hello\\""\n\n  (-\x3e (n/string-node ["line1" "" "line3"])\n       n/string)\n  ;; \x3d\x3e "\\"line1\\n\\nline3\\""\n  ```\n\n  This function was originally written to serve the rewrite-clj parser.\n  Escaping and wrapping expectations are non-obvious.\n  - characters within strings are assumed to be escaped\n  - but the string should not wrapped with `\\"`\n\n  Here\'s an example of conforming to these expectations for a string that has escape sequences.\n  (Best to view this on cljdoc, docstring string escaping is confusing).\n\n  ```Clojure\n  (require \'[clojure.string :as string])\n\n  (defn pr-str-unwrapped [s]\n    (apply str (-\x3e s pr-str next butlast)))\n\n  (-\x3e "hey \\" man"\n      pr-str-unwrapped\n      n/string-node\n      n/string)\n  ;; \x3d\x3e "\\"hey \\\\\\" man\\""\n  ```\n\n  To construct strings appearing on a single line, consider [[token-node]].\n  It will handle escaping for you.'],
null)),$APP.te(k8a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],null))),$APP.N,"Create newline node of string `s`, where `s` is one or more linebreak characters."],null)),$APP.te(l8a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null))),$APP.N,"Returns children for `node` converted to Clojure forms.\n\n  Optional `opts` can specify:\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)",
$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null)],null),$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te(J3a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.MH],null))),$APP.N,"Returns true if `n` is a node representing a keyword."],
null)),$APP.te(p3a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null))),$APP.N,'Create a node representing a set with `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/set-node [(n/token-node 1)\n                    (n/spaces 1)\n                    (n/token-node 2)\n                    (n/spaces 1)\n                    (n/token-node 3)])\n       n/string)\n   ;; \x3d\x3e "#{1 2 3}"\n   ```\n\n   Note that rewrite-clj allows the, technically illegal, set with duplicate values:\n   ```Clojure\n   (-\x3e (n/set-node [(n/token-node 1)\n                    (n/spaces 1)\n                    (n/token-node 1)])\n       (n/string))\n   ;; \x3d\x3e "#{1 1}"\n   ```\n\n   See [docs on sets with duplicate values](/doc/01-user-guide.adoc#sets-with-duplicate-values).'],
null)),$APP.te(w4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null))),$APP.N,"Return true if `node` cannot be converted to an s-expression element."],null)),$APP.te(O5a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null),new $APP.H(null,2,5,$APP.J,[VW,XW],null))),$APP.N,'Create node representing a reader macro with `macro-node` and `form-node` or `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   ;; here we call with macro-node and form-node\n   (-\x3e (n/reader-macro-node (n/token-node \'my-macro)\n                            (n/token-node 42))\n       n/string)\n   ;; \x3d\x3e "#my-macro 42"\n\n   ;; calling with a sequence of children gives us control over whitespace\n   (-\x3e (n/reader-macro-node [(n/token-node \'my-macro)\n                             (n/spaces 4)\n                             (n/token-node 42)])\n       n/string)\n   ;; \x3d\x3e "#my-macro    42"\n   ```',
$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,1,5,$APP.J,[$APP.$F],null),new $APP.H(null,2,5,$APP.J,[VW,XW],null)],null),$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null),new $APP.H(null,2,5,$APP.J,[VW,XW],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te($APP.NBa,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.lH],null))),$APP.N,"Coerce `form` to node."],null)),$APP.te(V3a,new $APP.h(null,
2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null))),$APP.N,'Create a node representing a list with `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/list-node [(n/token-node 1)\n                     (n/spaces 1)\n                     (n/token-node 2)\n                     (n/spaces 1)\n                     (n/token-node 3)])\n       n/string)\n   ;; \x3d\x3e "(1 2 3)"\n   ```'],null)),$APP.te(A6a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,
$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null),new $APP.H(null,2,5,$APP.J,[aX,$APP.gD],null))),$APP.N,'Create a node representing a form with metadata that renders to the reader syntax.\n\n   When creating manually, you can specify `metadata` and `data` and spacing between the 2 elems will be included:\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/raw-meta-node (n/keyword-node :foo)\n                        (n/vector-node [(n/token-node 2)]))\n        n/string)\n   ;; \x3d\x3e "#^:foo [2]"\n\n   (-\x3e (n/raw-meta-node (n/map-node [:foo (n/spaces 1) 42])\n                        (n/vector-node [(n/token-node 2)]))\n       n/string)\n   ;; \x3d\x3e "#^{:foo 42} [2]"\n   ```\n   When specifying a sequence of `children`, spacing is explicit:\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/raw-meta-node [(n/keyword-node :foo)\n                         (n/spaces 1)\n                         (n/vector-node [(n/token-node 2)])])\n       n/string)\n   ;; \x3d\x3e "#^:foo [2]"\n   ```\n   See also: [[meta-node]]',
$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,1,5,$APP.J,[$APP.$F],null),new $APP.H(null,2,5,$APP.J,[aX,$APP.gD],null)],null),$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null),new $APP.H(null,2,5,$APP.J,[aX,$APP.gD],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te(r5a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null))),$APP.N,"Returns true if `node` can have children."],null)),$APP.te(j6a,
new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null))),$APP.N,'Create node representing an inline evaluation\n   where `children` is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/eval-node (n/list-node [(n/token-node \'inc)\n                                  (n/spaces 1)\n                                  (n/token-node 1)]))\n       n/string)\n   ;; \x3d\x3e "#\x3d(inc 1)"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; prefix and the form\n   (-\x3e (n/eval-node [(n/spaces 3)\n                     (n/list-node [(n/token-node \'inc)\n                                   (n/spaces 1)\n                                   (n/token-node 1)])])\n       n/string)\n   ;; \x3d\x3e "#\x3d   (inc 1)"\n   ```'],
null)),$APP.te(t6a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[N2a],null))),$APP.N,'Create node representing a regex with `pattern-string`.\n   Use same escape rules for `pattern-string` as you would for `(re-pattern "pattern-string")`\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/regex-node "my\\\\.lil.*regex")\n       n/string)\n   ;; \x3d\x3e "#\\"my\\\\.lil.*regex\\""\n   ```'],null)),$APP.te(C6a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,
$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null))),$APP.N,'Create a namespaced map node with `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/namespaced-map-node [(n/map-qualifier-node true "my-ns-alias")\n                               (n/spaces 1)\n                               (n/map-node [(n/keyword-node :a)\n                                            (n/spaces 1)\n                                            (n/token-node 1)])])\n       n/string)\n   ;; \x3d\x3e "#::my-ns-alias {:a 1}"\n   ```\n\n   Map qualifier context is automatically applied to map keys for sexpr support.\n\n   See also [[map-qualifier-node]] and [[map-node]].'],
null)),$APP.te(L4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null))),$APP.N,"Returns true if `node` represents one or more linebreaks."],null)),$APP.te(v3a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null))),$APP.N,'Create node representing a single unquoted form where `children`\n   is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/unquote-node (n/token-node \'my-var))\n       n/string)\n   ;; \x3d\x3e "~my-var"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; unquote and the uquoted\n   (-\x3e (n/unquote-node [(n/spaces 4)\n                        (n/token-node \'my-var)])\n       n/string)\n   ;; \x3d\x3e "~    my-var"\n   ```'],
null)),$APP.te($APP.$F,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null))),$APP.N,"Returns child nodes for `node`."],null)),$APP.te(Z6a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null))),$APP.N,"Create node representing a single quoted form where `children`\n   is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-\x3e (n/quote-node (n/token-node 'sym))\n       (n/string))\n   ;; \x3d\x3e \"'sym\"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; quote and the quoted\n   (-\x3e (n/quote-node [(n/spaces 10)\n                      (n/token-node 'sym1) ])\n       n/string)\n   ;; \x3d\x3e \"'          sym1\"\n   ```"],
null)),$APP.te(G2a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[$APP.LH,PW],null),new $APP.H(null,1,5,$APP.J,[$APP.LH],null))),$APP.N,'Create a node representing a keyword `k`.\n\n   Optionally include `auto-resolved?`, which defaults to `false`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   ;; unqualified keyword\n   (-\x3e (n/keyword-node :kw)\n       n/string)\n   ;; \x3d\x3e ":kw"\n\n   ;; qualified keyword\n   (-\x3e (n/keyword-node :my-prefix/kw)\n       n/string)\n   ;; \x3d\x3e ":my-prefix/kw"\n\n   ;; keyword auto-resolved to current ns\n   (-\x3e (n/keyword-node :kw true)\n       n/string)\n   ;; \x3d\x3e "::kw"\n\n   ;; keyword auto-resolved to a namespace with given alias\n   (-\x3e (n/keyword-node :ns-alias/kw true)\n       n/string)\n   ;; \x3d\x3e "::ns-alias/kw"\n   ```',
$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[$APP.LH,PW],null),new $APP.H(null,1,5,$APP.J,[$APP.LH],null)],null),$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[$APP.LH,PW],null),new $APP.H(null,1,5,$APP.J,[$APP.LH],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te(h4a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.mH],null),new $APP.H(null,2,5,$APP.J,[$APP.mH,$APP.KG],null))),$APP.N,'Create node representing an integer `value` in `base`.\n\n  `base` defaults to 10.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/integer-node 42)\n       n/string)\n   ;; \x3d\x3e "42"\n\n   (-\x3e (n/integer-node 31 2)\n       n/string)\n   ;; \x3d\x3e "2r11111"\n   ```\n\n   Note: the parser does not currently parse to integer-nodes, but they fully supported for output.',
$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,1,5,$APP.J,[$APP.mH],null),new $APP.H(null,2,5,$APP.J,[$APP.mH,$APP.KG],null)],null),$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.mH],null),new $APP.H(null,2,5,$APP.J,[$APP.mH,$APP.KG],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te(m8a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null))),$APP.N,"Returns true if `node` is a comment."],null)),
$APP.te(z7a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],null),new $APP.H(null,2,5,$APP.J,[$APP.GE,$APP.TH],null))),$APP.N,'Create node representing a comment with text `s`.\n\n   You may optionally specify a `prefix` of `";"` or `"#!"`, defaults is `";"`.\n\n   Argument `s`:\n   - must not include the `prefix`\n   - usually includes the trailing newline character, otherwise subsequent nodes will be on the comment line\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/comment-node "; my comment\\n")\n       n/string)\n   ;; \x3d\x3e ";; my comment\\n"\n\n   (-\x3e (n/comment-node "#!" "/usr/bin/env bb\\n")\n       n/string)\n   ;; \x3d\x3e "#!/usr/bin/env bb\\n"\n   ```',
$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,1,5,$APP.J,[$APP.TH],null),new $APP.H(null,2,5,$APP.J,[$APP.GE,$APP.TH],null)],null),$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],null),new $APP.H(null,2,5,$APP.J,[$APP.GE,$APP.TH],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te(d5a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.MH],null))),$APP.N,"Create node representing `n` spaces."],null)),
$APP.te(w7a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],null))),$APP.N,"Create whitespace node of string `s`, where `s` is one or more space characters."],null)),$APP.te(b4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null))),$APP.N,"Check whether the given node represents whitespace or comment."],null)),$APP.te(K6a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.WH],null))),$APP.N,"Returns true if `x` is a rewrite-clj created node."],
null)),$APP.te(j8a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null),new $APP.H(null,2,5,$APP.J,[aX,$APP.gD],null))),$APP.N,'Create a node representing a form with metadata.\n\n   When creating manually, you can specify `metadata` and `data` and spacing between the 2 elems will be included:\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/meta-node (n/keyword-node :foo)\n                    (n/vector-node [(n/token-node 1)]))\n       n/string)\n   ;; \x3d\x3e "^:foo [1]"\n\n   (-\x3e (n/meta-node (n/map-node [:foo (n/spaces 1) 42])\n                    (n/vector-node [(n/token-node 1)]))\n       n/string)\n   ;; \x3d\x3e "^{:foo 42} [1]"\n   ```\n   When specifying a sequence of `children`, spacing is explicit:\n\n   ```Clojure\n   (-\x3e (n/meta-node [(n/keyword-node :foo)\n                     (n/spaces 1)\n                     (n/vector-node [(n/token-node 1)])])\n       n/string)\n   ;; \x3d\x3e "^:foo [1]"\n   ```\n   See also: [[raw-meta-node]]',
$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,1,5,$APP.J,[$APP.$F],null),new $APP.H(null,2,5,$APP.J,[aX,$APP.gD],null)],null),$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null),new $APP.H(null,2,5,$APP.J,[aX,$APP.gD],null)),$APP.gF,$APP.K(null,null)],null)],null))],[new $APP.h(null,3,[$APP.Q,F4a,$APP.ou,function(a,b){return mU(a,b)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.$F],null)),$APP.N,
"Returns `node` replacing current children with `children`."],null)],null),new $APP.h(null,3,[$APP.Q,d7a,$APP.ou,function(a){return UU(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.MH],null)),$APP.N,"Create node representing `n` newline characters."],null)],null),new $APP.h(null,3,[$APP.Q,a4a,$APP.ou,iX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null)),$APP.N,"Return `node` converted to form.\n\n  Optional `opts` can specify:\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances)."],
null)],null),new $APP.h(null,3,[$APP.Q,t3a,$APP.ou,function(a,b){return new ZU(a,b,null,null,null)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[PW,$APP.GE],null)),$APP.N,'Create a map qualifier node.\n   The map qualifier node is a child node of [[namespaced-map-node]].\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   ;; qualified\n   (-\x3e (n/map-qualifier-node false "my-prefix")\n       n/string)\n   ;; \x3d\x3e ":my-prefix"\n\n   ;; auto-resolved to current ns\n   (-\x3e (n/map-qualifier-node true nil)\n       n/string)\n   ;; \x3d\x3e "::"\n\n   ;; auto-resolve to namespace with alias\n   (-\x3e (n/map-qualifier-node true "my-ns-alias")\n       n/string)\n   ;; \x3d\x3e "::my-ns-alias"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.Q,y5a,$APP.ou,function(a){return eU(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null)),$APP.N,"Return number of characters for the string version of `node`."],null)],null),new $APP.h(null,3,[$APP.Q,A7a,$APP.ou,function(a){return H0a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null)),$APP.N,'Create node representing the dereferencing of a form\n   where `children` is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/deref-node (n/token-node \'my-var))\n       n/string)\n   ;; \x3d\x3e "@my-var"\n\n   ;; specifying a sequence allows for whitespace between @ and form\n   (-\x3e (n/deref-node [(n/spaces 2)\n                      (n/token-node \'my-var)])\n       n/string)\n   ;; \x3d\x3e "@  my-var"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.Q,z3a,$APP.ou,function(a){return $APP.x.h($APP.Am,bU(a))},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.MH],null)),$APP.N,"Returns true if `n` is a node representing a symbol."],null)],null),new $APP.h(null,3,[$APP.Q,k3a,$APP.ou,function(a,b){return rU(a,b)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[$APP.rE,D5a],null)),$APP.N,"Applies `map-qualifier` context to `node`"],null)],null),new $APP.h(null,3,[$APP.Q,
G3a,$APP.ou,function(a){return F0a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null)),$APP.N,"Create node representing a var where `children` is either a\n   sequence of nodes or a single node.\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-\x3e (n/var-node (n/token-node 'my-var))\n       n/string)\n   ;; \x3d\x3e \"#'my-var\"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; prefix and the var\n   (-\x3e (n/var-node [(n/spaces 2)\n                    (n/token-node 'my-var)])\n       n/string)\n   ;; \x3d\x3e \"#'  my-var\"\n   ```"],
null)],null),new $APP.h(null,3,[$APP.Q,g7a,$APP.ou,function(a){return sU(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null)),$APP.N,"Removes map-qualifier context for `node`"],null)],null),new $APP.h(null,3,[$APP.Q,M3a,$APP.ou,yX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.mH],null),new $APP.H(null,2,5,$APP.J,[$APP.mH,bX],null)),$APP.N,'Create node for an unspecified token of `value`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/token-node \'sym) n/string)\n   ;; \x3d\x3e "sym"\n\n   (-\x3e (n/token-node 42) n/string)\n   ;; \x3d\x3e "42"\n\n   (-\x3e (n/token-node "astring") n/string)\n   ;; \x3d\x3e "\\"astring\\""\n   ```\n\n   To construct strings appearing over multiple lines, see [[string-node]].'],
null)],null),new $APP.h(null,3,[$APP.Q,j5a,$APP.ou,function(a){return D0a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null)),$APP.N,'Create node representing a single unquote-spliced form where `children`\n   is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/unquote-splicing-node (n/token-node \'my-var))\n       n/string)\n   ;; \x3d\x3e "~@my-var"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; splicing unquote and the splicing unquoted\n   (-\x3e (n/unquote-splicing-node [(n/spaces 2)\n                                 (n/token-node \'my-var)])\n       n/string)\n   ;; \x3d\x3e "~@  my-var"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.Q,Z4a,$APP.ou,function(a){return u0a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.pI],null)),$APP.N,'Interleave `nodes` with `", "` nodes.'],null)],null),new $APP.h(null,3,[$APP.Q,U3a,$APP.ou,function(a){return VU(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null)),$APP.N,"Returns true if `node` represents Clojure whitespace."],null)],null),new $APP.h(null,3,[$APP.Q,E3a,$APP.ou,function(a){return aU(a)},
$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null)),$APP.N,"Returns keyword representing type of `node`."],null)],null),new $APP.h(null,3,[$APP.Q,H2a,$APP.ou,function(a){return N0a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null)),$APP.N,'Create node representing an unevaled form with `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/uneval-node [(n/spaces 1)\n                       (n/token-node 42)])\n       n/string)\n   ;; \x3d\x3e "#_ 42"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.Q,i6a,$APP.ou,function(a){return $APP.x.h(aU(a),QU)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null)),$APP.N,"Returns true if `node` represents one or more commas."],null)],null),new $APP.h(null,3,[$APP.Q,h3a,$APP.ou,function(a){return s0a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],null)),$APP.N,"Convert string `s` of whitespace to whitespace/newline nodes."],null)],null),new $APP.h(null,
3,[$APP.Q,A2a,$APP.ou,function(a){return Y_a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null)),$APP.N,"DEPRECATED: Get first child as a pair of tag/sexpr (if inner node),\n   or just the node's own sexpr. (use explicit analysis of `children`\n   `child-sexprs` instead) "],null)],null),new $APP.h(null,3,[$APP.Q,k4a,$APP.ou,function(a){return $APP.Fi($APP.cn.h(a,$APP.kn.g(z8a)))},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.pI],null)),
$APP.N,"Interleave `nodes` with newline nodes."],null)],null),new $APP.h(null,3,[$APP.Q,I2a,$APP.ou,function(a){return kV(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null)),$APP.N,'Create a node representing a map with `children`.\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/map-node [(n/keyword-node :a)\n                    (n/spaces 1)\n                    (n/token-node 1)\n                    (n/spaces 1)\n                    (n/keyword-node :b)\n                    (n/spaces 1)\n                    (n/token-node 2)])\n       (n/string))\n   ;; \x3d\x3e "{:a 1 :b 2}"\n   ```\n\n   Note that rewrite-clj allows the, technically illegal, unbalanced map:\n   ```Clojure\n   (-\x3e (n/map-node [(n/keyword-node :a)])\n       (n/string))\n   ;; \x3d\x3e "{:a}"\n   ```\n   See [docs on unbalanced maps](/doc/01-user-guide.adoc#unbalanced-maps).\n\n   Rewrite-clj also allows the, also technically illegal, map with duplicate keys:\n   ```Clojure\n   (-\x3e (n/map-node [(n/keyword-node :a)\n                    (n/spaces 1)\n                    (n/token-node 1)\n                    (n/spaces 1)\n                    (n/keyword-node :a)\n                    (n/spaces 1)\n                    (n/token-node 2)])\n       (n/string))\n   ;; \x3d\x3e "{:a 1 :a 2}"\n   ```\n   See [docs on maps with duplicate keys](/doc/01-user-guide.adoc#maps-with-duplicate-keys).'],
null)],null),new $APP.h(null,3,[$APP.Q,E4a,$APP.ou,function(a){return nU(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null)),$APP.N,"Returns number of characters before children for `node`."],null)],null),new $APP.h(null,3,[$APP.Q,y3a,$APP.ou,function(a){return B0a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null)),$APP.N,'Create node representing a single syntax-quoted form where `children`\n   is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/syntax-quote-node (n/token-node \'map))\n       n/string)\n   ;; \x3d\x3e "`map"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; syntax quote and the syntax quoted\n   (-\x3e (n/syntax-quote-node [(n/spaces 3)\n                             (n/token-node \'map)])\n       n/string)\n   ;; \x3d\x3e "`   map"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.Q,$6a,$APP.ou,function(a){return fU(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null)),$APP.N,"Return the string version of `node`."],null)],null),new $APP.h(null,3,[$APP.Q,y6a,$APP.ou,function(a){return new yU(a,null,null,null)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null)),$APP.N,"Create node representing an anonymous function with `children`.\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-\x3e (n/fn-node [(n/token-node '+)\n                   (n/spaces 1)\n                   (n/token-node 1)\n                   (n/spaces 1)\n                   (n/token-node '%1)])\n       n/string)\n   ;; \x3d\x3e \"#(+ 1 %1)\"\n   ```"],
null)],null),new $APP.h(null,3,[$APP.Q,M2a,$APP.ou,function(a){return iV(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null)),$APP.N,'Create a node representing a vector with `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/vector-node [(n/token-node 1)\n                       (n/spaces 1)\n                       (n/token-node 2)\n                       (n/spaces 1)\n                       (n/token-node 3)])\n       n/string)\n   ;; \x3d\x3e "[1 2 3]"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.Q,g6a,$APP.ou,function(a){return $APP.Cb(cU(a))},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null)),$APP.N,"Return true if [[sexpr]] is supported for `node`'s element type.\n\n   See [related docs in user guide](/doc/01-user-guide.adoc#not-all-clojure-is-sexpr-able)"],null)],null),new $APP.h(null,3,[$APP.Q,L7a,$APP.ou,function(a){return new zU(a,null,null,null)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,
[$APP.$F],null)),$APP.N,'Create top-level node wrapping multiple `children`.\n   The forms node is equivalent to an implicit `do` at the top-level.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/forms-node [(n/token-node 1)\n                      (n/spaces 1)\n                      (n/token-node 2)])\n       n/string)\n   ;; \x3d\x3e "1 2"\n   ```\n   '],null)],null),new $APP.h(null,3,[$APP.Q,Y4a,$APP.ou,rX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,
[$APP.pI],null),new $APP.H(null,2,5,$APP.J,[$APP.pI,$APP.bG],null)),$APP.N,"Return forms for `nodes`. Nodes that do not represent s-expression are skipped.\n\n  Optional `opts` can specify:\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances)."],null)],null),new $APP.h(null,3,[$APP.Q,k5a,$APP.ou,function(a){return new NU(a,
null,null,null)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],null)),$APP.N,"Create comma node of string `s`, where `s` is one or more comma characters."],null)],null),new $APP.h(null,3,[$APP.Q,S5a,$APP.ou,function(a){return mV(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[A4a],null)),$APP.N,'Create node representing a string value where `lines` can be a sequence of strings or a single string.\n\n  When `lines` is a sequence, the resulting node `tag` will be `:multi-line`, otherwise `:token`.\n\n  `:multi-line` refers to a single string in your source that appears over multiple lines, for example:\n\n  ```Clojure\n  (def s "foo\n            bar\n              baz")\n  ```\n\n  It does not apply to a string that appears on a single line that includes escaped newlines, for example:\n\n  ```Clojure\n  (def s "foo\\nbar\\n\\baz")\n  ```\n\n  Naive examples (see example on escaping below):\n\n  ```Clojure\n  (require \'[rewrite-clj.node :as n])\n\n  (-\x3e (n/string-node "hello")\n      n/string)\n  ;; \x3d\x3e "\\"hello\\""\n\n  (-\x3e (n/string-node ["line1" "" "line3"])\n       n/string)\n  ;; \x3d\x3e "\\"line1\\n\\nline3\\""\n  ```\n\n  This function was originally written to serve the rewrite-clj parser.\n  Escaping and wrapping expectations are non-obvious.\n  - characters within strings are assumed to be escaped\n  - but the string should not wrapped with `\\"`\n\n  Here\'s an example of conforming to these expectations for a string that has escape sequences.\n  (Best to view this on cljdoc, docstring string escaping is confusing).\n\n  ```Clojure\n  (require \'[clojure.string :as string])\n\n  (defn pr-str-unwrapped [s]\n    (apply str (-\x3e s pr-str next butlast)))\n\n  (-\x3e "hey \\" man"\n      pr-str-unwrapped\n      n/string-node\n      n/string)\n  ;; \x3d\x3e "\\"hey \\\\\\" man\\""\n  ```\n\n  To construct strings appearing on a single line, consider [[token-node]].\n  It will handle escaping for you.'],
null)],null),new $APP.h(null,3,[$APP.Q,i3a,$APP.ou,function(a){return PU(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],null)),$APP.N,"Create newline node of string `s`, where `s` is one or more linebreak characters."],null)],null),new $APP.h(null,3,[$APP.Q,T6a,$APP.ou,hX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null)),$APP.N,"Returns children for `node` converted to Clojure forms.\n\n  Optional `opts` can specify:\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)"],
null)],null),new $APP.h(null,3,[$APP.Q,u6a,$APP.ou,function(a){return $APP.x.h($APP.Cm,bU(a))},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.MH],null)),$APP.N,"Returns true if `n` is a node representing a keyword."],null)],null),new $APP.h(null,3,[$APP.Q,p5a,$APP.ou,function(a){return jV(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null)),$APP.N,'Create a node representing a set with `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/set-node [(n/token-node 1)\n                    (n/spaces 1)\n                    (n/token-node 2)\n                    (n/spaces 1)\n                    (n/token-node 3)])\n       n/string)\n   ;; \x3d\x3e "#{1 2 3}"\n   ```\n\n   Note that rewrite-clj allows the, technically illegal, set with duplicate values:\n   ```Clojure\n   (-\x3e (n/set-node [(n/token-node 1)\n                    (n/spaces 1)\n                    (n/token-node 1)])\n       (n/string))\n   ;; \x3d\x3e "#{1 1}"\n   ```\n\n   See [docs on sets with duplicate values](/doc/01-user-guide.adoc#sets-with-duplicate-values).'],
null)],null),new $APP.h(null,3,[$APP.Q,$7a,$APP.ou,function(a){return cU(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null)),$APP.N,"Return true if `node` cannot be converted to an s-expression element."],null)],null),new $APP.h(null,3,[$APP.Q,P5a,$APP.ou,xX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null),new $APP.H(null,2,5,$APP.J,[VW,XW],null)),$APP.N,'Create node representing a reader macro with `macro-node` and `form-node` or `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   ;; here we call with macro-node and form-node\n   (-\x3e (n/reader-macro-node (n/token-node \'my-macro)\n                            (n/token-node 42))\n       n/string)\n   ;; \x3d\x3e "#my-macro 42"\n\n   ;; calling with a sequence of children gives us control over whitespace\n   (-\x3e (n/reader-macro-node [(n/token-node \'my-macro)\n                             (n/spaces 4)\n                             (n/token-node 42)])\n       n/string)\n   ;; \x3d\x3e "#my-macro    42"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.Q,N3a,$APP.ou,function(a){return pU(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.lH],null)),$APP.N,"Coerce `form` to node."],null)],null),new $APP.h(null,3,[$APP.Q,S6a,$APP.ou,function(a){return hV(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null)),$APP.N,'Create a node representing a list with `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/list-node [(n/token-node 1)\n                     (n/spaces 1)\n                     (n/token-node 2)\n                     (n/spaces 1)\n                     (n/token-node 3)])\n       n/string)\n   ;; \x3d\x3e "(1 2 3)"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.Q,m3a,$APP.ou,wX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null),new $APP.H(null,2,5,$APP.J,[aX,$APP.gD],null)),$APP.N,'Create a node representing a form with metadata that renders to the reader syntax.\n\n   When creating manually, you can specify `metadata` and `data` and spacing between the 2 elems will be included:\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/raw-meta-node (n/keyword-node :foo)\n                        (n/vector-node [(n/token-node 2)]))\n        n/string)\n   ;; \x3d\x3e "#^:foo [2]"\n\n   (-\x3e (n/raw-meta-node (n/map-node [:foo (n/spaces 1) 42])\n                        (n/vector-node [(n/token-node 2)]))\n       n/string)\n   ;; \x3d\x3e "#^{:foo 42} [2]"\n   ```\n   When specifying a sequence of `children`, spacing is explicit:\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/raw-meta-node [(n/keyword-node :foo)\n                         (n/spaces 1)\n                         (n/vector-node [(n/token-node 2)])])\n       n/string)\n   ;; \x3d\x3e "#^:foo [2]"\n   ```\n   See also: [[meta-node]]'],
null)],null),new $APP.h(null,3,[$APP.Q,a7a,$APP.ou,function(a){return kU(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null)),$APP.N,"Returns true if `node` can have children."],null)],null),new $APP.h(null,3,[$APP.Q,d6a,$APP.ou,function(a){return G0a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null)),$APP.N,'Create node representing an inline evaluation\n   where `children` is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/eval-node (n/list-node [(n/token-node \'inc)\n                                  (n/spaces 1)\n                                  (n/token-node 1)]))\n       n/string)\n   ;; \x3d\x3e "#\x3d(inc 1)"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; prefix and the form\n   (-\x3e (n/eval-node [(n/spaces 3)\n                     (n/list-node [(n/token-node \'inc)\n                                   (n/spaces 1)\n                                   (n/token-node 1)])])\n       n/string)\n   ;; \x3d\x3e "#\x3d   (inc 1)"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.Q,t8a,$APP.ou,function(a){return new fV(a,null,null,null)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[N2a],null)),$APP.N,'Create node representing a regex with `pattern-string`.\n   Use same escape rules for `pattern-string` as you would for `(re-pattern "pattern-string")`\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/regex-node "my\\\\.lil.*regex")\n       n/string)\n   ;; \x3d\x3e "#\\"my\\\\.lil.*regex\\""\n   ```'],
null)],null),new $APP.h(null,3,[$APP.Q,B3a,$APP.ou,function(a){return new $U(y0a(a),null,null,null)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null)),$APP.N,'Create a namespaced map node with `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/namespaced-map-node [(n/map-qualifier-node true "my-ns-alias")\n                               (n/spaces 1)\n                               (n/map-node [(n/keyword-node :a)\n                                            (n/spaces 1)\n                                            (n/token-node 1)])])\n       n/string)\n   ;; \x3d\x3e "#::my-ns-alias {:a 1}"\n   ```\n\n   Map qualifier context is automatically applied to map keys for sexpr support.\n\n   See also [[map-qualifier-node]] and [[map-node]].'],
null)],null),new $APP.h(null,3,[$APP.Q,h6a,$APP.ou,function(a){return WU(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null)),$APP.N,"Returns true if `node` represents one or more linebreaks."],null)],null),new $APP.h(null,3,[$APP.Q,v8a,$APP.ou,function(a){return C0a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null)),$APP.N,'Create node representing a single unquoted form where `children`\n   is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/unquote-node (n/token-node \'my-var))\n       n/string)\n   ;; \x3d\x3e "~my-var"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; unquote and the uquoted\n   (-\x3e (n/unquote-node [(n/spaces 4)\n                        (n/token-node \'my-var)])\n       n/string)\n   ;; \x3d\x3e "~    my-var"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.Q,f8a,$APP.ou,function(a){return lU(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null)),$APP.N,"Returns child nodes for `node`."],null)],null),new $APP.h(null,3,[$APP.Q,z4a,$APP.ou,function(a){return A0a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null)),$APP.N,"Create node representing a single quoted form where `children`\n   is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-\x3e (n/quote-node (n/token-node 'sym))\n       (n/string))\n   ;; \x3d\x3e \"'sym\"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; quote and the quoted\n   (-\x3e (n/quote-node [(n/spaces 10)\n                      (n/token-node 'sym1) ])\n       n/string)\n   ;; \x3d\x3e \"'          sym1\"\n   ```"],
null)],null),new $APP.h(null,3,[$APP.Q,b5a,$APP.ou,uX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[$APP.LH,PW],null),new $APP.H(null,1,5,$APP.J,[$APP.LH],null)),$APP.N,'Create a node representing a keyword `k`.\n\n   Optionally include `auto-resolved?`, which defaults to `false`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   ;; unqualified keyword\n   (-\x3e (n/keyword-node :kw)\n       n/string)\n   ;; \x3d\x3e ":kw"\n\n   ;; qualified keyword\n   (-\x3e (n/keyword-node :my-prefix/kw)\n       n/string)\n   ;; \x3d\x3e ":my-prefix/kw"\n\n   ;; keyword auto-resolved to current ns\n   (-\x3e (n/keyword-node :kw true)\n       n/string)\n   ;; \x3d\x3e "::kw"\n\n   ;; keyword auto-resolved to a namespace with given alias\n   (-\x3e (n/keyword-node :ns-alias/kw true)\n       n/string)\n   ;; \x3d\x3e "::ns-alias/kw"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.Q,t7a,$APP.ou,tX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.mH],null),new $APP.H(null,2,5,$APP.J,[$APP.mH,$APP.KG],null)),$APP.N,'Create node representing an integer `value` in `base`.\n\n  `base` defaults to 10.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/integer-node 42)\n       n/string)\n   ;; \x3d\x3e "42"\n\n   (-\x3e (n/integer-node 31 2)\n       n/string)\n   ;; \x3d\x3e "2r11111"\n   ```\n\n   Note: the parser does not currently parse to integer-nodes, but they fully supported for output.'],
null)],null),new $APP.h(null,3,[$APP.Q,Q3a,$APP.ou,function(a){return xU(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null)),$APP.N,"Returns true if `node` is a comment."],null)],null),new $APP.h(null,3,[$APP.Q,D3a,$APP.ou,sX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],null),new $APP.H(null,2,5,$APP.J,[$APP.GE,$APP.TH],null)),$APP.N,'Create node representing a comment with text `s`.\n\n   You may optionally specify a `prefix` of `";"` or `"#!"`, defaults is `";"`.\n\n   Argument `s`:\n   - must not include the `prefix`\n   - usually includes the trailing newline character, otherwise subsequent nodes will be on the comment line\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/comment-node "; my comment\\n")\n       n/string)\n   ;; \x3d\x3e ";; my comment\\n"\n\n   (-\x3e (n/comment-node "#!" "/usr/bin/env bb\\n")\n       n/string)\n   ;; \x3d\x3e "#!/usr/bin/env bb\\n"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.Q,t4a,$APP.ou,function(a){return TU(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.MH],null)),$APP.N,"Create node representing `n` spaces."],null)],null),new $APP.h(null,3,[$APP.Q,n4a,$APP.ou,function(a){return MU(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],null)),$APP.N,"Create whitespace node of string `s`, where `s` is one or more space characters."],null)],null),new $APP.h(null,3,[$APP.Q,
W3a,$APP.ou,function(a){return U0a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null)),$APP.N,"Check whether the given node represents whitespace or comment."],null)],null),new $APP.h(null,3,[$APP.Q,L2a,$APP.ou,function(a){return null!=a&&$APP.wi.h(M6a,aU(a))},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.WH],null)),$APP.N,"Returns true if `x` is a rewrite-clj created node."],null)],null),new $APP.h(null,3,[$APP.Q,$4a,$APP.ou,vX,$APP.mb,
new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.$F],null),new $APP.H(null,2,5,$APP.J,[aX,$APP.gD],null)),$APP.N,'Create a node representing a form with metadata.\n\n   When creating manually, you can specify `metadata` and `data` and spacing between the 2 elems will be included:\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/meta-node (n/keyword-node :foo)\n                    (n/vector-node [(n/token-node 1)]))\n       n/string)\n   ;; \x3d\x3e "^:foo [1]"\n\n   (-\x3e (n/meta-node (n/map-node [:foo (n/spaces 1) 42])\n                    (n/vector-node [(n/token-node 1)]))\n       n/string)\n   ;; \x3d\x3e "^{:foo 42} [1]"\n   ```\n   When specifying a sequence of `children`, spacing is explicit:\n\n   ```Clojure\n   (-\x3e (n/meta-node [(n/keyword-node :foo)\n                     (n/spaces 1)\n                     (n/vector-node [(n/token-node 1)])])\n       n/string)\n   ;; \x3d\x3e "^:foo [1]"\n   ```\n   See also: [[raw-meta-node]]'],
null)],null)]),A8a),F8a=$APP.pu(new $APP.h(null,2,[$APP.te($APP.xEa,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],null))),$APP.N,"Return a node for first source code element in string `s`."],null)),new $APP.h(null,3,[$APP.Q,U5a,$APP.ou,function(a){return KU($APP.Gl($APP.Fl(a)))},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],null)),$APP.N,"Return a node for first source code element in string `s`."],null)],null),$APP.te($APP.mFa,
new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],null))),$APP.N,"Return forms node for all source code elements in string `s`."],null)),new $APP.h(null,3,[$APP.Q,B7a,$APP.ou,r1a,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],null)),$APP.N,"Return forms node for all source code elements in string `s`."],null)],null)],null),B8a),G8a=$APP.pu($APP.gi([$APP.te($APP.sK,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,
$APP.J,[RW],null))),$APP.N,"Split current s-sexpression in two at given node `zloc`\n\n  -  `[1 2 |3 4 5] \x3d\x3e [1 2 3] [4 5]`"],null)),$APP.te(F6a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.sF],null))),$APP.N,'In string and comment aware kill for one node/word at `pos` in `zloc`.\n\n  - `(+ |100 100) \x3d\x3e (+ |100)`\n  - `(for |(bar do)) \x3d\x3e (foo)`\n  - `"|hello world" \x3d\x3e "| world"`\n  - ` ; |hello world \x3d\x3e ;  |world`'],null)),$APP.te(l7a,
new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.SH],null))),$APP.N,"Wrap current node with a given type `t` where `t` can be one of `:vector`, `:list`, `:set`, `:map` `:fn`.\n\n  - `|123 \x3d\x3e [|123]` given `:vector`\n  - `|[1 [2]] \x3d\x3e [|[1 [2]]]`"],null)),$APP.te(P4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Pull in next right outer node (if none at first level, tries next etc) into\n  current S-expression\n\n  - `[1 2 [|3] 4 5] \x3d\x3e [1 2 [|3 4] 5]`"],
null)),$APP.te($APP.MB,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,'Join S-expression to the left and right of current loc. Also works for strings.\n\n  - `[[1 2] |[3 4]] \x3d\x3e [[1 2 3 4]]`\n  - `["Hello " | "World"] \x3d\x3e ["Hello World"]`'],null)),$APP.te(a3a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Remove left siblings of current given node in S-Expression and unwrap remaining into enclosing S-expression\n\n  - `(foo (let ((x 5)) |(sqrt n)) bar) \x3d\x3e (foo (sqrt n) bar)`"],
null)),$APP.te(P7a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.SH],null))),$APP.N,"Create a new seq node of type `t` left of `zloc` then slurp fully into the new node\n\n  - `[1 |2 3 4] \x3d\x3e [1 [|2 3 4]]`"],null)),$APP.te(a5a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.sF],null))),$APP.N,"In string aware split\n\n  Perform split at given position `pos` Like split, but:\n\n  - if inside string splits string into two strings\n\n  `pos` should provide `{:row :col }` which are relative to the start of the given form the zipper represents\n  `zloc` must be positioned at a node previous (given depth first) to the node at given pos"],
null)),$APP.te(F3a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Pull in prev left outer node (if none at first level, tries next etc) into\n  current S-expression\n\n  - `[1 2 [|3] 4 5] \x3d\x3e [1 [2 |3] 4 5]`"],null)),$APP.te(o8a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Move node at current location to the position of previous location given a depth first traversal\n\n    -  `(+ 1 (+ 2 |3) 4) \x3d\x3e (+ 1 (+ |3 2) 4)`\n    - `(+ 1 (+ 2 3) |4) \x3d\x3e (+ 1 (+ 2 3 |4))`\n\n  returns zloc after move or given zloc if a move isn't possible"],
null)),$APP.te(q7a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Push out the rightmost node of the current S-expression into outer right form.\n\n  - `[1 2 [|3 4] 5] \x3d\x3e [1 2 [|3] 4 5]`"],null)),$APP.te(L3a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Kill all sibling nodes to the right of the current node in `zloc`.\n\n  - `[1 2| 3 4] \x3d\x3e [1 2|]`"],null)),$APP.te(Y2a,new $APP.h(null,2,
[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Pull in all left outer-nodes into current S-expression, but only the ones at the same level\n  as the the first one.\n\n  - `[1 2 [|3] 4 5] \x3d\x3e [[1 2 |3] 4 5]`"],null)),$APP.te(m7a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Remove current given node and its right siblings in S-Expression and unwrap remaining into enclosing S-expression\n\n  - `(a (b c |d e) f) \x3d\x3e (a b |c f)`"],
null)),$APP.te(J4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Delete siblings and raise node at zloc one level up\n\n  - `[1 [2 |3 4]] \x3d\x3e [1 |3]`"],null)),$APP.te(I5a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.sF],null))),$APP.N,"In string and comment aware kill\n\n  Perform kill for given position `pos` Like [[kill]], but:\n\n  - if inside string kills to end of string and stops there\n  - If inside comment kills to end of line (not including linebreak)\n\n  `pos` should provide `{:row :col }` which are relative to the start of the given form the zipper represents\n  `zloc` must be positioned at a node previous (given depth first) to the node at given pos"],
null)),$APP.te(h8a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Push out the leftmost node of the current S-expression into outer left form.\n\n  - `[1 2 [3 |4] 5] \x3d\x3e [1 2 3 [|4] 5]`"],null)),X6a,$APP.te(W4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Pull in all right outer-nodes into current S-expression, but only the ones at the same level\n  as the the first one.\n\n  - `[1 2 [|3] 4 5] \x3d\x3e [1 2 [|3 4 5]]`"],
null))],[new $APP.h(null,3,[$APP.Q,s4a,$APP.ou,x2a,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Split current s-sexpression in two at given node `zloc`\n\n  -  `[1 2 |3 4 5] \x3d\x3e [1 2 3] [4 5]`"],null)],null),new $APP.h(null,3,[$APP.Q,k6a,$APP.ou,function(a,b){var c=u1a(HW,WV,RX.h(a,b));if($APP.k(c)){var d=V0a(c);a=$APP.y.j(d,0,null);d=$APP.y.j(d,1,null);(a=!($APP.x.h($APP.so.g(b),a)&&$APP.Ul.g(b)<=d))&&NW(c)?b=s2a(c,b):$APP.k(a?s1a(c):a)?(a=$APP.Ul.g($APP.ue(wV(c))),
b=BW(c,sX.g(r2a($APP.Tm.g(wV(c)),$APP.Ul.g(b)-a)))):b=null==ZV(IV,IV(c))?pW(c):KW(pW(c),wV(iW(c)));return b}return a},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.sF],null)),$APP.N,'In string and comment aware kill for one node/word at `pos` in `zloc`.\n\n  - `(+ |100 100) \x3d\x3e (+ |100)`\n  - `(for |(bar do)) \x3d\x3e (foo)`\n  - `"|hello world" \x3d\x3e "| world"`\n  - ` ; |hello world \x3d\x3e ;  |world`'],null)],null),new $APP.h(null,3,[$APP.Q,s3a,$APP.ou,function(a,
b){return jW(k2a(c1a(PV(iW(EW(a,MW(b,null))),WV)),wV(a)))},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.SH],null)),$APP.N,"Wrap current node with a given type `t` where `t` can be one of `:vector`, `:list`, `:set`, `:map` `:fn`.\n\n  - `|123 \x3d\x3e [|123]` given `:vector`\n  - `|[1 [2]] \x3d\x3e [|[1 [2]]]`"],null)],null),new $APP.h(null,3,[$APP.Q,K5a,$APP.ou,t2a,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Pull in next right outer node (if none at first level, tries next etc) into\n  current S-expression\n\n  - `[1 2 [|3] 4 5] \x3d\x3e [1 2 [|3 4] 5]`"],
null)],null),new $APP.h(null,3,[$APP.Q,R2a,$APP.ou,function(a){var b=null==a?null:iW(a);var c=null==a?null:wV(a);c=null==c?null:VU(c);c=$APP.k(c)?hW(a):a;if($APP.Cb($APP.k(b)?c:b))b=a;else if(wW(b)&&wW(c)){a=lU(wV(b));b=LW(GV(b),HW,YV);var d=lU(wV(c));b=KW(pW(EW(kW(n2a(OV(c))),MW($APP.vm,$APP.M.l(a,b,$APP.z([d]))))),$APP.v(d))}else b=NW(b)&&NW(c)?BW(n2a(OV(c)),mV([$APP.l.g(iX.g(wV(b))),$APP.l.g(iX.g(wV(c)))].join(""))):a;return b},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,
[RW],null)),$APP.N,'Join S-expression to the left and right of current loc. Also works for strings.\n\n  - `[[1 2] |[3 4]] \x3d\x3e [[1 2 3 4]]`\n  - `["Hello " | "World"] \x3d\x3e ["Hello World"]`'],null)],null),new $APP.h(null,3,[$APP.Q,F2a,$APP.ou,function(a){return w2a(a,QV)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Remove left siblings of current given node in S-Expression and unwrap remaining into enclosing S-expression\n\n  - `(foo (let ((x 5)) |(sqrt n)) bar) \x3d\x3e (foo (sqrt n) bar)`"],
null)],null),new $APP.h(null,3,[$APP.Q,D7a,$APP.ou,function(a,b){return u2a(iW(EW(a,MW(b,null))))},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.SH],null)),$APP.N,"Create a new seq node of type `t` left of `zloc` then slurp fully into the new node\n\n  - `[1 |2 3 4] \x3d\x3e [1 [|2 3 4]]`"],null)],null),new $APP.h(null,3,[$APP.Q,W6a,$APP.ou,function(a,b){var c=RX.h(a,b);return $APP.k(c)?NW(c)?y2a(c,b):x2a(c):a},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,
2,5,$APP.J,[RW,$APP.sF],null)),$APP.N,"In string aware split\n\n  Perform split at given position `pos` Like split, but:\n\n  - if inside string splits string into two strings\n\n  `pos` should provide `{:row :col }` which are relative to the start of the given form the zipper represents\n  `zloc` must be positioned at a node previous (given depth first) to the node at given pos"],null)],null),new $APP.h(null,3,[$APP.Q,A3a,$APP.ou,v2a,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,
[RW],null)),$APP.N,"Pull in prev left outer node (if none at first level, tries next etc) into\n  current S-expression\n\n  - `[1 2 [|3] 4 5] \x3d\x3e [1 [2 |3] 4 5]`"],null)],null),new $APP.h(null,3,[$APP.Q,f5a,$APP.ou,function(a){var b=wV(a),c=function(){var d=null==a?null:iW(a);return null==d?null:wV(d)}();c=null==c||$APP.x.h(wV(pW(a)),c)?function(d){return iW(vW(IV,JV,new $APP.H(null,1,5,$APP.J,[uW],null),d,b))}:function(d){return hW(vW(GV,KV,new $APP.H(null,1,5,$APP.J,[uW],null),d,b))};return $APP.Cb(D1a(pW(a)))?
a:c(pW(a))},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Move node at current location to the position of previous location given a depth first traversal\n\n    -  `(+ 1 (+ 2 |3) 4) \x3d\x3e (+ 1 (+ |3 2) 4)`\n    - `(+ 1 (+ 2 3) |4) \x3d\x3e (+ 1 (+ 2 3 |4))`\n\n  returns zloc after move or given zloc if a move isn't possible"],null)],null),new $APP.h(null,3,[$APP.Q,C5a,$APP.ou,function(a){var b=nW(a);if($APP.Cb(kW(a)))return a;var c=$APP.yf($APP.Pg.h(function(d){return WU(d)||
xU(d)},LW(IV(b),h2a,YV)));return function(d){var e=KW(d,wV(a));return $APP.k(e)?e:KW(d,wV(b))}($APP.Ml.h($APP.cf,DW)(DW(d1a(PV(QV(b,YV),WV)),wV(b)),c))},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Push out the rightmost node of the current S-expression into outer right form.\n\n  - `[1 2 [|3 4] 5] \x3d\x3e [1 2 [|3] 4 5]`"],null)],null),new $APP.h(null,3,[$APP.Q,j3a,$APP.ou,o2a,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),
$APP.N,"Kill all sibling nodes to the right of the current node in `zloc`.\n\n  - `[1 2| 3 4] \x3d\x3e [1 2|]`"],null)],null),new $APP.h(null,3,[$APP.Q,C7a,$APP.ou,function(a){var b=function(){var d=null==a?null:OW(a,FW);return null==d?null:$APP.v(d)}(),c=function(){var d=null==b?null:LW(b,FW,$APP.tg);d=null==d?null:$APP.de(d);return null==d?null:d+1}();return $APP.oe($APP.Dg.h(c,$APP.Ng(v2a,a)))},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Pull in all left outer-nodes into current S-expression, but only the ones at the same level\n  as the the first one.\n\n  - `[1 2 [|3] 4 5] \x3d\x3e [[1 2 |3] 4 5]`"],
null)],null),new $APP.h(null,3,[$APP.Q,r3a,$APP.ou,function(a){var b=kW(a);b=$APP.k(b)?null!=ZV(IV,IV(a)):b;return $APP.k(b)?w2a(iW(a),PV):$APP.k(kW(a))?pW(kW(a)):a},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Remove current given node and its right siblings in S-Expression and unwrap remaining into enclosing S-expression\n\n  - `(a (b c |d e) f) \x3d\x3e (a b |c f)`"],null)],null),new $APP.h(null,3,[$APP.Q,Z7a,$APP.ou,function(a){var b=kW(a);return $APP.k(b)?
BW(b,wV(a)):a},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Delete siblings and raise node at zloc one level up\n\n  - `[1 [2 |3 4]] \x3d\x3e [1 |3]`"],null)],null),new $APP.h(null,3,[$APP.Q,i7a,$APP.ou,function(a,b){var c=RX.h(a,b);$APP.k(c)?NW(c)?b=p2a(c,b):$APP.k(s1a(c))?(a=$APP.Ul.g($APP.ue(wV(c))),$APP.x.h($APP.Ul.g(b),a)?b=pW(c):(b=BW(c,sX.g($APP.Yi.j($APP.Tm.g(wV(c)),0,$APP.Ul.g(b)-a-1))),b=$APP.k(GV(b))?j2a(b,UU(1)):b)):b=IW(c)&&$APP.Ul.g(b)>$APP.Ul.g($APP.ue(wV(c)))?
pW(c):o2a(c):b=a;return b},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.sF],null)),$APP.N,"In string and comment aware kill\n\n  Perform kill for given position `pos` Like [[kill]], but:\n\n  - if inside string kills to end of string and stops there\n  - If inside comment kills to end of line (not including linebreak)\n\n  `pos` should provide `{:row :col }` which are relative to the start of the given form the zipper represents\n  `zloc` must be positioned at a node previous (given depth first) to the node at given pos"],
null)],null),new $APP.h(null,3,[$APP.Q,c6a,$APP.ou,function(a){var b=E1a(a);if($APP.Cb(kW(a)))return a;var c=$APP.Pg.h(function(d){return WU(d)||xU(d)},LW(GV(b),HW,YV));return function(d){var e=KW(d,wV(a));return $APP.k(e)?e:KW(d,wV(b))}($APP.Ml.h($APP.cf,EW)(EW(OV(PV(QV(b,WV),YV)),wV(b)),c))},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Push out the leftmost node of the current S-expression into outer left form.\n\n  - `[1 2 [3 |4] 5] \x3d\x3e [1 2 3 [|4] 5]`"],
null)],null),new $APP.h(null,3,[$APP.Q,X5a,$APP.ou,CW,$APP.mb,$APP.Wf],null),new $APP.h(null,3,[$APP.Q,x4a,$APP.ou,u2a,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Pull in all right outer-nodes into current S-expression, but only the ones at the same level\n  as the the first one.\n\n  - `[1 2 [|3] 4 5] \x3d\x3e [1 2 [|3 4 5]]`"],null)],null)]),C8a),H8a=$APP.pu($APP.gi([$APP.te(O7a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,
[RW],null))),$APP.N,"Same as [[remove]] but preserves newlines.\n   Specifically: will trim all whitespace - or whitespace up to first linebreak if present."],null)),$APP.te(W7a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc` traversing left."],null)),$APP.te(p4a,new $APP.h(null,4,[$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,
new $APP.H(null,2,5,$APP.J,[new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null)],null),$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null)),$APP.gF,$APP.K(null,null)],null),YW,"1.1.45",$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null))),$APP.N,"DEPRECATED. Renamed to [[of-node*]]."],null)),$APP.te(V4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,
$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return s-expression (the Clojure form) of current node in `zloc`.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances)."],null)),$APP.te($APP.foa,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return zipper with location moved up to next non-whitespace/non-comment parent of current node in `zloc`, or `nil` if at the top."],null)),$APP.te(Y5a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,
$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Raw version of [[down]].\n\nReturns zipper with the location at the leftmost child of current node in `zloc`, or\n  nil if no children.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],null)),$APP.te(w3a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return true if at rightmost non-whitespace/non-comment sibling node in `zloc`."],null)),$APP.te(x7a,
new $APP.h(null,4,[$APP.pD,"0.5.0",$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,1,5,$APP.J,[RW],null),new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null)],null),$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null),new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null)),$APP.gF,$APP.K(null,null)],null),$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null),new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null))),$APP.N,"Return zipper with `n` space whitespace node inserted to the left of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],
null)),$APP.te(o4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return length of printable [[string]] of current node in `zloc`."],null)),$APP.te(X4a,new $APP.h(null,4,[$APP.pD,"1.1.45",$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null)],null),$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,
2,5,$APP.J,[$APP.rE,$APP.bG],null)),$APP.gF,$APP.K(null,null)],null),$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null))),$APP.N,"Create and return zipper from a rewrite-clj `node` (likely parsed by [[rewrite-clj.parser]]).\n\n  Optional `opts` can specify:\n  - `:track-position?` set to `true` to enable ones-based row/column tracking, see [docs on position tracking](/doc/01-user-guide.adoc#position-tracking).\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)"],
null)),$APP.te($APP.KEa,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return zipper with location moved to the previous depth-first non-whitespace/non-comment node in `zloc`. If already at root, returns nil."],null)),$APP.te(z2a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Raw version of [[remove]].\n\nReturns zipper with current node in `zloc` removed, with location at node that would have preceded\n  it in a depth-first walk.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],
null)),$APP.te(l6a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Raw version of [[leftmost]].\n\nReturns zipper with location at the leftmost sibling of the current node in `zloc`, or self.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],null)),$APP.te($APP.ola,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.XC],null))),$APP.N,"Return zipper with `item` inserted to the right of the current node in `zloc`, without moving location.\n  If `item` is not already a node, an attempt will be made to coerce it to one.\n\n  Will insert a space if necessary.\n\n  Use [[rewrite-clj.zip/insert-right*]] to insert without adding any whitespace."],
null)),$APP.te($APP.Vna,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.TH],null))),$APP.N,"Return zipper with the current node in `zloc` suffixed with string `s`.\n   Operates on token node or a multi-line node, else exception is thrown.\n   When multi-line, last line is suffixed."],null)),$APP.te($APP.dA,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,UW],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,UW],null))),$APP.N,"Return `zloc` located to the first node satisfying predicate `p?` else nil.\n   Search starts at the current node and continues via movement function `f`.\n\n   `f` defaults to [[right]]",
$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,3,$APP.BJ,3,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[RW,UW],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,UW],null)],null),$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,UW],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,UW],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te(m5a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Create and return a zipper whose root is the current node in `zloc`.\n\n   See [docs on sub editing](/doc/01-user-guide.adoc#sub-editing)."],
null)),$APP.te(U4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.XC],null))),$APP.N,"Raw version of [[replace]].\n\nReturns zipper with node `item` replacing current node in `zloc`, without moving location.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],null)),$APP.te($APP.rma,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.XC],null))),$APP.N,"Return zipper with `item` inserted to the left of the current node in `zloc`, without moving location.\n  Will insert a space if necessary.\n  If `item` is not already a node, an attempt will be made to coerce it to one.\n\n  Use [[insert-left*]] to insert without adding any whitespace."],
null)),$APP.te($APP.Sta,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return true if `zloc` is at end of depth-first traversal."],null)),$APP.te(Z3a,new $APP.h(null,4,[$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null),new $APP.H(null,1,5,$APP.J,[RW],null)],null),$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null),new $APP.H(null,1,5,$APP.J,[RW],null)),
$APP.gF,$APP.K(null,null)],null),YW,"0.5.0",$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null),new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"DEPRECATED: renamed to [[insert-space-left]]."],null)),$APP.te(Z2a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.XC],null))),$APP.N,"Raw version of [[insert-left]].\n\nReturns zipper with node `item` inserted as the left sibling of current node in `zloc`,\n without moving location.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],
null)),$APP.te(M4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Returns true when the current the node in `zloc` is a Clojure whitespace (which includes the comma)."],null)),$APP.te($APP.RG,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return tag of current node in `zloc`."],null)),$APP.te($APP.EG,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Returns true if current node in `zloc` is a map."],
null)),$APP.te($APP.WC,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Returns true if current node in `zloc` is a vector."],null)),$APP.te(b6a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.DH],null))),$APP.N,"Return zipper replacing current node in `zloc` with result of `f` applied to said node as an isolated sub-tree.\n   The resulting zipper will be located on the root of the modified sub-tree.\n\n   See [docs on sub editing](/doc/01-user-guide.adoc#sub-editing)."],
null)),$APP.te($APP.rE,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Returns the current node in `zloc`."],null)),$APP.te($APP.mH,new $APP.h(null,3,[YW,"0.4.0",$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"DEPRECATED. Return a tag/s-expression pair for inner nodes, or\n   the s-expression itself for leaves."],null)),$APP.te(z5a,new $APP.h(null,4,[$APP.pD,"0.5.0",$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,
2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,1,5,$APP.J,[RW],null),new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null)],null),$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null),new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null)),$APP.gF,$APP.K(null,null)],null),$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null),new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null))),$APP.N,"Return zipper with `n` newlines node inserted to the right of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],
null)),$APP.te(d3a,new $APP.h(null,3,[$APP.pD,"0.4.0",$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return string representing the zipped-up `zloc` zipper."],null)),$APP.te(v6a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.UH],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,$APP.UH],null))),$APP.N,"Return `zloc` located to the first token node that `sexpr`esses to `v` else `nil`.\n   Search starts from the current node and continues via movement function `f`.\n\n   `v` can be a single value or a set. When `v` is a set, matches on any value in set.\n\n   `f` defaults to [[right]] in short form call.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances).",
$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,3,$APP.BJ,3,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[RW,$APP.UH],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,$APP.UH],null)],null),$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.UH],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,$APP.UH],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te(E5a,new $APP.h(null,4,[$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,
$APP.J,[RW,$APP.MH],null),new $APP.H(null,1,5,$APP.J,[RW],null)],null),$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null),new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.gF,$APP.K(null,null)],null),YW,"0.5.0",$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null),new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"DEPRECATED: renamed to [[insert-space-right]]."],null)),$APP.te($APP.dK,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.XC],null))),
$APP.N,"Return `zloc` with the current node replaced by `item`.\n  If `item` is not already a node, an attempt will be made to coerce it to one.\n\n  Use [[replace*]] for non-coercing version of replace."],null)),$APP.te(q6a,new $APP.h(null,4,[$APP.pD,"0.5.0",$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,1,5,$APP.J,[RW],null),new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null)],null),$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null),new $APP.H(null,
2,5,$APP.J,[RW,$APP.MH],null)),$APP.gF,$APP.K(null,null)],null),$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null),new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null))),$APP.N,"Return zipper with `n` space whitespace node inserted to the right of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],null)),$APP.te($APP.apa,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,4,5,$APP.J,[RW,$APP.DH,$APP.ik,$APP.RD],null))),$APP.N,"Return `zloc` with the current node replaced with the result of:\n\n   `(apply f (s-expr current-node) args)`\n\n  The result of `f`, if not already a node, will be coerced to a node if possible.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances).\n\n  Use [[edit*]] for non-coercing version of edit.",
$APP.oI,new $APP.h(null,6,[$APP.EA,!0,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,1,5,$APP.J,[$APP.K(RW,$APP.DH,$APP.RD)],null),$APP.W,$APP.K(new $APP.H(null,4,5,$APP.J,[RW,$APP.DH,$APP.ik,$APP.RD],null)),$APP.gF,$APP.K(null)],null)],null)),$APP.te(D2a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[$APP.DH,RW],null))),$APP.N,"Returns `zloc` with function `f` applied to each value node of the current node.\n   Current node must be map node.\n\n  `zloc` location is unchanged.\n\n  `f` arg is zloc positioned at value node and should return:\n  - an updated zloc with zloc positioned at value node\n  - a falsey value to leave value node unchanged\n\n  Folks typically use [[edit]] for `f`."],
null)),$APP.te(s5a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,4,5,$APP.J,[RW,$APP.DH,$APP.ik,$APP.RD],null))),$APP.N,"Raw version of [[edit]].\n\nReturns zipper with value of `(apply f current-node args)` replacing current node in `zloc`.\n\n   The result of `f` should be a rewrite-clj node.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes.",$APP.oI,new $APP.h(null,6,[$APP.EA,!0,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,
1,5,$APP.J,[$APP.K(RW,$APP.DH,$APP.RD)],null),$APP.W,$APP.K(new $APP.H(null,4,5,$APP.J,[RW,$APP.DH,$APP.ik,$APP.RD],null)),$APP.gF,$APP.K(null)],null)],null)),$APP.te(m6a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return true if at leftmost non-whitespace/non-comment sibling node in `zloc`."],null)),$APP.te($APP.mK,new $APP.h(null,3,[$APP.pD,"0.4.0",$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return string representing the current node in `zloc`."],
null)),$APP.te($3a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return true if current node's element type in `zloc` can be [[sexpr]]-ed.\n\n   See [related docs in user guide](/doc/01-user-guide.adoc#not-all-clojure-is-sexpr-able)"],null)),$APP.te(I3a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,UW],null))),$APP.N,"Return `zloc` located to the first node satisfying predicate `p?` else `nil`.\n   Search is depth-first from the current node."],
null)),$APP.te(d8a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,3,5,$APP.J,[RW,$APP.sF,$APP.SH],null))),$APP.N,"Return `zloc` located to the last node spanning position `pos` with tag `t` else `nil`.\n  Search is depth-first from the current node."],null)),$APP.te(K3a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,UW],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,UW],null))),$APP.N,"Return `zloc` located to the next node satisfying predicate `p?` else `nil`.\n   Search starts one movement `f` from the current node and continues via `f`.\n\n   `f` defaults to [[right]]",
$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,3,$APP.BJ,3,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[RW,UW],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,UW],null)],null),$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,UW],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,UW],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te(u4a,new $APP.h(null,4,[$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],
null),new $APP.H(null,1,5,$APP.J,[RW],null)],null),$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null),new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.gF,$APP.K(null,null)],null),YW,"0.5.0",$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null),new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"DEPRECATED: renamed to [[insert-newline-left]]."],null)),$APP.te(C2a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Raw version of [[prev]].\n\nReturns zipper with location at the previous depth-first location in the hierarchy in `zloc`.\n  If already at the root, returns nil.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],
null)),$APP.te($APP.wI,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return zipper with location moved to the next depth-first non-whitespace/non-comment node in `zloc`.\n   End can be detected with [[end?]], if already at end, stays there."],null)),$APP.te(g4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.XC],null))),$APP.N,"Raw version of [[insert-child]].\n\nReturns zipper with node `item` inserted as the leftmost child of the current node in `zloc`,\n  without moving location.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],
null)),$APP.te(R5a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Returns the ones-based `[[start-row start-col] [end-row end-col]]` of the current node in `zloc`.\n  `end-col` is exclusive.\n\n  Throws if `zloc` was not created with [position tracking](/doc/01-user-guide.adoc#position-tracking)."],null)),$APP.te($APP.GE,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.TH],null))),$APP.N,"Return zipper with the current node in `zloc` prefixed with string `s`.\n   Operates on token node or a multi-line node, else exception is thrown.\n   When multi-line, first line is prefixed."],
null)),$APP.te($APP.uF,new $APP.h(null,4,[$APP.pD,"0.4.9",$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,3,$APP.BJ,3,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[RW,$APP.DH],null),new $APP.H(null,3,5,$APP.J,[RW,UW,$APP.DH],null)],null),$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.DH],null),new $APP.H(null,3,5,$APP.J,[RW,UW,$APP.DH],null)),$APP.gF,$APP.K(null,null)],null),$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.DH],null),new $APP.H(null,3,5,$APP.J,[RW,
UW,$APP.DH],null))),$APP.N,'Return zipper modified by an isolated depth-first post-order traversal.\n\n   Post-order traversal visits children before root.\n   For example, traversal order of `(1 (2 3 (4 5) 6 (7 8)) 9)` is:\n\n   1. `1`\n   2. `2`\n   3. `3`\n   4. `4`\n   5. `5`\n   6. `(4 5)`\n   7. `6`\n   8. `7`\n   9. `8`\n   10. `(7 8)`\n   11. `(2 3 (4 5) 6 (7 8))`\n   12. `9`\n   13. `(1 (2 3 (4 5) 6 (7 8)) 9)`\n\n   Traversal starts at the current node in `zloc` and continues to the end of the isolated sub-tree.\n\n   Function `f` is called on the zipper locations satisfying predicate `p?` and must return either\n   - nil to indicate no changes\n   - or a valid zipper\n   WARNING: when function `f` changes the location in the zipper, normal traversal will be affected.\n\n   When `p?` is not specified `f` is called on all locations.\n\n   To walk all nodes, you\'ll want to walk from the root node.\n   You can do this by, for example, using [[of-string*]] instead of [[of-string]].\n\n   ```Clojure\n   (-\x3e (zip/of-string* "my clojure forms")\n       (zip/postwalk ...))\n   ```\n\n   See [docs on sub editing](/doc/01-user-guide.adoc#sub-editing).'],
null)),$APP.te(P2a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,UW],null))),$APP.N,"Return `zloc` located to next node satisfying predicate `p?` else `nil`.\n   Search starts depth-first after the current node."],null)),$APP.te($APP.VC,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Returns true if current node in `zloc` is a list."],null)),$APP.te(W2a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,
2,5,$APP.J,[RW,$APP.SH],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,$APP.SH],null))),$APP.N,"Return `zloc` located to the first node with tag `t` else `nil`.\n   Search starts at the current node and continues via movement function `f`.\n\n   `f` defaults to [[right]]",$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,3,$APP.BJ,3,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[RW,$APP.SH],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,$APP.SH],null)],null),$APP.W,$APP.K(new $APP.H(null,
2,5,$APP.J,[RW,$APP.SH],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,$APP.SH],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te(l8a,new $APP.h(null,3,[$APP.pD,"0.4.4",$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return s-expression (the Clojure forms) of children of current node in `zloc`.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances)."],null)),$APP.te(r8a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],
null),new $APP.H(null,2,5,$APP.J,[$APP.TH,$APP.bG],null))),$APP.N,"Create and return zipper from all forms in Clojure/ClojureScript/EDN string `s`, and move to the first non-whitespace/non-comment child.\n\n  See [[of-string*]] for same but with no automatic move.\n\n  Optional `opts` can specify:\n  - `:track-position?` set to `true` to enable ones-based row/column tracking, see [docs on position tracking](/doc/01-user-guide.adoc#position-tracking).\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)",
$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,1,5,$APP.J,[$APP.TH],null),new $APP.H(null,2,5,$APP.J,[$APP.TH,$APP.bG],null)],null),$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],null),new $APP.H(null,2,5,$APP.J,[$APP.TH,$APP.bG],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te(v5a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Raw version of [[next]].\n\nReturns zipper with location at the next depth-first location in the hierarchy in `zloc`.\n  When reaching the end, returns a distinguished zipper detectable via [[end?]]. If already\n  at the end, stays there.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],
null)),$APP.te(e4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Returns `zloc` with namespaced map sexpr context to all symbols and keywords reapplied from current location downward.\n\n  Keywords and symbols:\n  * that are keys in a namespaced map will have namespaced map context applied\n  * otherwise will have any namespaced map context removed\n\n  You should only need to use this function if:\n  * you care about `sexpr` on keywords and symbols\n  * and you are moving keywords and symbols from a namespaced map to some other location."],
null)),$APP.te($APP.Lma,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return zipper with location moved right to next non-whitespace/non-comment sibling of current node in `zloc`."],null)),$APP.te(a8a,new $APP.h(null,3,[YW,"0.4.0",$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"DEPRECATED. Renamed to [[string]]."],null)),$APP.te(L5a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.Zz],
null),new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Zip up and print `zloc` from root node.\n\n   NOTE: Optional `writer` is currently ignored for ClojureScript.",$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[RW,$APP.Zz],null),new $APP.H(null,1,5,$APP.J,[RW],null)],null),$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.Zz],null),new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te(i8a,
new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.XC],null))),$APP.N,"Raw version of [[insert-right]].\n\nReturns zipper with node `item` inserted as the right sibling of the current node in `zloc`,\n  without moving location.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],null)),$APP.te($APP.FI,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Zips all the way up `zloc` and returns the root node, reflecting any changes."],
null)),$APP.te(O2a,new $APP.h(null,4,[$APP.pD,"1.1.46",$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,1,5,$APP.J,[$APP.TH],null),new $APP.H(null,2,5,$APP.J,[$APP.TH,$APP.bG],null)],null),$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],null),new $APP.H(null,2,5,$APP.J,[$APP.TH,$APP.bG],null)),$APP.gF,$APP.K(null,null)],null),$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],null),new $APP.H(null,2,5,$APP.J,[$APP.TH,$APP.bG],
null))),$APP.N,"Create and return zipper from all forms in Clojure/ClojureScript/END string `s`, and do no automatic move.\n\n  See [[of-string]] for same but with automatic move to first interesting node.\n\n  Optional `opts` can specify:\n  - `:track-position?` set to `true` to enable ones-based row/column tracking, see [docs on position tracking](/doc/01-user-guide.adoc#position-tracking).\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)"],
null)),$APP.te(w5a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[$APP.DH,RW],null))),$APP.N,"Returns `zloc` with function `f` applied to all key nodes of the current node.\n   Current node must be map node.\n\n  `zloc` location is unchanged.\n\n  `f` arg is zloc positioned at key node and should return:\n  - an updated zloc with zloc positioned at key node\n  - a falsey value to leave value node unchanged\n\n  Folks typically use [[rewrite-clj.zip/edit]] for `f`."],null)),
$APP.te(E7a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.UH],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,$APP.UH],null))),$APP.N,"Return `zloc` located to the next token node that `sexpr`esses to `v` else `nil`.\n   Search starts one movement `f` from the current location, and continues via `f`.\n\n   `v` can be a single value or a set. When `v` is a set matches on any value in set.\n\n   `f` defaults to [[right]] in short form call.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances).",
$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,3,$APP.BJ,3,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[RW,$APP.UH],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,$APP.UH],null)],null),$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.UH],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,$APP.UH],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te($APP.nI,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.Zz],null),new $APP.H(null,1,5,$APP.J,[RW],null))),
$APP.N,"Print current node in `zloc`.\n\n   NOTE: Optional `writer` is currently ignored for ClojureScript.",$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[RW,$APP.Zz],null),new $APP.H(null,1,5,$APP.J,[RW],null)],null),$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.Zz],null),new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te($APP.IJ,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,
2,5,$APP.J,[$APP.DH,RW],null))),$APP.N,"Returns `zloc` with function `f` applied to all nodes of the current node.\n  Current node must be a sequence node. Equivalent to [[rewrite-clj.zip/map-vals]] for maps.\n\n  `zloc` location is unchanged.\n\n  `f` arg is zloc positioned at\n  - value nodes for maps\n  - each element of a seq\n  and is should return:\n  - an updated zloc with zloc positioned at edited node\n  - a falsey value to leave value node unchanged\n\n  Folks typically use [[edit]] for `f`."],
null)),$APP.te($APP.zE,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.DH],null),new $APP.H(null,3,5,$APP.J,[RW,UW,$APP.DH],null))),$APP.N,'Return zipper modified by an isolated depth-first pre-order traversal.\n\n   Pre-order traversal visits root before children.\n   For example, traversal order of `(1 (2 3 (4 5) 6 (7 8)) 9)` is:\n\n   1. `(1 (2 3 (4 5) 6 (7 8)) 9)`\n   2. `1`\n   3. `(2 3 (4 5) 6 (7 8))`\n   4. `2`\n   5. `3`\n   6. `(4 5)`\n   7. `4`\n   8. `5`\n   9. `6`\n   10. `(7 8)`\n   11. `7`\n   12. `8`\n   13. `9`\n\n   Traversal starts at the current node in `zloc` and continues to the end of the isolated sub-tree.\n\n   Function `f` is called on the zipper locations satisfying predicate `p?` and must return either\n   - nil to indicate no changes\n   - or a valid zipper\n   WARNING: when function `f` changes the location in the zipper, normal traversal will be affected.\n\n   When `p?` is not specified `f` is called on all locations.\n\n   To walk all nodes, you\'ll want to walk from the root node.\n   You can do this by, for example, using [[of-string*]] instead of [[of-string]].\n\n   ```Clojure\n   (-\x3e (zip/of-string* "my clojure forms")\n       (zip/prewalk ...))\n   ```\n\n   See [docs on sub editing](/doc/01-user-guide.adoc#sub-editing).',
$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,3,$APP.BJ,3,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[RW,$APP.DH],null),new $APP.H(null,3,5,$APP.J,[RW,UW,$APP.DH],null)],null),$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.DH],null),new $APP.H(null,3,5,$APP.J,[RW,UW,$APP.DH],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te(O6a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Returns true if the current node in `zloc` is a namespaced map."],
null)),$APP.te(x3a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Raw version of [[rightmost]].\n\nReturns zipper with location at the rightmost sibling of the current node in `zloc`, or self.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],null)),$APP.te(q3a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Raw version of [[left]].\n\nReturns zipper with location at the left sibling of the current node in `zloc`, or nil.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],
null)),$APP.te($APP.bD,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Returns true if current node in `zloc` is a sequence."],null)),$APP.te($APP.BA,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.LH],null))),$APP.N,"Returns `zloc` located to map key node's sexpr value matching `k` else `nil`.\n\n  `k` should be:\n  - a key for maps\n  - a zero-based index for sequences\n\n  NOTE: `k` will be compared against resolved keywords in maps.\n  See docs for sexpr behavior on [namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)."],
null)),$APP.te(N4a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,UW],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,UW],null))),$APP.N,"Return `zloc` located to the the first token node satisfying predicate `p?`.\n  Search starts at the current node and continues via movement function `f`.\n\n   `f` defaults to [[right]]",$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,3,$APP.BJ,3,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[RW,UW],null),new $APP.H(null,
3,5,$APP.J,[RW,$APP.DH,UW],null)],null),$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,UW],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,UW],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te(Q7a,new $APP.h(null,4,[$APP.pD,"0.5.0",$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,1,5,$APP.J,[RW],null),new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null)],null),$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null),new $APP.H(null,2,5,$APP.J,[RW,
$APP.MH],null)),$APP.gF,$APP.K(null,null)],null),$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null),new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null))),$APP.N,"Return zipper with `n` newlines node inserted to the left of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],null)),$APP.te($APP.HD,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Returns true if current node in `zloc` is a set."],null)),$APP.te(Y6a,new $APP.h(null,
4,[$APP.pD,"1.1.45",$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null)],null),$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null)),$APP.gF,$APP.K(null,null)],null),$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null))),$APP.N,"Create and return zipper from a rewrite-clj `node` (likely parsed by [[rewrite-clj.parser]]),\n  and move to the first non-whitespace/non-comment child. If node is not forms node, is wrapped in forms node\n  for a consistent root.\n  Optional `opts` can specify:\n  - `:track-position?` set to `true` to enable ones-based row/column tracking, see [docs on position tracking](/doc/01-user-guide.adoc#position-tracking).\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)"],
null)),$APP.te(L4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Returns true when the current node in `zloc` is a linebreak."],null)),$APP.te($APP.DF,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,3,5,$APP.J,[RW,$APP.LH,$APP.UH],null))),$APP.N,"Returns `zloc` with current node's `k` set to value `v`.\n\n  `zloc` location is unchanged.\n\n  `k` should be:\n  - a key for maps\n  - a zero-based index for sequences, an exception is thrown if index is out of bounds\n\n  NOTE: `k` will be compared against resolved keywords in maps.\n  See docs for sexpr behavior on [namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)."],
null)),$APP.te($APP.Dra,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return zipper with location moved to the leftmost non-whitespace/non-comment sibling of current node in `zloc`."],null)),$APP.te(X7a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Raw version of [[up]].\n\nReturns zipper with the location at the parent of current node in `zloc`, or nil if at\n  the top.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],
null)),$APP.te($APP.KDa,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return zipper with location moved down to the first non-whitespace/non-comment child node of the current node in `zloc`, or nil if no applicable children."],null)),$APP.te($APP.DAa,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return zipper with location moved left to next non-whitespace/non-comment sibling of current node in `zloc`."],
null)),$APP.te(N5a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,3,5,$APP.J,[$APP.DH,UW,RW],null))),$APP.N,"Return zipper with location moved to first location not satisfying predicate `p?` starting from the node in\n   `zloc` and traversing by function `f`."],null)),$APP.te(l3a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.DH],null))),$APP.N,"Return zipper applying function `f` to `zloc`. The resulting\n   zipper will be located at the same path (i.e. the same number of\n   downwards and right movements from the root) incoming `zloc`.\n\n   See also [[subedit-node]] for an isolated edit."],
null)),$APP.te($APP.Gya,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.XC],null))),$APP.N,"Return zipper with `item` inserted as the first child of the current node in `zloc`, without moving location.\n  Will insert a space if necessary.\n  If `item` is not already a node, an attempt will be made to coerce it to one.\n\n  Use [[insert-child*]] to insert without adding any whitespace."],null)),$APP.te($APP.uxa,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,
2,5,$APP.J,[RW,$APP.XC],null))),$APP.N,"Return zipper with `item` inserted as the last child of the current node in `zloc`, without moving.\n  Will insert a space if necessary.\n  If `item` is not already a node, an attempt will be made to coerce it to one.\n\n  Use [[append-child*]] to append without adding any whitespace."],null)),$APP.te(t5a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null),new $APP.H(null,2,5,$APP.J,[$APP.DH,RW],null))),$APP.N,"Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc`\n   and traversing by function `f`.\n\n   `f` defaults to [[right]]",
$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,1,5,$APP.J,[RW],null),new $APP.H(null,2,5,$APP.J,[$APP.DH,RW],null)],null),$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null),new $APP.H(null,2,5,$APP.J,[$APP.DH,RW],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te(u5a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.XC],null))),$APP.N,"Raw version of [[append-child]].\n\nReturns zipper with node `item` inserted as the rightmost child of the current node in `zloc`,\n  without moving.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],
null)),$APP.te(K2a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Returns the ones-based `[row col]` of the start of the current node in `zloc`.\n\n  Throws if `zloc` was not created with [position tracking](/doc/01-user-guide.adoc#position-tracking)."],null)),$APP.te(X6a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return zipper with the children of the current node in `zloc` merged into itself.\n   (akin to Clojure's `unquote-splicing` macro: `~@...`).\n   - if the node is not one that can have children, no modification will\n     be performed.\n   - if the node has no or only whitespace children, it will be removed.\n   - otherwise, splicing will be performed, moving the zipper to the first\n     non-whitespace spliced child node.\n\n  For example, given `[[1 2 3] 4 5 6]`, if zloc is located at vector `[1 2 3]`, a splice will result in raising the vector's children up `[1 2 3 4 5 6]` and locating the zipper at node `1`."],
null)),$APP.te(e3a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,UW],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,UW],null))),$APP.N,"Return `zloc` located to the next token node satisfying predicate `p?` else `nil`.\n  Search starts one movement `f` after the current node and continues via `f`.\n\n   `f` defaults to [[right]]",$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,3,$APP.BJ,3,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[RW,UW],null),new $APP.H(null,
3,5,$APP.J,[RW,$APP.DH,UW],null)],null),$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,UW],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,UW],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te($2a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.sF],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.sF,UW],null))),$APP.N,"Return `zloc` located to the last node spanning position `pos` that satisfies predicate `p?` else `nil`.\n   Search is depth-first from the current node.\n\n  NOTE: Does not ignore whitespace/comment nodes.",
$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,3,$APP.BJ,3,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[RW,$APP.sF],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.sF,UW],null)],null),$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.sF],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.sF,UW],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te(B2a,new $APP.h(null,3,[YW,"0.4.0",$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"DEPRECATED. Renamed to [[root-string]]."],
null)),$APP.te($APP.gAa,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return zipper with location moved to the rightmost non-whitespace/non-comment sibling of current node in `zloc`."],null)),$APP.te(s7a,new $APP.h(null,4,[$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null)],null),$APP.W,$APP.K(new $APP.H(null,1,5,
$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null)),$APP.gF,$APP.K(null,null)],null),YW,"1.1.45",$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null))),$APP.N,"DEPRECATED. Renamed to [[of-node]]."],null)),$APP.te(b3a,new $APP.h(null,3,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.SH],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,$APP.SH],null))),$APP.N,"Return `zloc` located to the next node with tag `t` else `nil`.\n  Search starts one movement `f` after the current node and continues via `f`.\n\n   `f` defaults to [[right]]",
$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,3,$APP.BJ,3,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[RW,$APP.SH],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,$APP.SH],null)],null),$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.SH],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,$APP.SH],null)),$APP.gF,$APP.K(null,null)],null)],null)),$APP.te(Y7a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Raw version of [[right]].\n\nReturns zipper with location at the right sibling of the current node in `zloc`, or nil.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],
null)),$APP.te(b4a,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Returns true when current node in `zloc` is whitespace or a comment."],null)),$APP.te($APP.DA,new $APP.h(null,2,[$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"Return `zloc` with current node removed. Returned zipper location\n   is moved to the first non-whitespace node preceding removed node in a depth-first walk.\n   Removes whitespace appropriately.\n\n  - `[1 |2  3]    \x3d\x3e [|1 3]`\n  - `[1 |2]       \x3d\x3e [|1]`\n  - `[|1 2]       \x3d\x3e |[2]`\n  - `[|1]         \x3d\x3e |[]`\n  - `[  |1  ]     \x3d\x3e |[]`\n  - `[1 [2 3] |4] \x3d\x3e [1 [2 |3]]`\n  - `[|1 [2 3] 4] \x3d\x3e |[[2 3] 4]`\n\n   If the removed node is a rightmost sibling, both leading and trailing whitespace\n   is removed, otherwise only trailing whitespace is removed.\n\n   The result is that a following element (no matter whether it is on the same line\n   or not) will end up at same positon (line/column) as the removed one.\n   If a comment lies betwen the original node and the neighbour this will not hold true.\n\n   If the removed node is at end of input and is trailed by 1 or more newlines,\n   a single trailing newline will be preserved.\n\n   Use [[remove*]] to remove node without removing any surrounding whitespace."],
null)),$APP.te(r6a,new $APP.h(null,4,[$APP.oI,new $APP.h(null,6,[$APP.EA,!1,$APP.Rs,2,$APP.BJ,2,$APP.jJ,new $APP.H(null,2,5,$APP.J,[new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null),new $APP.H(null,1,5,$APP.J,[RW],null)],null),$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null),new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.gF,$APP.K(null,null)],null),YW,"0.5.0",$APP.W,$APP.K($APP.Ak,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null),new $APP.H(null,1,5,$APP.J,[RW],null))),$APP.N,"DEPRECATED: renamed to [[insert-newline-right]]."],
null))],[new $APP.h(null,3,[$APP.Q,u7a,$APP.ou,function(a){return H1a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Same as [[remove]] but preserves newlines.\n   Specifically: will trim all whitespace - or whitespace up to first linebreak if present."],null)],null),new $APP.h(null,3,[$APP.Q,j4a,$APP.ou,function(a){return ZV(IV,a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc` traversing left."],
null)],null),new $APP.h(null,3,[$APP.Q,s6a,$APP.ou,CX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null)),$APP.N,"DEPRECATED. Renamed to [[of-node*]]."],null)],null),new $APP.h(null,3,[$APP.Q,f7a,$APP.ou,function(a){return fW(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Return s-expression (the Clojure form) of current node in `zloc`.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances)."],
null)],null),new $APP.h(null,3,[$APP.Q,n3a,$APP.ou,g2a,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Return zipper with location moved up to next non-whitespace/non-comment parent of current node in `zloc`, or `nil` if at the top."],null)],null),new $APP.h(null,3,[$APP.Q,W5a,$APP.ou,function(a){return CV(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Raw version of [[down]].\n\nReturns zipper with the location at the leftmost child of current node in `zloc`, or\n  nil if no children.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],
null)],null),new $APP.h(null,3,[$APP.Q,U7a,$APP.ou,function(a){return null==ZV(GV,GV(a))},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Return true if at rightmost non-whitespace/non-comment sibling node in `zloc`."],null)],null),new $APP.h(null,3,[$APP.Q,T5a,$APP.ou,VX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null),new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null)),$APP.N,"Return zipper with `n` space whitespace node inserted to the left of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],
null)],null),new $APP.h(null,3,[$APP.Q,I7a,$APP.ou,function(a){a=null==a?null:wV(a);a=null==a?null:eU(a);return $APP.k(a)?a:0},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Return length of printable [[string]] of current node in `zloc`."],null)],null),new $APP.h(null,3,[$APP.Q,T4a,$APP.ou,BX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null)),$APP.N,"Create and return zipper from a rewrite-clj `node` (likely parsed by [[rewrite-clj.parser]]).\n\n  Optional `opts` can specify:\n  - `:track-position?` set to `true` to enable ones-based row/column tracking, see [docs on position tracking](/doc/01-user-guide.adoc#position-tracking).\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)"],
null)],null),new $APP.h(null,3,[$APP.Q,J2a,$APP.ou,function(a){return D1a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Return zipper with location moved to the previous depth-first non-whitespace/non-comment node in `zloc`. If already at root, returns nil."],null)],null),new $APP.h(null,3,[$APP.Q,$5a,$APP.ou,function(a){return OV(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Raw version of [[remove]].\n\nReturns zipper with current node in `zloc` removed, with location at node that would have preceded\n  it in a depth-first walk.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],
null)],null),new $APP.h(null,3,[$APP.Q,M5a,$APP.ou,function(a){return Y0a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Raw version of [[leftmost]].\n\nReturns zipper with location at the leftmost sibling of the current node in `zloc`, or self.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],null)],null),new $APP.h(null,3,[$APP.Q,R3a,$APP.ou,DW,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,
2,5,$APP.J,[RW,$APP.XC],null)),$APP.N,"Return zipper with `item` inserted to the right of the current node in `zloc`, without moving location.\n  If `item` is not already a node, an attempt will be made to coerce it to one.\n\n  Will insert a space if necessary.\n\n  Use [[rewrite-clj.zip/insert-right*]] to insert without adding any whitespace."],null)],null),new $APP.h(null,3,[$APP.Q,J6a,$APP.ou,function(a,b){return M1a(a,b)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,
$APP.TH],null)),$APP.N,"Return zipper with the current node in `zloc` suffixed with string `s`.\n   Operates on token node or a multi-line node, else exception is thrown.\n   When multi-line, last line is suffixed."],null)],null),new $APP.h(null,3,[$APP.Q,c8a,$APP.ou,JW,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,UW],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,UW],null)),$APP.N,"Return `zloc` located to the first node satisfying predicate `p?` else nil.\n   Search starts at the current node and continues via movement function `f`.\n\n   `f` defaults to [[right]]"],
null)],null),new $APP.h(null,3,[$APP.Q,V7a,$APP.ou,function(a){return Z1a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Create and return a zipper whose root is the current node in `zloc`.\n\n   See [docs on sub editing](/doc/01-user-guide.adoc#sub-editing)."],null)],null),new $APP.h(null,3,[$APP.Q,n5a,$APP.ou,function(a,b){return LV(a,b)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.XC],null)),$APP.N,"Raw version of [[replace]].\n\nReturns zipper with node `item` replacing current node in `zloc`, without moving location.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],
null)],null),new $APP.h(null,3,[$APP.Q,U2a,$APP.ou,EW,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.XC],null)),$APP.N,"Return zipper with `item` inserted to the left of the current node in `zloc`, without moving location.\n  Will insert a space if necessary.\n  If `item` is not already a node, an attempt will be made to coerce it to one.\n\n  Use [[insert-left*]] to insert without adding any whitespace."],null)],null),new $APP.h(null,3,[$APP.Q,Q5a,$APP.ou,function(a){return mW(a)},
$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Return true if `zloc` is at end of depth-first traversal."],null)],null),new $APP.h(null,3,[$APP.Q,a6a,$APP.ou,ZX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null),new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"DEPRECATED: renamed to [[insert-space-left]]."],null)],null),new $APP.h(null,3,[$APP.Q,P3a,$APP.ou,function(a,b){return JV(a,b)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,
2,5,$APP.J,[RW,$APP.XC],null)),$APP.N,"Raw version of [[insert-left]].\n\nReturns zipper with node `item` inserted as the left sibling of current node in `zloc`,\n without moving location.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],null)],null),new $APP.h(null,3,[$APP.Q,y7a,$APP.ou,function(a){return WV(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Returns true when the current the node in `zloc` is a Clojure whitespace (which includes the comma)."],
null)],null),new $APP.h(null,3,[$APP.Q,s8a,$APP.ou,function(a){return eW(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Return tag of current node in `zloc`."],null)],null),new $APP.h(null,3,[$APP.Q,O4a,$APP.ou,function(a){return $APP.x.h(eW(a),$APP.wm)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Returns true if current node in `zloc` is a map."],null)],null),new $APP.h(null,3,[$APP.Q,i4a,$APP.ou,function(a){return $APP.x.h(eW(a),
$APP.vm)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Returns true if current node in `zloc` is a vector."],null)],null),new $APP.h(null,3,[$APP.Q,S3a,$APP.ou,function(a,b){return AW(a,b)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.DH],null)),$APP.N,"Return zipper replacing current node in `zloc` with result of `f` applied to said node as an isolated sub-tree.\n   The resulting zipper will be located on the root of the modified sub-tree.\n\n   See [docs on sub editing](/doc/01-user-guide.adoc#sub-editing)."],
null)],null),new $APP.h(null,3,[$APP.Q,n6a,$APP.ou,d2a,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Returns the current node in `zloc`."],null)],null),new $APP.h(null,3,[$APP.Q,e5a,$APP.ou,function(a){a=null==a?null:wV(a);return null==a?null:Y_a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"DEPRECATED. Return a tag/s-expression pair for inner nodes, or\n   the s-expression itself for leaves."],null)],null),new $APP.h(null,
3,[$APP.Q,f6a,$APP.ou,YX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null),new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null)),$APP.N,"Return zipper with `n` newlines node inserted to the right of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],null)],null),new $APP.h(null,3,[$APP.Q,p8a,$APP.ou,function(a){return z1a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Return string representing the zipped-up `zloc` zipper."],
null)],null),new $APP.h(null,3,[$APP.Q,N7a,$APP.ou,NX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.UH],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,$APP.UH],null)),$APP.N,"Return `zloc` located to the first token node that `sexpr`esses to `v` else `nil`.\n   Search starts from the current node and continues via movement function `f`.\n\n   `v` can be a single value or a set. When `v` is a set, matches on any value in set.\n\n   `f` defaults to [[right]] in short form call.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances)."],
null)],null),new $APP.h(null,3,[$APP.Q,p6a,$APP.ou,$X,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null),new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"DEPRECATED: renamed to [[insert-space-right]]."],null)],null),new $APP.h(null,3,[$APP.Q,d4a,$APP.ou,BW,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.XC],null)),$APP.N,"Return `zloc` with the current node replaced by `item`.\n  If `item` is not already a node, an attempt will be made to coerce it to one.\n\n  Use [[replace*]] for non-coercing version of replace."],
null)],null),new $APP.h(null,3,[$APP.Q,I6a,$APP.ou,WX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null),new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null)),$APP.N,"Return zipper with `n` space whitespace node inserted to the right of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],null)],null),new $APP.h(null,3,[$APP.Q,o6a,$APP.ou,JX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,4,5,$APP.J,[RW,$APP.DH,$APP.ik,$APP.RD],null)),$APP.N,
"Return `zloc` with the current node replaced with the result of:\n\n   `(apply f (s-expr current-node) args)`\n\n  The result of `f`, if not already a node, will be coerced to a node if possible.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances).\n\n  Use [[edit*]] for non-coercing version of edit."],null)],null),new $APP.h(null,3,[$APP.Q,R6a,$APP.ou,function(a,b){return zW(b,W1a(a,yW(b)))},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[$APP.DH,RW],null)),
$APP.N,"Returns `zloc` with function `f` applied to each value node of the current node.\n   Current node must be map node.\n\n  `zloc` location is unchanged.\n\n  `f` arg is zloc positioned at value node and should return:\n  - an updated zloc with zloc positioned at value node\n  - a falsey value to leave value node unchanged\n\n  Folks typically use [[edit]] for `f`."],null)],null),new $APP.h(null,3,[$APP.Q,q5a,$APP.ou,cY,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,4,5,$APP.J,[RW,
$APP.DH,$APP.ik,$APP.RD],null)),$APP.N,"Raw version of [[edit]].\n\nReturns zipper with value of `(apply f current-node args)` replacing current node in `zloc`.\n\n   The result of `f` should be a rewrite-clj node.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],null)],null),new $APP.h(null,3,[$APP.Q,Z5a,$APP.ou,function(a){return null==ZV(IV,IV(a))},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),
$APP.N,"Return true if at leftmost non-whitespace/non-comment sibling node in `zloc`."],null)],null),new $APP.h(null,3,[$APP.Q,I4a,$APP.ou,function(a){return gW(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Return string representing the current node in `zloc`."],null)],null),new $APP.h(null,3,[$APP.Q,V6a,$APP.ou,function(a){a=null==a?null:wV(a);return null==a?null:$APP.Cb(cU(a))},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],
null)),$APP.N,"Return true if current node's element type in `zloc` can be [[sexpr]]-ed.\n\n   See [related docs in user guide](/doc/01-user-guide.adoc#not-all-clojure-is-sexpr-able)"],null)],null),new $APP.h(null,3,[$APP.Q,R7a,$APP.ou,function(a,b){return qW(a,lW,b)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,UW],null)),$APP.N,"Return `zloc` located to the first node satisfying predicate `p?` else `nil`.\n   Search is depth-first from the current node."],null)],null),
new $APP.h(null,3,[$APP.Q,A5a,$APP.ou,function(a,b,c){return R1a(a,b,c)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,3,5,$APP.J,[RW,$APP.sF,$APP.SH],null)),$APP.N,"Return `zloc` located to the last node spanning position `pos` with tag `t` else `nil`.\n  Search is depth-first from the current node."],null)],null),new $APP.h(null,3,[$APP.Q,n7a,$APP.ou,KX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,UW],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,UW],null)),
$APP.N,"Return `zloc` located to the next node satisfying predicate `p?` else `nil`.\n   Search starts one movement `f` from the current node and continues via `f`.\n\n   `f` defaults to [[right]]"],null)],null),new $APP.h(null,3,[$APP.Q,o7a,$APP.ou,aY,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null),new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"DEPRECATED: renamed to [[insert-newline-left]]."],null)],null),new $APP.h(null,3,[$APP.Q,M7a,$APP.ou,function(a){return NV(a)},
$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Raw version of [[prev]].\n\nReturns zipper with location at the previous depth-first location in the hierarchy in `zloc`.\n  If already at the root, returns nil.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],null)],null),new $APP.h(null,3,[$APP.Q,l4a,$APP.ou,function(a){return lW(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],
null)),$APP.N,"Return zipper with location moved to the next depth-first non-whitespace/non-comment node in `zloc`.\n   End can be detected with [[end?]], if already at end, stays there."],null)],null),new $APP.h(null,3,[$APP.Q,h5a,$APP.ou,function(a,b){return Z0a(a,b)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.XC],null)),$APP.N,"Raw version of [[insert-child]].\n\nReturns zipper with node `item` inserted as the leftmost child of the current node in `zloc`,\n  without moving location.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],
null)],null),new $APP.h(null,3,[$APP.Q,y8a,$APP.ou,function(a){return W0a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Returns the ones-based `[[start-row start-col] [end-row end-col]]` of the current node in `zloc`.\n  `end-col` is exclusive.\n\n  Throws if `zloc` was not created with [position tracking](/doc/01-user-guide.adoc#position-tracking)."],null)],null),new $APP.h(null,3,[$APP.Q,T7a,$APP.ou,function(a,b){return L1a(a,b)},$APP.mb,new $APP.h(null,
2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.TH],null)),$APP.N,"Return zipper with the current node in `zloc` prefixed with string `s`.\n   Operates on token node or a multi-line node, else exception is thrown.\n   When multi-line, first line is prefixed."],null)],null),new $APP.h(null,3,[$APP.Q,v4a,$APP.ou,TX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.DH],null),new $APP.H(null,3,5,$APP.J,[RW,UW,$APP.DH],null)),$APP.N,'Return zipper modified by an isolated depth-first post-order traversal.\n\n   Post-order traversal visits children before root.\n   For example, traversal order of `(1 (2 3 (4 5) 6 (7 8)) 9)` is:\n\n   1. `1`\n   2. `2`\n   3. `3`\n   4. `4`\n   5. `5`\n   6. `(4 5)`\n   7. `6`\n   8. `7`\n   9. `8`\n   10. `(7 8)`\n   11. `(2 3 (4 5) 6 (7 8))`\n   12. `9`\n   13. `(1 (2 3 (4 5) 6 (7 8)) 9)`\n\n   Traversal starts at the current node in `zloc` and continues to the end of the isolated sub-tree.\n\n   Function `f` is called on the zipper locations satisfying predicate `p?` and must return either\n   - nil to indicate no changes\n   - or a valid zipper\n   WARNING: when function `f` changes the location in the zipper, normal traversal will be affected.\n\n   When `p?` is not specified `f` is called on all locations.\n\n   To walk all nodes, you\'ll want to walk from the root node.\n   You can do this by, for example, using [[of-string*]] instead of [[of-string]].\n\n   ```Clojure\n   (-\x3e (zip/of-string* "my clojure forms")\n       (zip/postwalk ...))\n   ```\n\n   See [docs on sub editing](/doc/01-user-guide.adoc#sub-editing).'],
null)],null),new $APP.h(null,3,[$APP.Q,K4a,$APP.ou,function(a,b){return rW(a,lW,b)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,UW],null)),$APP.N,"Return `zloc` located to next node satisfying predicate `p?` else `nil`.\n   Search starts depth-first after the current node."],null)],null),new $APP.h(null,3,[$APP.Q,x8a,$APP.ou,function(a){return $APP.x.h(eW(a),$APP.um)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Returns true if current node in `zloc` is a list."],
null)],null),new $APP.h(null,3,[$APP.Q,K7a,$APP.ou,LX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.SH],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,$APP.SH],null)),$APP.N,"Return `zloc` located to the first node with tag `t` else `nil`.\n   Search starts at the current node and continues via movement function `f`.\n\n   `f` defaults to [[right]]"],null)],null),new $APP.h(null,3,[$APP.Q,f3a,$APP.ou,function(a){var b=null==a?null:wV(a);return null==b?null:S_a(b,bW.g($APP.ue(a)))},
$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Return s-expression (the Clojure forms) of children of current node in `zloc`.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances)."],null)],null),new $APP.h(null,3,[$APP.Q,V2a,$APP.ou,FX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],null),new $APP.H(null,2,5,$APP.J,[$APP.TH,$APP.bG],null)),$APP.N,"Create and return zipper from all forms in Clojure/ClojureScript/EDN string `s`, and move to the first non-whitespace/non-comment child.\n\n  See [[of-string*]] for same but with no automatic move.\n\n  Optional `opts` can specify:\n  - `:track-position?` set to `true` to enable ones-based row/column tracking, see [docs on position tracking](/doc/01-user-guide.adoc#position-tracking).\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)"],
null)],null),new $APP.h(null,3,[$APP.Q,H4a,$APP.ou,i2a,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Raw version of [[next]].\n\nReturns zipper with location at the next depth-first location in the hierarchy in `zloc`.\n  When reaching the end, returns a distinguished zipper detectable via [[end?]]. If already\n  at the end, stays there.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],null)],null),new $APP.h(null,
3,[$APP.Q,P6a,$APP.ou,function(a){return c2a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Returns `zloc` with namespaced map sexpr context to all symbols and keywords reapplied from current location downward.\n\n  Keywords and symbols:\n  * that are keys in a namespaced map will have namespaced map context applied\n  * otherwise will have any namespaced map context removed\n\n  You should only need to use this function if:\n  * you care about `sexpr` on keywords and symbols\n  * and you are moving keywords and symbols from a namespaced map to some other location."],
null)],null),new $APP.h(null,3,[$APP.Q,u8a,$APP.ou,GW,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Return zipper with location moved right to next non-whitespace/non-comment sibling of current node in `zloc`."],null)],null),new $APP.h(null,3,[$APP.Q,w8a,$APP.ou,function(a){return gW(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"DEPRECATED. Renamed to [[string]]."],null)],null),new $APP.h(null,3,[$APP.Q,X2a,$APP.ou,
IX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.Zz],null),new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Zip up and print `zloc` from root node.\n\n   NOTE: Optional `writer` is currently ignored for ClojureScript."],null)],null),new $APP.h(null,3,[$APP.Q,j7a,$APP.ou,j2a,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.XC],null)),$APP.N,"Raw version of [[insert-right]].\n\nReturns zipper with node `item` inserted as the right sibling of the current node in `zloc`,\n  without moving location.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],
null)],null),new $APP.h(null,3,[$APP.Q,E2a,$APP.ou,function(a){return FV(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Zips all the way up `zloc` and returns the root node, reflecting any changes."],null)],null),new $APP.h(null,3,[$APP.Q,H5a,$APP.ou,GX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.TH],null),new $APP.H(null,2,5,$APP.J,[$APP.TH,$APP.bG],null)),$APP.N,"Create and return zipper from all forms in Clojure/ClojureScript/END string `s`, and do no automatic move.\n\n  See [[of-string]] for same but with automatic move to first interesting node.\n\n  Optional `opts` can specify:\n  - `:track-position?` set to `true` to enable ones-based row/column tracking, see [docs on position tracking](/doc/01-user-guide.adoc#position-tracking).\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)"],
null)],null),new $APP.h(null,3,[$APP.Q,X3a,$APP.ou,function(a,b){a:for(var c=yW(b),d=jW(c);;){var e=d;e=$APP.k(e)?wV(d):e;if($APP.Cb(e))break a;e=a.g?a.g(d):a.call(null,d);$APP.k(e)?(c=e,d=hW(hW(c)),c=kW(c)):d=hW(hW(d))}return zW(b,c)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[$APP.DH,RW],null)),$APP.N,"Returns `zloc` with function `f` applied to all key nodes of the current node.\n   Current node must be map node.\n\n  `zloc` location is unchanged.\n\n  `f` arg is zloc positioned at key node and should return:\n  - an updated zloc with zloc positioned at key node\n  - a falsey value to leave value node unchanged\n\n  Folks typically use [[rewrite-clj.zip/edit]] for `f`."],
null)],null),new $APP.h(null,3,[$APP.Q,Q4a,$APP.ou,OX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.UH],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,$APP.UH],null)),$APP.N,"Return `zloc` located to the next token node that `sexpr`esses to `v` else `nil`.\n   Search starts one movement `f` from the current location, and continues via `f`.\n\n   `v` can be a single value or a set. When `v` is a set matches on any value in set.\n\n   `f` defaults to [[right]] in short form call.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances)."],
null)],null),new $APP.h(null,3,[$APP.Q,l5a,$APP.ou,HX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.Zz],null),new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Print current node in `zloc`.\n\n   NOTE: Optional `writer` is currently ignored for ClojureScript."],null)],null),new $APP.h(null,3,[$APP.Q,G5a,$APP.ou,function(a,b){return $APP.x.h(eW(b),$APP.wm)||xW(b)?zW(b,W1a(a,yW(b))):V1a(a,b)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[$APP.DH,RW],
null)),$APP.N,"Returns `zloc` with function `f` applied to all nodes of the current node.\n  Current node must be a sequence node. Equivalent to [[rewrite-clj.zip/map-vals]] for maps.\n\n  `zloc` location is unchanged.\n\n  `f` arg is zloc positioned at\n  - value nodes for maps\n  - each element of a seq\n  and is should return:\n  - an updated zloc with zloc positioned at edited node\n  - a falsey value to leave value node unchanged\n\n  Folks typically use [[edit]] for `f`."],null)],null),new $APP.h(null,
3,[$APP.Q,H7a,$APP.ou,SX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.DH],null),new $APP.H(null,3,5,$APP.J,[RW,UW,$APP.DH],null)),$APP.N,'Return zipper modified by an isolated depth-first pre-order traversal.\n\n   Pre-order traversal visits root before children.\n   For example, traversal order of `(1 (2 3 (4 5) 6 (7 8)) 9)` is:\n\n   1. `(1 (2 3 (4 5) 6 (7 8)) 9)`\n   2. `1`\n   3. `(2 3 (4 5) 6 (7 8))`\n   4. `2`\n   5. `3`\n   6. `(4 5)`\n   7. `4`\n   8. `5`\n   9. `6`\n   10. `(7 8)`\n   11. `7`\n   12. `8`\n   13. `9`\n\n   Traversal starts at the current node in `zloc` and continues to the end of the isolated sub-tree.\n\n   Function `f` is called on the zipper locations satisfying predicate `p?` and must return either\n   - nil to indicate no changes\n   - or a valid zipper\n   WARNING: when function `f` changes the location in the zipper, normal traversal will be affected.\n\n   When `p?` is not specified `f` is called on all locations.\n\n   To walk all nodes, you\'ll want to walk from the root node.\n   You can do this by, for example, using [[of-string*]] instead of [[of-string]].\n\n   ```Clojure\n   (-\x3e (zip/of-string* "my clojure forms")\n       (zip/prewalk ...))\n   ```\n\n   See [docs on sub editing](/doc/01-user-guide.adoc#sub-editing).'],
null)],null),new $APP.h(null,3,[$APP.Q,Q6a,$APP.ou,function(a){return xW(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Returns true if the current node in `zloc` is a namespaced map."],null)],null),new $APP.h(null,3,[$APP.Q,S7a,$APP.ou,function(a){return HV(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Raw version of [[rightmost]].\n\nReturns zipper with location at the rightmost sibling of the current node in `zloc`, or self.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],
null)],null),new $APP.h(null,3,[$APP.Q,e8a,$APP.ou,h2a,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Raw version of [[left]].\n\nReturns zipper with location at the left sibling of the current node in `zloc`, or nil.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],null)],null),new $APP.h(null,3,[$APP.Q,N6a,$APP.ou,function(a){return wW(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,
[RW],null)),$APP.N,"Returns true if current node in `zloc` is a sequence."],null)],null),new $APP.h(null,3,[$APP.Q,i5a,$APP.ou,function(a,b){return X1a(a,b)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.LH],null)),$APP.N,"Returns `zloc` located to map key node's sexpr value matching `k` else `nil`.\n\n  `k` should be:\n  - a key for maps\n  - a zero-based index for sequences\n\n  NOTE: `k` will be compared against resolved keywords in maps.\n  See docs for sexpr behavior on [namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)."],
null)],null),new $APP.h(null,3,[$APP.Q,u3a,$APP.ou,PX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,UW],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,UW],null)),$APP.N,"Return `zloc` located to the the first token node satisfying predicate `p?`.\n  Search starts at the current node and continues via movement function `f`.\n\n   `f` defaults to [[right]]"],null)],null),new $APP.h(null,3,[$APP.Q,o3a,$APP.ou,XX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,
[RW],null),new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null)),$APP.N,"Return zipper with `n` newlines node inserted to the left of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],null)],null),new $APP.h(null,3,[$APP.Q,H6a,$APP.ou,function(a){return $APP.x.h(eW(a),$APP.Fm)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Returns true if current node in `zloc` is a set."],null)],null),new $APP.h(null,3,[$APP.Q,C4a,$APP.ou,DX,$APP.mb,
new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null)),$APP.N,"Create and return zipper from a rewrite-clj `node` (likely parsed by [[rewrite-clj.parser]]),\n  and move to the first non-whitespace/non-comment child. If node is not forms node, is wrapped in forms node\n  for a consistent root.\n  Optional `opts` can specify:\n  - `:track-position?` set to `true` to enable ones-based row/column tracking, see [docs on position tracking](/doc/01-user-guide.adoc#position-tracking).\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)"],
null)],null),new $APP.h(null,3,[$APP.Q,w6a,$APP.ou,function(a){return XV(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Returns true when the current node in `zloc` is a linebreak."],null)],null),new $APP.h(null,3,[$APP.Q,z6a,$APP.ou,function(a,b,c){var d=X1a(a,b);if($APP.k(d))b=kW(LV(d,pU(c)));else if($APP.x.h(eW(a),$APP.wm)||xW(a))b=U1a(U1a(yW(a),b),c);else throw $APP.Zl.h(["index out of bounds: ",$APP.l.g(b)].join(""),$APP.Wf);return zW(a,b)},$APP.mb,
new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,3,5,$APP.J,[RW,$APP.LH,$APP.UH],null)),$APP.N,"Returns `zloc` with current node's `k` set to value `v`.\n\n  `zloc` location is unchanged.\n\n  `k` should be:\n  - a key for maps\n  - a zero-based index for sequences, an exception is thrown if index is out of bounds\n\n  NOTE: `k` will be compared against resolved keywords in maps.\n  See docs for sexpr behavior on [namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)."],null)],null),new $APP.h(null,
3,[$APP.Q,B4a,$APP.ou,function(a){return E1a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Return zipper with location moved to the leftmost non-whitespace/non-comment sibling of current node in `zloc`."],null)],null),new $APP.h(null,3,[$APP.Q,B5a,$APP.ou,function(a){return DV(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Raw version of [[up]].\n\nReturns zipper with the location at the parent of current node in `zloc`, or nil if at\n  the top.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],
null)],null),new $APP.h(null,3,[$APP.Q,G4a,$APP.ou,function(a){return jW(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Return zipper with location moved down to the first non-whitespace/non-comment child node of the current node in `zloc`, or nil if no applicable children."],null)],null),new $APP.h(null,3,[$APP.Q,H3a,$APP.ou,FW,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Return zipper with location moved left to next non-whitespace/non-comment sibling of current node in `zloc`."],
null)],null),new $APP.h(null,3,[$APP.Q,R4a,$APP.ou,function(a,b,c){return u1a(a,b,c)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,3,5,$APP.J,[$APP.DH,UW,RW],null)),$APP.N,"Return zipper with location moved to first location not satisfying predicate `p?` starting from the node in\n   `zloc` and traversing by function `f`."],null)],null),new $APP.h(null,3,[$APP.Q,g5a,$APP.ou,function(a,b){b=b.g?b.g(a):b.call(null,a);a=$APP.yf($APP.fj.h($APP.sq.h($APP.de,X0a),$APP.Qi.h(DV,$APP.Ng(DV,a))));
b=cW(FV(b),bW.g($APP.ue(b)));return $APP.cf.j(Y1a,b,a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.DH],null)),$APP.N,"Return zipper applying function `f` to `zloc`. The resulting\n   zipper will be located at the same path (i.e. the same number of\n   downwards and right movements from the root) incoming `zloc`.\n\n   See also [[subedit-node]] for an isolated edit."],null)],null),new $APP.h(null,3,[$APP.Q,c3a,$APP.ou,e2a,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,
2,5,$APP.J,[RW,$APP.XC],null)),$APP.N,"Return zipper with `item` inserted as the first child of the current node in `zloc`, without moving location.\n  Will insert a space if necessary.\n  If `item` is not already a node, an attempt will be made to coerce it to one.\n\n  Use [[insert-child*]] to insert without adding any whitespace."],null)],null),new $APP.h(null,3,[$APP.Q,k7a,$APP.ou,f2a,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.XC],null)),$APP.N,"Return zipper with `item` inserted as the last child of the current node in `zloc`, without moving.\n  Will insert a space if necessary.\n  If `item` is not already a node, an attempt will be made to coerce it to one.\n\n  Use [[append-child*]] to append without adding any whitespace."],
null)],null),new $APP.h(null,3,[$APP.Q,x6a,$APP.ou,UX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null),new $APP.H(null,2,5,$APP.J,[$APP.DH,RW],null)),$APP.N,"Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc`\n   and traversing by function `f`.\n\n   `f` defaults to [[right]]"],null)],null),new $APP.h(null,3,[$APP.Q,T3a,$APP.ou,k2a,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.XC],
null)),$APP.N,"Raw version of [[append-child]].\n\nReturns zipper with node `item` inserted as the rightmost child of the current node in `zloc`,\n  without moving.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],null)],null),new $APP.h(null,3,[$APP.Q,r4a,$APP.ou,function(a){return V0a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Returns the ones-based `[row col]` of the start of the current node in `zloc`.\n\n  Throws if `zloc` was not created with [position tracking](/doc/01-user-guide.adoc#position-tracking)."],
null)],null),new $APP.h(null,3,[$APP.Q,C3a,$APP.ou,CW,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Return zipper with the children of the current node in `zloc` merged into itself.\n   (akin to Clojure's `unquote-splicing` macro: `~@...`).\n   - if the node is not one that can have children, no modification will\n     be performed.\n   - if the node has no or only whitespace children, it will be removed.\n   - otherwise, splicing will be performed, moving the zipper to the first\n     non-whitespace spliced child node.\n\n  For example, given `[[1 2 3] 4 5 6]`, if zloc is located at vector `[1 2 3]`, a splice will result in raising the vector's children up `[1 2 3 4 5 6]` and locating the zipper at node `1`."],
null)],null),new $APP.h(null,3,[$APP.Q,Q2a,$APP.ou,QX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,UW],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,UW],null)),$APP.N,"Return `zloc` located to the next token node satisfying predicate `p?` else `nil`.\n  Search starts one movement `f` after the current node and continues via `f`.\n\n   `f` defaults to [[right]]"],null)],null),new $APP.h(null,3,[$APP.Q,c7a,$APP.ou,RX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,
2,5,$APP.J,[RW,$APP.sF],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.sF,UW],null)),$APP.N,"Return `zloc` located to the last node spanning position `pos` that satisfies predicate `p?` else `nil`.\n   Search is depth-first from the current node.\n\n  NOTE: Does not ignore whitespace/comment nodes."],null)],null),new $APP.h(null,3,[$APP.Q,e7a,$APP.ou,function(a){return z1a(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"DEPRECATED. Renamed to [[root-string]]."],
null)],null),new $APP.h(null,3,[$APP.Q,v7a,$APP.ou,function(a){return nW(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Return zipper with location moved to the rightmost non-whitespace/non-comment sibling of current node in `zloc`."],null)],null),new $APP.h(null,3,[$APP.Q,G6a,$APP.ou,EX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[$APP.rE],null),new $APP.H(null,2,5,$APP.J,[$APP.rE,$APP.bG],null)),$APP.N,"DEPRECATED. Renamed to [[of-node]]."],
null)],null),new $APP.h(null,3,[$APP.Q,D6a,$APP.ou,MX,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.SH],null),new $APP.H(null,3,5,$APP.J,[RW,$APP.DH,$APP.SH],null)),$APP.N,"Return `zloc` located to the next node with tag `t` else `nil`.\n  Search starts one movement `f` after the current node and continues via `f`.\n\n   `f` defaults to [[right]]"],null)],null),new $APP.h(null,3,[$APP.Q,o5a,$APP.ou,HW,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,
[RW],null)),$APP.N,"Raw version of [[right]].\n\nReturns zipper with location at the right sibling of the current node in `zloc`, or nil.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],null)],null),new $APP.h(null,3,[$APP.Q,V5a,$APP.ou,function(a){return YV(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Returns true when current node in `zloc` is whitespace or a comment."],null)],null),new $APP.h(null,
3,[$APP.Q,F5a,$APP.ou,function(a){return pW(a)},$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"Return `zloc` with current node removed. Returned zipper location\n   is moved to the first non-whitespace node preceding removed node in a depth-first walk.\n   Removes whitespace appropriately.\n\n  - `[1 |2  3]    \x3d\x3e [|1 3]`\n  - `[1 |2]       \x3d\x3e [|1]`\n  - `[|1 2]       \x3d\x3e |[2]`\n  - `[|1]         \x3d\x3e |[]`\n  - `[  |1  ]     \x3d\x3e |[]`\n  - `[1 [2 3] |4] \x3d\x3e [1 [2 |3]]`\n  - `[|1 [2 3] 4] \x3d\x3e |[[2 3] 4]`\n\n   If the removed node is a rightmost sibling, both leading and trailing whitespace\n   is removed, otherwise only trailing whitespace is removed.\n\n   The result is that a following element (no matter whether it is on the same line\n   or not) will end up at same positon (line/column) as the removed one.\n   If a comment lies betwen the original node and the neighbour this will not hold true.\n\n   If the removed node is at end of input and is trailed by 1 or more newlines,\n   a single trailing newline will be preserved.\n\n   Use [[remove*]] to remove node without removing any surrounding whitespace."],
null)],null),new $APP.h(null,3,[$APP.Q,e6a,$APP.ou,bY,$APP.mb,new $APP.h(null,2,[$APP.W,$APP.K(new $APP.H(null,2,5,$APP.J,[RW,$APP.MH],null),new $APP.H(null,1,5,$APP.J,[RW],null)),$APP.N,"DEPRECATED: renamed to [[insert-newline-right]]."],null)],null)]),D8a);$APP.$u(new $APP.h(null,1,[$APP.Kq,new $APP.h(null,4,[$APP.ICa,E8a,$APP.XA,F8a,$APP.Ywa,G8a,$APP.BEa,H8a],null)],null));