import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
import "./nbb_goog_string.js";
const shadow_esm_import = function(x) { return import(x) };
var iZa=function(a,b){return a.toString(b)},sV=function(a){return $APP.k(a)?-1<["\r","\n","\t"," ",","].indexOf(a):a},jZa=function(a){return $APP.k(a)?!/[^0-9]/.test(a):null},tV=function(a){if(null!=a&&null!=a.Cc)a=a.Cc(a);else{var b=tV[$APP.fa(null==a?null:a)];if(null!=b)a=b.g?b.g(a):b.call(null,a);else if(b=tV._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Lb("Node.tag",a);}return a},uV=function(a){if(null!=a&&null!=a.zc)a=a.zc(a);else{var b=uV[$APP.fa(null==a?null:a)];if(null!=b)a=b.g?b.g(a):
b.call(null,a);else if(b=uV._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Lb("Node.node-type",a);}return a},vV=function(a){if(null!=a&&null!=a.Ac)a=a.Ac(a);else{var b=vV[$APP.fa(null==a?null:a)];if(null!=b)a=b.g?b.g(a):b.call(null,a);else if(b=vV._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Lb("Node.printable-only?",a);}return a},wV=function(a,b){if(null!=a&&null!=a.Bc)a=a.Bc(a,b);else{var c=wV[$APP.fa(null==a?null:a)];if(null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else if(c=wV._,null!=
c)a=c.h?c.h(a,b):c.call(null,a,b);else throw $APP.Lb("Node.sexpr*",a);}return a},xV=function(a){if(null!=a&&null!=a.yc)a=a.yc(a);else{var b=xV[$APP.fa(null==a?null:a)];if(null!=b)a=b.g?b.g(a):b.call(null,a);else if(b=xV._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Lb("Node.length",a);}return a},yV=function(a){if(null!=a&&null!=a.Ma)a=a.Ma(a);else{var b=yV[$APP.fa(null==a?null:a)];if(null!=b)a=b.g?b.g(a):b.call(null,a);else if(b=yV._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Lb("Node.string",
a);}return a},AV=function(a,b){return $APP.ej.h(function(c){return zV.h(c,b)},$APP.gs.h(vV,a))},BV=function(a){return $APP.af.h($APP.Mx,$APP.ej.h(xV,a))},CV=function(a){return $APP.af.h($APP.m,$APP.ej.h(yV,a))},DV=function(a){if(null!=a&&null!=a.rf)a=!0;else{var b=DV[$APP.fa(null==a?null:a)];if(null!=b)a=b.g?b.g(a):b.call(null,a);else if(b=DV._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Lb("InnerNode.inner?",a);}return a},EV=function(a){if(null!=a&&null!=a.qf)a=a.children;else{var b=EV[$APP.fa(null==
a?null:a)];if(null!=b)a=b.g?b.g(a):b.call(null,a);else if(b=EV._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Lb("InnerNode.children",a);}return a},FV=function(a,b){if(null!=a&&null!=a.Ze)a=a.Ze(a,b);else{var c=FV[$APP.fa(null==a?null:a)];if(null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else if(c=FV._,null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else throw $APP.Lb("InnerNode.replace-children",a);}return a},GV=function(a){if(null!=a&&null!=a.Ye)a=a.Ye(a);else{var b=GV[$APP.fa(null==a?null:a)];if(null!=
b)a=b.g?b.g(a):b.call(null,a);else if(b=GV._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Lb("InnerNode.leader-length",a);}return a},kZa=function(a,b){return $APP.k(DV(a))?AV(EV(a),b):null},HV=function(a){return $APP.x.h($APP.io,a)?lZa:$APP.kj.g(["??_",$APP.m.g(a),"_??"].join(""))},IV=function(a){if(null!=a&&null!=a.sb)a=a.sb(a);else{var b=IV[$APP.fa(null==a?null:a)];if(null!=b)a=b.g?b.g(a):b.call(null,a);else if(b=IV._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Lb("NodeCoerceable.coerce",
a);}return a},JV=function(){},KV=function(a,b){if(null!=a&&null!=a.xj)a=a.xj(a,b);else{var c=KV[$APP.fa(null==a?null:a)];if(null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else if(c=KV._,null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else throw $APP.Lb("MapQualifiable.map-context-apply",a);}return a},LV=function(a){if(null!=a&&null!=a.yj)a=a.yj(a);else{var b=LV[$APP.fa(null==a?null:a)];if(null!=b)a=b.g?b.g(a):b.call(null,a);else if(b=LV._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Lb("MapQualifiable.map-context-clear",
a);}return a},NV=function(a){a.prototype.Ka=$APP.xd;a.prototype.V=function(b,c){b=$APP.m.g($APP.k(vV(this))?$APP.yj.l($APP.z([yV(this)])):yV(this));b=$APP.k($APP.Vi(/\n/,b))?MV.l("\n  %s\n",$APP.z([$APP.$k(b,/\r?\n/,"\n  ")])):[" ",b].join("");b=MV.l("\x3c%s:%s\x3e",$APP.z([$APP.Fi(tV(this)),b]));return $APP.Lc(c,b)}},oZa=function(a){var b=$APP.se(a),c=$APP.Yf(b);b=$APP.C.h(c,$APP.po);var d=$APP.C.h(c,$APP.Xl),e=$APP.C.h(c,mZa);c=$APP.C.h(c,nZa);if($APP.k($APP.k(b)?$APP.k(d)?$APP.k(e)?c:e:d:b))return new $APP.H(null,
2,5,$APP.I,[e-b,$APP.x.l(b,e,$APP.z([b]))?c-d:c],null);b=yV(a);a=$APP.be($APP.Pg.h($APP.Pl.h($APP.x,"\n"),b));b=0===a?$APP.be(b):$APP.be($APP.Ni.h($APP.rg($APP.Pl.h($APP.x,"\n")),$APP.wf(b)))+1;return new $APP.H(null,2,5,$APP.I,[a,b],null)},pZa=function(a,b){var c=$APP.y.j(a,0,null);a=$APP.y.j(a,1,null);var d=$APP.y.j(b,0,null);b=$APP.y.j(b,1,null);return new $APP.H(null,2,5,$APP.I,[c+d,0===d?b+a:b],null)},qZa=function(a){return $APP.k(DV(a))?(a=EV(a),a=null==a?null:$APP.v(a),null==a?null:$APP.ol.h(tV,
zV)(a)):zV.g(a)},OV=function(a,b,c,d,e){this.prefix=a;this.Da=b;this.A=c;this.o=d;this.C=e;this.J=2230716170;this.M=139264},QV=function(a){return $APP.x.h(tV(a),PV)},rZa=function(a,b,c){return new $APP.D(null,$APP.vk,new $APP.D(null,$APP.cf($APP.K.h(a,$APP.k(b)?new $APP.D(null,$APP.lk,new $APP.D(null,b,null,1,null),2,null):null)),new $APP.D(null,c,null,1,null),2,null),3,null)},sZa=function(a){var b=function(){return function l(f){return new $APP.Ff(null,function(){for(;;){var p=$APP.r(f);if(p){if($APP.Ee(p)){var u=
$APP.cd(p),t=$APP.be(u),A=$APP.If(t);a:for(var B=0;;)if(B<t){var E=$APP.oe(u,B);E=$APP.x.h(E,0)?"rest__":["p",$APP.m.g(E),"__"].join("");E=$APP.Fi($APP.$n.g(E));$APP.Mf(A,$APP.kj.g([E,"#"].join("")));B+=1}else{u=!0;break a}return u?$APP.Lf($APP.Nf(A),l($APP.dd(p))):$APP.Lf($APP.Nf(A),null)}A=$APP.v(p);A=$APP.x.h(A,0)?"rest__":["p",$APP.m.g(A),"__"].join("");A=$APP.Fi($APP.$n.g(A));return $APP.yf($APP.kj.g([A,"#"].join("")),l($APP.Id(p)))}return null}},null,null)}($APP.Un.D())}(),c=$APP.Aj.g(0),d=
$APP.Aj.g(!1);a=$APP.LM(function(e){a:{if(e instanceof $APP.q){var f=$APP.Fi(e);if($APP.Ea(f,"%")){f=$APP.Yi.h(f,1);if($APP.x.h(f,"\x26"))f=0;else if($APP.x.h(f,""))f=1;else if($APP.k($APP.Ui(/\d+/,f)))f=parseInt(f);else throw $APP.Yl.h("arg literal must be %, %\x26 or %integer.",$APP.Xf);$APP.x.h(f,0)&&$APP.Cb($APP.n(d))&&$APP.vg(d,!0);$APP.Bj.j(c,$APP.kn,f);f=$APP.y.h(b,f);break a}}f=null}return $APP.k(f)?f:e},a);return rZa($APP.Dg.h($APP.n(c),$APP.Id(b)),$APP.k($APP.n(d))?$APP.v(b):null,a)},RV=
function(a,b,c,d){this.children=a;this.A=b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},SV=function(a,b,c,d){this.children=a;this.A=b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},TV=function(a,b,c,d,e){this.value=a;this.Uc=b;this.A=c;this.o=d;this.C=e;this.J=2230716170;this.M=139264},tZa=function(a,b){return $APP.Cb($APP.k(a)?$APP.x.h("_",$APP.yI.g(b)):a)?$APP.k(b)?b:a:null},uZa=function(a,b){return $APP.k($APP.k(b)?b:$APP.Bf(a))?new $APP.h(null,2,[UV,b,$APP.yI,$APP.Bf(a)],null):null},
VV=function(a,b,c,d,e,f){this.k=a;this.Jb=b;this.ic=c;this.A=d;this.o=e;this.C=f;this.J=2230716170;this.M=139264},WV=function(a,b){return new VV(a,b,null,null,null,null)},eW=function(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return vZa(arguments[0],arguments[1],2<b.length?new $APP.Ed(b.slice(2),0,null):null)},vZa=function(a,b,c){b=$APP.qg.j(MV,b,c);c=$APP.vl(a);a=$APP.ul(a);throw $APP.Yl.h([$APP.m.g(b)," [at line ",$APP.m.g(a),", column ",$APP.m.g(c),"]"].join(""),
new $APP.h(null,3,[$APP.Nn,b,$APP.po,a,$APP.Xl,c],null));},wZa=function(a){return $APP.Se(new $APP.zi(null,new $APP.h(null,16,[null,null,"@",null,"`",null,'"',null,"'",null,"(",null,")",null,":",null,";",null,"[",null,"{",null,"\\",null,"]",null,"}",null,"^",null,"~",null],null),null),a)},xZa=function(a){return","===a},fW=function(a){return $APP.Se(new $APP.zi(null,new $APP.h(null,2,["\n",null,"\r",null],null),null),a)},yZa=function(a){if($APP.k(a)){var b=sV(a);return $APP.k(b)?!$APP.Se(new $APP.zi(null,
new $APP.h(null,3,["\n",null,",",null,"\r",null],null),null),a):b}return a},gW=function(a,b){return zZa(a,b,$APP.Cb(b.g?b.g(null):b.call(null,null)))},zZa=function(a,b,c){for(var d=new $APP.gb;;){var e=a.va(null);if($APP.k(e))if($APP.k(b.g?b.g(e):b.call(null,e)))d.append(e);else return a.ae(null,e),d.toString();else return $APP.k(c)?d.toString():eW(a,"unexpected EOF")}},AZa=function(a,b){return zZa(a,$APP.rg(b),b.g?b.g(null):b.call(null,null))},BZa=function(a){return[$APP.m.g(AZa(a,function(b){return null==
b||fW(b)})),$APP.m.g(a.va(null))].join("")},hW=function(a){a.va(null);return null},iW=function(a){a=a.od(null);return"\r"===a?"\n":a},kW=function(a){var b=jW,c=$APP.Wf([$APP.po,a.zf(null),$APP.Xl,a.yf(null)]);b=b.g?b.g(a):b.call(null,a);return $APP.k(b)?$APP.re(b,$APP.Nl.l($APP.z([c,$APP.Wf([$APP.tp,a.zf(null),$APP.up,a.yf(null)])]))):null},CZa=function(a,b){return $APP.Qn.g($APP.Ni.h($APP.ef,$APP.Is.g(function(){return b.g?b.g(a):b.call(null,a)})))},GZa=function(a){var b=$APP.rl(a);if($APP.ll(b))return $APP.oda(a);
var c=function(){var f=new $APP.Cd(function(){return $APP.om},DZa,$APP.gi([$APP.Ot,$APP.Q,$APP.N,$APP.Vl,$APP.Uz,$APP.QJ,$APP.Om,$APP.Wl,$APP.XL,$APP.V,$APP.M,$APP.iG],[!0,$APP.EF,EZa,"cljs/tools/reader/edn.cljs",18,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,4,$APP.cL,4,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,3,5,$APP.I,[$APP.$C,$APP.bB,$APP.xz],null),new $APP.H(null,4,5,$APP.I,[$APP.$C,$APP.bB,$APP.xz,FZa],null)],null),$APP.V,$APP.J(new $APP.H(null,3,5,$APP.I,[$APP.$C,$APP.bB,$APP.xz],null),
new $APP.H(null,4,5,$APP.I,[$APP.$C,$APP.bB,$APP.xz,FZa],null)),$APP.aG,$APP.J(null,null)],null),1,42,42,$APP.J(new $APP.H(null,3,5,$APP.I,[$APP.$C,$APP.bB,$APP.xz],null),new $APP.H(null,4,5,$APP.I,[$APP.$C,$APP.bB,$APP.xz,FZa],null)),null,$APP.k($APP.om)?$APP.om.H:null]));return f.j?f.j(a,$APP.Dm,b):f.call(null,a,$APP.Dm,b)}(),d=$APP.im(c);if($APP.k($APP.k(d)?0!==c.indexOf("::"):d)){var e=d.g?d.g(0):d.call(null,0);d=d.g?d.g(1):d.call(null,1);return":"===$APP.y.h(c,0)?$APP.dm(a,$APP.Dm,c):$APP.fj.h(e,
d)}return $APP.dm(a,$APP.Dm,c)},HZa=function(a){if(""===a||$APP.Fa(a,":")||$APP.Ea(a,"::"))return null;var b=$APP.$L.h(a,"/");if($APP.k(b)){var c=$APP.Yi.j(a,0,b);b+=1;if(b===$APP.be(a))return null;a=$APP.Yi.h(a,b);return $APP.Se(new $APP.zi(null,new $APP.h(null,9,["9",null,"3",null,"4",null,"8",null,"7",null,"5",null,"6",null,"1",null,"2",null],null),null),a)?new $APP.H(null,2,5,$APP.I,[c,a],null):!$APP.Cb(jZa($APP.y.h(a,0)))||$APP.x.h("",a)||$APP.Fa(c,":")||!$APP.x.h(a,"/")&&null!=$APP.$L.h(a,"/")?
null:new $APP.H(null,2,5,$APP.I,[c,a],null)}return $APP.x.h(a,"/")||null==$APP.$L.h(a,"/")?new $APP.H(null,2,5,$APP.I,[null,a],null):null},IZa=function(a){switch(a){case "nil":return null;case "true":return!0;case "false":return!1;case "/":return $APP.Am;default:var b=HZa(a);b=$APP.k(b)?$APP.kj.h(b.g?b.g(0):b.call(null,0),b.g?b.g(1):b.call(null,1)):null;return $APP.k(b)?b:$APP.dm(null,$APP.zm,a)}},JZa=function(){throw $APP.Yl.h("unsupported operation",$APP.Xf);},lW=function(a,b,c,d){this.cf=a;this.A=
b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},mW=function(a){return new lW(a,null,null,null)},nW=function(a,b,c,d){this.Me=a;this.A=b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},oW=function(a,b,c,d){this.Se=a;this.A=b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},pW=function(a){return new oW(a,null,null,null)},KZa=function(a){return xZa(a)?qW:fW(a)?rW:sW},LZa=function(a){return $APP.ej.h(function(b){var c=$APP.qg.h($APP.m,b);b=KZa($APP.v(b));switch(b instanceof $APP.F?b.N:null){case "comma":return new nW(c,
null,null,null);case "newline":return pW(c);default:return mW(c)}},$APP.Ky.h(KZa,a))},tW=function(a){return mW($APP.qg.h($APP.m,$APP.jn.h(a," ")))},uW=function(a){return pW($APP.qg.h($APP.m,$APP.jn.h(a,"\n")))},NZa=function(a){return $APP.Zk.h($APP.be(MZa),$APP.Og.l(function(b){return $APP.yf(b,MZa)},$APP.z([a])))},vW=function(a){return $APP.Se(new $APP.zi(null,new $APP.h(null,3,[sW,null,qW,null,rW,null],null),null),tV(a))},wW=function(a){return $APP.x.h(tV(a),rW)},xW=function(a,b,c,d,e,f){this.tag=
a;this.prefix=b;this.children=c;this.A=d;this.o=e;this.C=f;this.J=2230716170;this.M=139264},yW=function(a,b,c){return new xW(a,b,c,null,null,null)},OZa=function(a,b){return yW($APP.nb,"^",new $APP.H(null,3,5,$APP.I,[a,tW(1),b],null))},zW=function(a,b,c,d,e){this.Jb=a;this.prefix=b;this.A=c;this.o=d;this.C=e;this.J=2230716170;this.M=139264},PZa=function(a,b){for(var c=null,d=$APP.Sg;;){var e=$APP.v(a);if($APP.k(e))$APP.k(vV(e))?(a=$APP.Id(a),d=$APP.vf.h(d,e)):$APP.k(c)?(a=$APP.Id(a),d=$APP.vf.h(d,
b.h?b.h(e,!1):b.call(null,e,!1)),c=null):(a=$APP.Id(a),c=e,d=$APP.vf.h(d,b.h?b.h(e,!0):b.call(null,e,!0)));else return d}},QZa=function(a,b){return FV(a,PZa(EV(a),function(c,d){return(null!=c?$APP.xd===c.wj||(c.yd?0:$APP.Ib(JV,c)):$APP.Ib(JV,c))?$APP.k(d)?KV(c,b):LV(c):c}))},RZa=function(a){var b=$APP.v(a),c=$APP.me(a);return $APP.K.h($APP.Zk.g(a),new $APP.H(null,1,5,$APP.I,[QZa(c,b)],null))},AW=function(a,b,c,d){this.children=a;this.A=b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},SZa=function(a,
b){return new zW(a,b,null,null,null)},BW=function(a,b,c,d,e,f,l){this.tag=a;this.prefix=b;this.kc=c;this.children=d;this.A=e;this.o=f;this.C=l;this.J=2230716170;this.M=139264},TZa=function(a){for(;;){if($APP.Ae(a))return new BW($APP.ep,"'",$APP.Ak,a,null,null,null);a=new $APP.H(null,1,5,$APP.I,[a],null)}},UZa=function(a){for(;;){if($APP.Ae(a))return new BW($APP.ao,"`",$APP.Ak,a,null,null,null);a=new $APP.H(null,1,5,$APP.I,[a],null)}},VZa=function(a){for(;;){if($APP.Ae(a))return new BW($APP.hp,"~",
$APP.Vn,a,null,null,null);a=new $APP.H(null,1,5,$APP.I,[a],null)}},WZa=function(a){for(;;){if($APP.Ae(a))return new BW($APP.ip,"~@",$APP.Xn,a,null,null,null);a=new $APP.H(null,1,5,$APP.I,[a],null)}},CW=function(a,b,c,d,e,f,l,p,u){this.tag=a;this.prefix=b;this.kb=c;this.Qc=d;this.Ud=e;this.children=f;this.A=l;this.o=p;this.C=u;this.J=2230716170;this.M=139264},DW=function(a,b,c,d){this.children=a;this.A=b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},EW=function(a){return new DW(a,null,null,null)},
FW=function(a,b,c,d){this.children=a;this.A=b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},XZa=function(a,b,c,d){return new CW(a,b,"",c,1,d,null,null,null)},YZa=function(a){for(;;){if($APP.Ae(a))return XZa($APP.Uo,"'",function(){return function(b){return $APP.Es.h($APP.zk,b)}}(a),a);a=new $APP.H(null,1,5,$APP.I,[a],null)}},ZZa=function(a){for(;;){if($APP.Ae(a))return XZa($APP.pza,"\x3d",function(){return function(b){return new $APP.D(null,$APP.TD,new $APP.D(null,$APP.Es.h($APP.Ak,b),null,1,
null),2,null)}}(a),a);a=new $APP.H(null,1,5,$APP.I,[a],null)}},$Za=function(a){return $APP.Ae(a)?new FW(a,null,null,null):new FW(new $APP.H(null,1,5,$APP.I,[a],null),null,null,null)},GW=function(a,b,c,d){this.pattern=a;this.A=b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},HW=function(a,b,c,d,e,f,l,p){this.tag=a;this.Od=b;this.Ld=c;this.sd=d;this.children=e;this.A=f;this.o=l;this.C=p;this.J=2230716170;this.M=139264},a_a=function(a){return $APP.qg.h($APP.J,a)},IW=function(a){return new HW($APP.tm,
"(%s)",2,a_a,a,null,null,null)},JW=function(a){return new HW($APP.um,"[%s]",2,$APP.cf,a,null,null,null)},KW=function(a){return new HW($APP.Gm,"#{%s}",3,$APP.Di,a,null,null,null)},b_a=function(a){return $APP.qg.h($APP.bp,a)},LW=function(a){return new HW($APP.vm,"{%s}",2,b_a,a,null,null,null)},c_a=function(a){return['"',$APP.m.g(a),'"'].join("")},MW=function(a,b,c,d){this.lines=a;this.A=b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},NW=function(a){return"string"===typeof a?new MW(new $APP.H(null,
1,5,$APP.I,[a],null),null,null,null):new MW(a,null,null,null)},d_a=function(a,b){return $APP.Cb($APP.k(a)?$APP.x.h("_",$APP.yI.g(b)):a)?$APP.k(b)?b:a:null},e_a=function(a){var b=(b=a instanceof $APP.q)?$APP.Bf(a):b;return $APP.k(b)?new $APP.h(null,1,[$APP.yI,$APP.Bf(a)],null):null},OW=function(a,b,c,d,e){this.value=a;this.fc=b;this.A=c;this.o=d;this.C=e;this.J=2230716170;this.M=139264},PW=function(a,b,c,d,e,f){this.value=a;this.fc=b;this.ic=c;this.A=d;this.o=e;this.C=f;this.J=2230716170;this.M=139264},
RW=function(a){return QW(a,$APP.yj.l($APP.z([a])))},QW=function(a,b){return a instanceof $APP.q?new PW(a,b,null,null,null,null):new OW(a,b,null,null,null)},SW=function(a,b,c,d){this.children=a;this.A=b;this.o=c;this.C=d;this.J=2230716170;this.M=139264},f_a=function(a){for(;;){if($APP.Ae(a))return new SW(a,null,null,null);a=new $APP.H(null,1,5,$APP.I,[a],null)}},g_a=function(a,b){var c=b.toString();b.clear();return $APP.vf.h(a,c)},h_a=function(a){hW(a);for(var b=new $APP.gb,c=!1,d=$APP.Sg;;){var e=
a.va(null);if($APP.k(e)){if($APP.Cb(c)&&'"'===e)return g_a(d,b);"\n"===e?d=g_a(d,b):(b.append(e),c=$APP.Cb(c)&&"\\"===e)}else return eW(a,"Unexpected EOF while reading string.")}},TW=function(a,b){return(null!=b?b.J&262144||$APP.xd===b.Ri||(b.J?0:$APP.Ib($APP.uc,b)):$APP.Ib($APP.uc,b))?(b=$APP.qg.j($APP.Ol,$APP.se(b),new $APP.H(null,4,5,$APP.I,[$APP.Wl,$APP.Om,$APP.XL,$APP.Uz],null)),$APP.ve(b)?a:OZa(IV(b),a)):a},k_a=function(a){return $APP.cf($APP.Zk.h($APP.be(i_a),$APP.Og.l(function(b){var c=$APP.y.j(b,
0,null);b=$APP.y.j(b,1,null);return $APP.Es.F(IV(c),j_a,IV(b),i_a)},$APP.z([a]))))},UW=function(a,b){var c=$APP.cf($APP.Ei($APP.bn.h($APP.ej.h(IV,b),$APP.jn.g(l_a))));a=a.g?a.g(c):a.call(null,c);return TW(a,b)},m_a=function(a){return vW(a)||QV(a)},WW=function(a){return VW.g(a)},YW=function(a){return $APP.k(WW(a))?XW.g(a):$APP.gx(a)},ZW=function(a){return $APP.k(WW(a))?DV(XW.g(a)):$APP.hx(a)},$W=function(a){if($APP.k(WW(a))){a=$APP.Yf(a);var b=$APP.C.h(a,XW);if($APP.k(ZW(a)))return $APP.r(EV(b));throw $APP.Yl.h("called children on a leaf node",
$APP.Xf);}return $APP.ix(a)},aX=function(a,b,c){return $APP.k(WW(a))?FV(b,c):$APP.jx(a,b,c)},n_a=function(a){if($APP.k(VW.g(a)))return bX.g(a);throw $APP.Yl.h("to use position functions, please construct your zipper with ':track-position?'  set to true.",$APP.Xf);},o_a=function(a){var b=n_a(a);return new $APP.H(null,2,5,$APP.I,[b,pZa(b,oZa(YW(a)))],null)},p_a=function(a){return $APP.k(WW(a))?$APP.ej.h($APP.v,cX.g(a)):$APP.gka(a)},dX=function(a){if($APP.k(WW(a))){if($APP.k(ZW(a))){var b=$APP.Yf(a),
c=$APP.C.h(b,bX),d=$APP.y.j(c,0,null);c=$APP.y.j(c,1,null);b=$APP.C.h(b,XW);var e=$W(a),f=$APP.r(e),l=$APP.v(f);f=$APP.w(f);return $APP.k(e)?$APP.re(new $APP.h(null,6,[VW,!0,XW,l,bX,new $APP.H(null,2,5,$APP.I,[d,c+GV(b)],null),$APP.KL,a,cX,$APP.Sg,$APP.aD,f],null),$APP.se(a)):null}return null}return $APP.ox(a)},eX=function(a){if($APP.k(WW(a))){var b=$APP.Yf(a),c=$APP.C.h(b,XW),d=$APP.C.h(b,$APP.KL),e=$APP.C.h(b,cX),f=$APP.C.h(b,$APP.aD);b=$APP.C.h(b,$APP.px);return $APP.k(d)?$APP.k(b)?$APP.ui.l(d,
$APP.px,!0,$APP.z([XW,aX(a,XW.g(d),$APP.K.h($APP.ej.h($APP.v,e),$APP.yf(c,f)))])):d:null}return $APP.qx(a)},gX=function(a){for(;;)if($APP.k(WW(a))){if($APP.k(fX.g(a)))return YW(a);var b=eX(a);if($APP.k(b))a=b;else return YW(a)}else return $APP.hka(a)},hX=function(a){if($APP.k(WW(a))){var b=$APP.Yf(a),c=$APP.C.h(b,$APP.aD),d=$APP.r(c),e=$APP.v(d);d=$APP.w(d);var f=$APP.C.h(b,XW),l=$APP.C.h(b,$APP.KL),p=$APP.C.h(b,bX);b=$APP.C.h(b,cX);return $APP.k($APP.k(l)?c:l)?$APP.ui.l(a,XW,e,$APP.z([cX,$APP.vf.h(b,
new $APP.H(null,2,5,$APP.I,[f,p],null)),$APP.aD,d,bX,pZa(p,oZa(f))])):null}return $APP.sx(a)},iX=function(a){for(;;)if($APP.k(WW(a))){var b=hX(a);if($APP.k(b))a=b;else return a}else return $APP.tx(a)},jX=function(a){if($APP.k(WW(a))){var b=$APP.Yf(a),c=$APP.C.h(b,XW),d=$APP.C.h(b,$APP.KL),e=$APP.C.h(b,cX);b=$APP.C.h(b,$APP.aD);if($APP.k($APP.k(d)?$APP.r(e):d)){var f=$APP.te(e);d=$APP.y.j(f,0,null);f=$APP.y.j(f,1,null);return $APP.ui.l(a,XW,d,$APP.z([bX,f,cX,$APP.ue(e),$APP.aD,$APP.yf(c,b)]))}return null}return $APP.ux(a)},
q_a=function(a){if($APP.k(WW(a))){var b=$APP.Yf(a),c=$APP.C.h(b,XW),d=$APP.C.h(b,$APP.KL),e=$APP.C.h(b,cX);b=$APP.C.h(b,$APP.aD);if($APP.k($APP.k(d)?$APP.r(e):d)){var f=$APP.v(e);d=$APP.y.j(f,0,null);f=$APP.y.j(f,1,null);return $APP.ui.l(a,XW,d,$APP.z([bX,f,cX,$APP.Sg,$APP.aD,$APP.K.l($APP.ej.h($APP.v,$APP.Id(e)),new $APP.H(null,1,5,$APP.I,[c],null),$APP.z([b]))]))}return a}return $APP.ika(a)},kX=function(a,b){if($APP.k(WW(a))){var c=$APP.Yf(a),d=$APP.C.h(c,$APP.KL),e=$APP.C.h(c,bX);c=$APP.C.h(c,
cX);if($APP.Cb(d))throw $APP.Yl.h("cannot insert left at top",$APP.Xf);return $APP.ui.l(a,$APP.px,!0,$APP.z([cX,$APP.vf.h(c,new $APP.H(null,2,5,$APP.I,[b,e],null)),bX,pZa(e,oZa(b))]))}return $APP.jka(a,b)},lX=function(a,b){if($APP.k(WW(a))){var c=$APP.Yf(a),d=$APP.C.h(c,$APP.KL);c=$APP.C.h(c,$APP.aD);if($APP.Cb(d))throw $APP.Yl.h("cannot insert right at top",$APP.Xf);return $APP.ui.l(a,$APP.px,!0,$APP.z([$APP.aD,$APP.yf(b,c)]))}return $APP.kka(a,b)},mX=function(a,b){return $APP.k(WW(a))?$APP.ui.l(a,
$APP.px,!0,$APP.z([XW,b])):$APP.vx(a,b)},r_a=function(a,b){return $APP.k(WW(a))?mX(a,aX(a,YW(a),$APP.yf(b,$W(a)))):$APP.lka(a,b)},s_a=function(a,b){return $APP.k(WW(a))?mX(a,aX(a,YW(a),$APP.K.h($W(a),new $APP.H(null,1,5,$APP.I,[b],null)))):$APP.mka(a,b)},nX=function(a){if($APP.k(WW(a))){if($APP.k(fX.g(a)))return a;var b=ZW(a);b=$APP.k(b)?dX(a):b;if($APP.k(b))return b;b=hX(a);if($APP.k(b))return b;for(;;)if($APP.k(eX(a))){b=hX(eX(a));if($APP.k(b))return b;a=eX(a)}else return $APP.ui.j(a,fX,!0)}else return $APP.nka(a)},
oX=function(a){if($APP.k(WW(a))){var b=jX(a);if($APP.k(b))for(a=b;;)if(b=ZW(a),b=$APP.k(b)?dX(a):b,$APP.k(b))a=iX(b);else return a;else return eX(a)}else return $APP.oka(a)},t_a=function(a){return $APP.k(WW(a))?fX.g(a):$APP.pka(a)},pX=function(a){if($APP.k(WW(a))){var b=$APP.Yf(a),c=$APP.C.h(b,$APP.KL),d=$APP.C.h(b,cX);b=$APP.C.h(b,$APP.aD);if($APP.Cb(c))throw $APP.Yl.h("cannot remove at top",$APP.Xf);if($APP.r(d))for(var e=function(){var f=$APP.te(d),l=$APP.y.j(f,0,null);f=$APP.y.j(f,1,null);return $APP.ui.l(a,
$APP.px,!0,$APP.z([bX,f,XW,l,cX,$APP.ue(d)]))}();;)if(c=function(){var f=ZW(e);return $APP.k(f)?dX(e):f}(),$APP.k(c))e=iX(c);else return e;else return $APP.ui.l(c,$APP.px,!0,$APP.z([XW,aX(a,XW.g(c),b)]))}else return $APP.qka(a)},u_a=function(a,b,c){var d=$APP.y.j(a,0,null),e=$APP.y.j(a,1,null),f=$APP.C.h(e,b);return $APP.r(f)?$APP.re(new $APP.H(null,2,5,$APP.I,[d,$APP.ui.l(e,b,c.g?c.g(f):c.call(null,f),$APP.z([$APP.px,!0]))],null),$APP.se(a)):a},v_a=function(a){if($APP.k(VW.g(a))){var b=$APP.Yf(a);
b=$APP.C.h(b,$APP.aD);b=$APP.r(b);$APP.v(b);b=$APP.w(b);return $APP.ui.l(a,$APP.aD,b,$APP.z([$APP.px,!0]))}return u_a(a,$APP.nx,$APP.w)},qX=function(a,b){for(;;){var c=hX(a);if($APP.k(c))if($APP.k(b.g?b.g(c):b.call(null,c)))a=v_a(a);else return a;else return a}},rX=function(a,b){for(;;){var c=jX(a);if($APP.k(c))if($APP.k(b.g?b.g(c):b.call(null,c)))if($APP.k(VW.g(a))){c=$APP.Yf(a);c=$APP.C.h(c,cX);var d=$APP.te(c);$APP.k(d)&&($APP.y.j(d,0,null),d=$APP.y.j(d,1,null),a=$APP.ui.l(a,cX,$APP.ue(c),$APP.z([bX,
d,$APP.px,!0])))}else a=u_a(a,$APP.kx,$APP.ue);else return a;else return a}},w_a=function(a){if($APP.k(VW.g(a))){var b=$APP.Yf(a),c=$APP.C.h(b,cX),d=$APP.C.h(b,$APP.KL);b=$APP.C.h(b,$APP.aD);if(null==$APP.KL.g(d))throw $APP.Yl.h("cannot remove at top",$APP.Xf);return $APP.r(c)?$APP.ui.l(d,$APP.px,!0,$APP.z([XW,aX(a,XW.g(d),$APP.K.h($APP.ej.h($APP.v,c),b))])):pX(a)}$APP.y.j(a,0,null);c=$APP.y.j(a,1,null);c=$APP.Yf(c);d=$APP.C.h(c,$APP.kx);b=$APP.C.h(c,$APP.mx);var e=$APP.C.h(c,$APP.lx),f=$APP.C.h(c,
$APP.nx);if(null==b)throw $APP.Yl.h("cannot remove at top",$APP.Xf);return 0<$APP.be(d)?eX($APP.re(new $APP.H(null,2,5,$APP.I,[$APP.te(d),$APP.ui.l(c,$APP.kx,$APP.ue(d),$APP.z([$APP.px,!0]))],null),$APP.se(a))):$APP.re(new $APP.H(null,2,5,$APP.I,[aX(a,$APP.te(e),f),$APP.k(b)?$APP.ui.j(b,$APP.px,!0):b],null),$APP.se(a))},x_a=function(a){var b=$APP.x.h(":",gW(a,function(c){return $APP.x.h(":",c)}));a=AZa(a,function(c){var d=wZa(c);return d?d:sV(c)});return SZa(b,$APP.r(a)?a:null)},z_a=function(a){var b=
y_a;hW(a);var c=x_a(a);$APP.Cb(c.Jb)&&null==c.prefix&&eW(a,"namespaced map expects a namespace");var d;a:for(d=$APP.Sg;;){var e=b.g?b.g(a):b.call(null,a);var f=e;f=$APP.k(f)?vW(e):f;if($APP.k(f))d=$APP.vf.h(d,e);else{d=new $APP.H(null,2,5,$APP.I,[d,e],null);break a}}b=$APP.y.j(d,0,null);d=$APP.y.j(d,1,null);($APP.Cb(d)||$APP.ti.h($APP.vm,tV(d)))&&eW(a,"namespaced map expects a map");return new AW(RZa($APP.K.l(new $APP.H(null,1,5,$APP.I,[c],null),b,$APP.z([new $APP.H(null,1,5,$APP.I,[d],null)]))),
null,null,null)},A_a=function(a){a=h_a(a);return $APP.mn.h("\n",a)},C_a=function(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return B_a(arguments[0],1<b.length?new $APP.Ed(b.slice(1),0,null):null)},B_a=function(a,b){b=$APP.y.j(b,0,null);var c=$APP.Di(b);return AZa(a,function(d){var e=$APP.Cb(c.g?c.g(d):c.call(null,d));e?(e=sV(d),d=$APP.k(e)?e:wZa(d)):d=e;return d})},D_a=function(a){var b=a.va(null),c=$APP.m.g(b),d=$APP.m,e=d.g;if($APP.x.h(b,"\\")){var f=a.va(null);
f=[$APP.m.g(f),$APP.m.g($APP.ti.h(f,"\\")?C_a(a):"")].join("")}else f=C_a(a);c=[c,e.call(d,f)].join("");(d=$APP.x.h(b,"\\"))?b=d:(b=$APP.x.h(b,"#"),b||(d=$APP.y.j(c,0,null),b=$APP.y.j(c,1,null),e=jZa(d),b=$APP.k(e)?e:(d="+"===d||"-"===d)?jZa(b):d));b=$APP.k(b)?$APP.aM.g(c):IZa(c);b instanceof $APP.q?(a=B_a(a,$APP.z([new $APP.H(null,2,5,$APP.I,["'",":"],null)])),$APP.ve(a)?a=QW(b,c):(a=[$APP.m.g(c),$APP.m.g(a)].join(""),a=QW(IZa(a),a))):a=QW(b,c);return a},G_a=function(a){return null==a?$APP.bm:$APP.k(sV(a))?
sW:$APP.x.h(a,sX)?E_a:$APP.C.j($APP.gi("@`\"#'():;[{]}^~".split(""),[$APP.cp,$APP.ao,$APP.em,F_a,$APP.ep,$APP.tm,tX,$APP.Dm,PV,$APP.um,$APP.vm,tX,tX,$APP.nb,$APP.hp]),a,$APP.rV)},y_a=function(a){return kW(a)},uX=function(a,b){hW(a);return CZa(a,function(c){var d=sX;sX=b;try{return kW(c)}finally{sX=d}})},wX=function(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return vX(arguments[0],arguments[1],arguments[2],3<b.length?new $APP.Ed(b.slice(3),0,null):null)},vX=
function(a,b,c,d){d=$APP.y.j(d,0,null);$APP.k(d)&&hW(a);a:{d=y_a;for(var e=$APP.rg(vV),f=0,l=$APP.Sg;;)if(f<c){var p=d.g?d.g(a):d.call(null,a);if($APP.k(p))f=$APP.k(e.g?e.g(p):e.call(null,p))?f+1:f,l=$APP.vf.h(l,p);else{a=vZa(a,"%s node expects %d value%s.",$APP.z([b,c,$APP.x.h(c,1)?"":"s"]));break a}}else{a=l;break a}}return a},H_a=function(a){a.ae(null,"#");return D_a(a)},I_a=function(a){hW(a);a=BZa(a);return new OV("#!",a,null,null,null)},J_a=function(a){var b=$APP.Ni.h($APP.ef,$APP.Is.g(function(){return kW(a)})),
c=$APP.Nl.l($APP.z([$APP.se($APP.v(b)),$APP.wi($APP.se($APP.me(b)),new $APP.H(null,2,5,$APP.I,[$APP.tp,$APP.up],null))]));return $APP.re(new SV(b,null,null,null),c)},K_a=function(a){return J_a($APP.Gl($APP.Fl(a)))},xX=function(a){a=null==a?null:YW(a);return null==a?null:vW(a)},yX=function(a){a=null==a?null:YW(a);return null==a?null:wW(a)},L_a=function(a){a=null==a?null:YW(a);return null==a?null:QV(a)},M_a=function(a){var b=xX(a);return $APP.k(b)?$APP.Cb(yX(a)):b},zX=function(a){a=null==a?null:YW(a);
return null==a?null:m_a(a)},N_a=function(a,b,c){return $APP.v($APP.Oi.h(b,$APP.Ni.h($APP.rg(t_a),$APP.Ni.h($APP.ef,$APP.Ng(a,c)))))},AX=function(a,b){return N_a(a,zX,b)},BX=function(a,b){return 0<b?kX(a,tW(b)):a},CX=function(a,b){return 0<b?lX(a,tW(b)):a},EX=function(a,b){a=$APP.k(O_a.g(b))?new $APP.h(null,6,[VW,!0,XW,a,bX,new $APP.H(null,2,5,$APP.I,[1,1],null),$APP.KL,null,cX,$APP.Sg,$APP.aD,$APP.Hd],null):$APP.fx(DV,$APP.qq.h($APP.r,EV),FV,a);return $APP.ho.F(a,$APP.ui,DX,$APP.Nl.l($APP.z([P_a,
b])))},FX=function(a,b){for(;;){if($APP.x.h(tV(a),$APP.rw))return a=EX(a,b),b=AX(hX,dX(a)),$APP.k(b)?b:a;a=new SV(new $APP.H(null,1,5,$APP.I,[a],null),null,null,null)}},GX=function(a){a=null==a?null:YW(a);return null==a?null:tV(a)},HX=function(a){var b=null==a?null:YW(a);return null==b?null:zV.h(b,DX.g($APP.se(a)))},Q_a=function(a,b){a=null==a?null:K_a(a);return null==a?null:EX(a,b)},R_a=function(a,b){a=null==a?null:K_a(a);return null==a?null:FX(a,b)},IX=function(a){a=null==a?null:YW(a);return null==
a?null:yV(a)},S_a=function(a){a=null==a?null:gX(a);return null==a?null:yV(a)},T_a=function(a){a=null==a?null:IX(a);return null==a?null:$APP.cj(a)},U_a=function(a){a=null==a?null:S_a(a);return null==a?null:$APP.cj(a)},JX=function(a){a=null==a?null:hX(a);return null==a?null:AX(hX,a)},KX=function(a){a=null==a?null:jX(a);return null==a?null:AX(jX,a)},LX=function(a){a=null==a?null:dX(a);return null==a?null:AX(hX,a)},MX=function(a){a=null==a?null:eX(a);return null==a?null:AX(jX,a)},NX=function(a){if($APP.k(a)){var b=
null==a?null:nX(a);b=null==b?null:AX(nX,b);return $APP.k(b)?b:$APP.ho.F(a,$APP.ui,V_a,!0)}return null},OX=function(a){var b=$APP.Cb(a);if(b)return b;b=t_a(a);return $APP.k(b)?b:V_a.g($APP.se(a))},W_a=function(a){a=null==a?null:oX(a);return null==a?null:AX(oX,a)},X_a=function(a){a=null==a?null:q_a(a);return null==a?null:AX(hX,a)},PX=function(a){a=null==a?null:iX(a);return null==a?null:AX(jX,a)},Y_a=function(a){var b=qX(a,xX);var c=$APP.x.h(1,$APP.be($APP.Ni.h($APP.ef,$APP.Ng(eX,a)))-1);a=c?(c=$APP.Cb(JX(a)))?
$APP.og(yX,$APP.Ni.h($APP.ef,$APP.Ng(hX,a))):c:c;return $APP.k(a)?lX(b,uW(1)):b},Z_a=function(a,b,c){a=b.g?b.g(a):b.call(null,a);c=c.g?c.g(a):c.call(null,a);return AX(oX,pX(c))},RX=function(a){return Z_a(a,QX,Y_a)},$_a=function(a){return function(){function b(c){var d=xX(c);return $APP.k(d)?$APP.Cb(yX(c)):d}return Z_a(a,function(c){return QX.h(c,b)},function(c){return qX(c,b)})}()},a0a=function(a){return function(b,c){b=zV.h(b,a);c=c.g?c.g(b):c.call(null,b);return IV(c)}},b0a=function(a,b){var c=
HX(a),d="string"===typeof c?b.g?b.g(c):b.call(null,c):c instanceof $APP.F?$APP.fj.h($APP.Bf(c),function(){var e=$APP.Fi(c);return b.g?b.g(e):b.call(null,e)}()):c instanceof $APP.q?$APP.kj.h($APP.Bf(c),function(){var e=$APP.Fi(c);return b.g?b.g(e):b.call(null,e)}()):null;return mX(a,RW(d))},c0a=function(a,b){b=$APP.Ll.j(YW(a),new $APP.H(null,1,5,$APP.I,[$APP.EK],null),$APP.qq.h(b,$APP.cf));return mX(a,b)},d0a=function(a,b){var c=GX(a);c=c instanceof $APP.F?c.N:null;switch(c){case "token":return b0a(a,
function(d){return[$APP.m.g(b),$APP.m.g(d)].join("")});case "multi-line":return c0a(a,function(d){return $APP.ve(d)?new $APP.H(null,1,5,$APP.I,[b],null):$APP.Ll.j(d,new $APP.H(null,1,5,$APP.I,[0],null),function(e){return[$APP.m.g(b),$APP.m.g(e)].join("")})});default:throw Error(["No matching clause: ",$APP.m.g(c)].join(""));}},e0a=function(a,b){var c=GX(a);c=c instanceof $APP.F?c.N:null;switch(c){case "token":return b0a(a,function(d){return[$APP.m.g(d),$APP.m.g(b)].join("")});case "multi-line":return c0a(a,
function(d){return $APP.ve(d)?new $APP.H(null,1,5,$APP.I,[b],null):$APP.K.h($APP.Ei(d),new $APP.H(null,1,5,$APP.I,[[$APP.m.g($APP.me(d)),$APP.m.g(b)].join("")],null))});default:throw Error(["No matching clause: ",$APP.m.g(c)].join(""));}},g0a=function(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return f0a(arguments[0],1<b.length?new $APP.Ed(b.slice(1),0,null):null)},f0a=function(a,b){var c=$APP.y.j(b,0,null);return $APP.k(c)?function(d){var e=$APP.x.h(GX(d),
a);return e?c.g?c.g(d):c.call(null,d):e}:function(d){return $APP.x.h(GX(d),a)}},SX=function(a,b,c){return $APP.v($APP.Oi.h($APP.rg(c),$APP.Ni.h($APP.rg(OX),$APP.Ni.h($APP.ef,$APP.Ng(b,a)))))},h0a=function(a,b,c){return $APP.me($APP.Pg.h(function(d){var e=c.g?c.g(d):c.call(null,d);if($APP.k(e)){var f=$APP.Be(b)?new $APP.H(null,2,5,$APP.I,[$APP.po.g(b),$APP.Xl.g(b)],null):b;e=$APP.y.j(f,0,null);f=$APP.y.j(f,1,null);if(0>=e||0>=f)throw $APP.Yl.h("zipper row and col positions are ones-based",new $APP.h(null,
1,[$APP.UL,b],null));var l=o_a(d),p=$APP.y.j(l,0,null);d=$APP.y.j(p,0,null);p=$APP.y.j(p,1,null);var u=$APP.y.j(l,1,null);l=$APP.y.j(u,0,null);u=$APP.y.j(u,1,null);var t=e>=d;e=t?(t=e<=l)?(d=$APP.x.h(e,d)?f>=p:!0)?$APP.x.h(e,l)?f<u:!0:d:t:t}return e},$APP.Ni.h($APP.rg(OX),$APP.Ni.h($APP.ef,$APP.Ng(nX,a)))))},TX=function(a,b,c){a=null==a?null:b.g?b.g(a):b.call(null,a);return null==a?null:SX(a,b,c)},i0a=function(a,b,c){return SX(a,b,function(d){return $APP.x.h(GX(d),c)})},j0a=function(a,b,c){return h0a(a,
b,function(d){return $APP.x.h(GX(d),c)})},UX=function(a,b,c){return SX(a,b,f0a($APP.rV,$APP.z([c])))},k0a=function(a,b,c){return UX(b.g?b.g(a):b.call(null,a),b,c)},VX=function(a,b,c){var d=$APP.ye(c)?$APP.qq.h(c,HX):function(e){return $APP.x.h(HX(e),c)};return UX(a,b,d)},l0a=function(a,b,c){return VX(b.g?b.g(a):b.call(null,a),b,c)},XX=function(a,b,c,d,e){e=IV(e);a=a.g?a.g(d):a.call(null,d);return $APP.af.j(b,d,$APP.K.l($APP.k($APP.k(a)?$APP.Cb(xX(a)):a)?new $APP.H(null,1,5,$APP.I,[WX],null):null,
new $APP.H(null,1,5,$APP.I,[e],null),$APP.z([$APP.Cb(xX(d))?c:null])))},m0a=function(a,b){return XX(function(c){c=null==c?null:dX(c);return null==c?null:iX(c)},s_a,$APP.Sg,a,b)},YX=function(a){return $APP.Se(new $APP.zi(null,new $APP.h(null,6,[$APP.Hm,null,$APP.um,null,$APP.tm,null,$APP.Gm,null,$APP.vm,null,$APP.rw,null],null),null),GX(a))},ZX=function(a){return $APP.x.h(GX(a),$APP.Hm)},n0a=function(a,b){var c=LX(b);return $APP.k(c)?(b=a.g?a.g(c):a.call(null,c),b=null==b?null:$APP.Ng(function(d){d=
JX(d);return $APP.k(d)?a.g?a.g(d):a.call(null,d):null},b),b=null==b?null:$APP.Ni.h($APP.ef,b),b=null==b?null:$APP.me(b),null==b?null:MX(b)):b},o0a=function(a,b){for(var c=LX(b);;){var d=c;d=$APP.k(d)?YW(c):d;if($APP.Cb(d))return b;c=JX(c);if($APP.k(c))d=a.g?a.g(c):a.call(null,c),$APP.k(d)?(c=d,b=JX(c),d=MX(c),c=b,b=d):c=JX(c);else return b}},$X=function(a){return ZX(a)?PX(LX(a)):a},aY=function(a,b){return ZX(a)?MX(b):b},p0a=function(a,b){if($APP.x.h(GX(a),$APP.vm)){var c=null==a?null:LX(a);b=null==
c?null:VX(c,JX,b);return null==b?null:JX(b)}if(ZX(a))return c=null==a?null:LX(a),c=null==c?null:PX(c),c=null==c?null:LX(c),b=null==c?null:VX(c,JX,b),null==b?null:JX(b);c=$APP.y;var d=c.h;a=LX(a);a=null==a?null:$APP.Ng(JX,a);a=null==a?null:$APP.Ni.h($APP.ef,a);return d.call(c,a,b)},q0a=function(a,b){return $APP.y.h($APP.Ng(hX,dX(a)),b)},r0a=function(a){var b=null==a?null:YW(a);return null==b?null:EX(b,DX.g($APP.se(a)))},bY=function(a,b){var c=r0a(a);b=b.g?b.g(c):b.call(null,c);return mX(a,gX(b))},
s0a=function(a,b,c){return $APP.k(b.g?b.g(a):b.call(null,a))?(b=c.g?c.g(a):c.call(null,a),$APP.k(b)?b:a):a},t0a=function(a,b,c){for(;;){if($APP.k(OX(c)))return c;c=NX(s0a(c,a,b))}},u0a=function(a,b,c){return bY(a,function(d){a:for(d=$APP.me($APP.Ni.h($APP.ef,$APP.Ng(LX,d)));;)if(d=s0a(d,b,c),$APP.k(JX(d)))d=$APP.me($APP.Ni.h($APP.ef,$APP.Ng(LX,JX(d))));else if($APP.k(MX(d)))d=MX(d);else break a;return d})},v0a=function(a){return u0a(a,function(b){b=YW(b);return null!=b?$APP.xd===b.wj?!0:b.yd?!1:$APP.Ib(JV,
b):$APP.Ib(JV,b)},function(b){var c=eX(eX(b));c=$APP.k($APP.k(c)?ZX(c):c)?c:null;return $APP.k($APP.k(c)?!$APP.pg($APP.be($APP.Ni.h($APP.ef,$APP.Ng(jX,b)))):c)?mX(b,KV(YW(b),$APP.v(EV(YW(c))))):mX(b,LV(YW(b)))})},w0a=function(a){return YW(a)},cY=function(a,b){return mX(a,IV(b))},dY=function(a){if($APP.k(ZW(a))){var b=$APP.r($APP.Oi.h(vW,$APP.wf($APP.Oi.h(vW,$W(a)))));if(b){a=$APP.af.j(lX,a,b);if($APP.k(VW.g(a)))b=$APP.Yf(a),b=$APP.C.h(b,$APP.aD),a=$APP.r(b)?$APP.ui.l(a,$APP.px,!0,$APP.z([XW,$APP.v(b),
$APP.aD,$APP.w(b)])):null;else{$APP.y.j(a,0,null);b=$APP.y.j(a,1,null);b=$APP.Yf(b);var c=$APP.C.h(b,$APP.nx);a=$APP.r(c)?$APP.re(new $APP.H(null,2,5,$APP.I,[$APP.v(c),$APP.ui.j($APP.Ll.j(b,new $APP.H(null,1,5,$APP.I,[$APP.nx],null),$APP.w),$APP.px,!0)],null),$APP.se(a)):null}b=AX(hX,a);a=$APP.k(b)?b:a}else a=RX(a)}return a},eY=function(a,b){return XX(hX,lX,new $APP.H(null,1,5,$APP.I,[WX],null),a,b)},fY=function(a,b){return XX(jX,kX,new $APP.H(null,1,5,$APP.I,[WX],null),a,b)},x0a=function(a,b){return XX(dX,
r_a,$APP.Sg,a,b)},y0a=function(a,b){return m0a(a,b)},gY=function(a){return KX(a)},hY=function(a){return JX(a)},z0a=function(a){return MX(a)},iY=function(a){return hX(a)},A0a=function(a){return jX(a)},B0a=function(a){return nX(a)},C0a=function(a,b){return lX(a,b)},D0a=function(a,b){return s_a(a,b)},jY=function(a){return YX(a)&&$APP.Cb($APP.r(HX(a)))},E0a=function(a,b){return $APP.x.h(0,b)?a:$APP.me($APP.Dg.h(b+1,$APP.Ng(z0a,a)))},lY=function(a,b){return kY.j($APP.me($APP.Ni.h($APP.ef,$APP.Ng(z0a,a))),
B0a,function(c){return $APP.x.h($APP.se(YW(c)),$APP.se(b))})},mY=function(a,b,c){return $APP.ej.h(w0a,$APP.Ni.h(c,$APP.Ni.h($APP.ef,$APP.Ng(b,a))))},F0a=function(a){return $APP.r(a)?vW($APP.v(a))?$APP.Id(a):a:null},G0a=function(a){for(;;){if($APP.Cb(zX(a)))return a;a=pX(a)}},nY=function(a,b){switch(a instanceof $APP.F?a.N:null){case "list":return IW(b);case "vector":return JW(b);case "map":return LW(b);case "set":return KW(b);default:throw $APP.Yl.h(["usupported wrap type: ",$APP.m.g(a)].join(""),
$APP.Xf);}},oY=function(a){var b=$APP.x,c=b.h;a=null==a?null:YW(a);return c.call(b,null==a?null:$APP.Jb(a),$APP.Jb(NW(" ")))},H0a=function(a){var b=jX(a);a=pX(qX(a,$APP.sg(!0)));return $APP.k(b)?lY(a,YW(b)):a},I0a=function(a,b){if($APP.x.h(IX(a),'""'))return RX(a);var c=$APP.se(YW(a)),d=$APP.po.g(b)-$APP.po.g(c),e=$APP.x.h($APP.po.g(b),$APP.po.g(c))?$APP.Xl.g(b)-($APP.Xl.g(c)+1):$APP.Xl.g(b)-1;return cY(a,NW($APP.Ll.j($APP.cf($APP.Dg.h(d+1,$APP.EK.g(YW(a)))),new $APP.H(null,1,5,$APP.I,[d],null),function(f){return $APP.Yi.j(f,
0,e)})))},J0a=function(a,b){return b<=$APP.be(a)?new $APP.H(null,2,5,$APP.I,[b-$APP.be($APP.Ni.h(function(c){return!$APP.x.h(c," ")},$APP.wf($APP.Dg.h(b,$APP.r(a))))),b+$APP.be($APP.Ni.h(function(c){return!($APP.x.h(c," ")||$APP.x.h(c,"\n"))},$APP.Eg.h(b,$APP.r(a))))],null):null},K0a=function(a,b){var c=J0a(a,b);return $APP.k(c)?(b=$APP.y.j(c,0,null),c=$APP.y.j(c,1,null),[$APP.Yi.j(a,0,b),$APP.Yi.h(a,c)].join("")):null},L0a=function(a,b){var c=$APP.se(YW(a)),d=$APP.po.g(b)-$APP.po.g(c),e=$APP.x.h(0,
d)?$APP.Xl.g(b)-$APP.Xl.g(c):$APP.Xl.g(b);return cY(a,NW($APP.Ll.j($APP.EK.g(YW(a)),new $APP.H(null,1,5,$APP.I,[d],null),function(f){return K0a(f,e)})))},pY=function(a,b){if(jY(a))return new $APP.H(null,2,5,$APP.I,[b.g?b.g(a):b.call(null,a),0],null);if(null==a)b=null;else a:{a=MX(a);for(var c=1;;){if(null==a){b=null;break a}if(null!=(b.g?b.g(a):b.call(null,a))){b=new $APP.H(null,2,5,$APP.I,[c,b.g?b.g(a):b.call(null,a)],null);break a}if(null==MX(a)){b=null;break a}a=MX(a);c+=1}}return null==b?null:
$APP.wf(b)},M0a=function(a){var b=pY(a,hY),c=$APP.y.j(b,0,null);b=$APP.y.j(b,1,null);if($APP.Cb(c))return a;b=E0a(a,b);var d=$APP.Pg.h(function(e){return wW(e)||QV(e)},mY(hX(b),iY,function(e){return!$APP.x.h(YW(c),YW(e))}));return function(e){return jY(a)?rX(LX(e),xX):lY(e,YW(a))}(y0a($APP.Pl.h($APP.af,y0a)(v_a(qX(b,zX)),d),YW(c)))},N0a=function(a){var b=function(){var d=null==a?null:pY(a,hY);return null==d?null:$APP.v(d)}(),c=function(){var d=null==b?null:mY(b,hY,$APP.sg);d=null==d?null:$APP.be(d);
return null==d?null:d+1}();return $APP.me($APP.Dg.h(c,$APP.Ng(M0a,a)))},O0a=function(a){var b=pY(a,gY);if($APP.k(b)){var c=$APP.y.j(b,0,null);$APP.y.j(b,1,null);b=$APP.Pg.h(function(d){return wW(d)||QV(d)},mY(hX(c),iY,zX));return function(d){return jY(a)?qX(LX(d),yX):lY(d,YW(a))}(x0a($APP.Pl.h($APP.af,x0a)(NX(pX(qX(function(d){var e=KX(c);e=$APP.k(e)?$APP.Cb(yX(jX(d))):e;return $APP.k(e)?BX(d,1):d}(rX(c,M_a)),zX))),b),YW(c)))}return a},P0a=function(a,b){if(!$APP.Cb(MX(a))){var c=$APP.sg(!0);b=b.h?
b.h(a,c):b.call(null,a,c);b=MX(b);b=dY.g?dY.g(b):dY.call(null,b);a=lY(b,YW(a))}return a},Q0a=function(a){var b=MX(a);if($APP.Cb(b))return a;var c=GX(b);var d=JX(a);d=mY(d,A0a,$APP.sg);d=$APP.wf(F0a($APP.Id(d)));var e=JX(a);e=mY(e,iY,$APP.sg);e=F0a(e);$APP.r(d)&&$APP.r(e)&&(b=RX(fY(fY(b,nY(c,d)),nY(c,e))),a=lY(b,YW(a)),a=$APP.k(a)?a:lY(b,$APP.me(d)));return a},R0a=function(a,b){var c=$APP.se(YW(a)),d=$APP.po.g(b)-$APP.po.g(c),e=$APP.EK.g(YW(a)),f=$APP.x.h($APP.po.g(b),$APP.po.g(c))?$APP.Xl.g(b)-($APP.Xl.g(c)+
1):$APP.Xl.g(b)-1;return eY(cY(a,NW($APP.Ll.j($APP.cf($APP.Dg.h(d+1,e)),new $APP.H(null,1,5,$APP.I,[d],null),function(l){return $APP.Yi.j(l,0,f)}))),NW($APP.Ll.j($APP.cf($APP.Eg.h(d,e)),new $APP.H(null,1,5,$APP.I,[0],null),function(l){return $APP.Yi.h(l,f)})))},qY=new $APP.q(null,"auto-resolved?","auto-resolved?",-303944824,null),S0a=new $APP.q(null,"remove*","remove*",-1039003656,null),rY=new $APP.F(null,"commas","commas",1094507436),T0a=new $APP.q("rewrite-clj.node","value","rewrite-clj.node/value",
-732159104,null),U0a=new $APP.q(null,"-\x3eroot-string","-\x3eroot-string",1057289099,null),V0a=new $APP.q(null,"prev*","prev*",-98391779,null),W0a=new $APP.q(null,"map-vals","map-vals",-818445670,null),X0a=new $APP.q("rewrite-clj.zip","root","rewrite-clj.zip/root",1676550069,null),Y0a=new $APP.q("rewrite-clj.paredit","splice-killing-backward","rewrite-clj.paredit/splice-killing-backward",310640504,null),Z0a=new $APP.q(null,"keyword-node","keyword-node",1365835578,null),$0a=new $APP.q("rewrite-clj.node",
"uneval-node","rewrite-clj.node/uneval-node",567781006,null),a1a=new $APP.q("rewrite-clj.node","map-node","rewrite-clj.node/map-node",1841144389,null),b1a=new $APP.q("rewrite-clj.zip","prev","rewrite-clj.zip/prev",649762864,null),sY=new $APP.q(null,"zloc","zloc",-482528240,null),c1a=new $APP.q(null,"position","position",-371200385,null),d1a=new $APP.q("rewrite-clj.node","node?","rewrite-clj.node/node?",1743299246,null),e1a=new $APP.q("rewrite-clj.node","vector-node","rewrite-clj.node/vector-node",
1314613621,null),f1a=new $APP.q(null,"pattern-string","pattern-string",-327196914,null),g1a=new $APP.q(null,"of-string*","of-string*",-1713659327,null),h1a=new $APP.q(null,"find-next-depth-first","find-next-depth-first",495552010,null),i1a=new $APP.q("rewrite-clj.zip","find-next-token","rewrite-clj.zip/find-next-token",967604030,null),j1a=new $APP.q("rewrite-clj.paredit","join","rewrite-clj.paredit/join",1962684002,null),k1a=new $APP.q(null,"forms-node","forms-node",1284122026,null),l1a=new $APP.F(null,
"int","int",-1741416922),m1a=new $APP.q("rewrite-clj.zip","insert-left","rewrite-clj.zip/insert-left",376252912,null),n1a=new $APP.q("rewrite-clj.zip","of-string","rewrite-clj.zip/of-string",-1809472470,null),o1a=new $APP.q(null,"find-tag","find-tag",1309624400,null),p1a=new $APP.q("rewrite-clj.zip","print-root","rewrite-clj.zip/print-root",1359543544,null),EZa=new $APP.q(null,"read-token","read-token",392624627,null),q1a=new $APP.q(null,"slurp-backward-fully","slurp-backward-fully",-459030776,null),
r1a=new $APP.q(null,"insert-left*","insert-left*",-331277308,null),s1a=new $APP.q(null,"find-last-by-pos","find-last-by-pos",-2099911467,null),t1a=new $APP.q(null,"splice-killing-backward","splice-killing-backward",1391642395,null),u1a=new $APP.q(null,"find-next-tag","find-next-tag",532022898,null),v1a=new $APP.q("rewrite-clj.zip","insert-child","rewrite-clj.zip/insert-child",820888808,null),w1a=new $APP.q(null,"root-string","root-string",-1309366614,null),x1a=new $APP.q(null,"find-next-token","find-next-token",
1439744427,null),y1a=new $APP.q("rewrite-clj.zip","child-sexprs","rewrite-clj.zip/child-sexprs",486426579,null),z1a=new $APP.q("rewrite-clj.parser.core","dispatch","rewrite-clj.parser.core/dispatch",-1962626312,null),A1a=new $APP.q("rewrite-clj.node","whitespace-nodes","rewrite-clj.node/whitespace-nodes",1549252955,null),B1a=new $APP.q("rewrite-clj.node","newline-node","rewrite-clj.node/newline-node",1695707042,null),C1a=new $APP.q("rewrite-clj.paredit","kill","rewrite-clj.paredit/kill",568157203,
null),D1a=new $APP.q("rewrite-clj.node","map-context-apply","rewrite-clj.node/map-context-apply",-1964372922,null),E1a=new $APP.q(null,"edit-node","edit-node",-557486059,null),F1a=new $APP.q("rewrite-clj.node","raw-meta-node","rewrite-clj.node/raw-meta-node",103892874,null),tY=new $APP.F(null,"wrap-length","wrap-length",-268108519),G1a=new $APP.q("rewrite-clj.zip","up","rewrite-clj.zip/up",2102499745,null),H1a=new $APP.q("rewrite-clj.zip","insert-newline-left","rewrite-clj.zip/insert-newline-left",
190026550,null),I1a=new $APP.q(null,"set-node","set-node",-1175314694,null),J1a=new $APP.q(null,"left*","left*",2122475758,null),K1a=new $APP.q("rewrite-clj.paredit","splice-killing-forward","rewrite-clj.paredit/splice-killing-forward",847584124,null),L1a=new $APP.q("rewrite-clj.paredit","wrap-around","rewrite-clj.paredit/wrap-around",-745290392,null),uY=new $APP.F(null,"seq-fn","seq-fn",-991013231),M1a=new $APP.q("rewrite-clj.node","map-qualifier-node","rewrite-clj.node/map-qualifier-node",847080829,
null),N1a=new $APP.q("rewrite-clj.zip","find-token","rewrite-clj.zip/find-token",1930927546,null),XW=new $APP.F(null,"node","node",581201198),O1a=new $APP.q(null,"unquote-node","unquote-node",-169205251,null),P1a=new $APP.q(null,"rightmost?","rightmost?",-2034235798,null),Q1a=new $APP.q(null,"rightmost*","rightmost*",-686817564,null),R1a=new $APP.q("rewrite-clj.node","syntax-quote-node","rewrite-clj.node/syntax-quote-node",-1480128160,null),S1a=new $APP.q("rewrite-clj.node","symbol-node?","rewrite-clj.node/symbol-node?",
1105845260,null),T1a=new $APP.q("rewrite-clj.paredit","slurp-backward","rewrite-clj.paredit/slurp-backward",1085595173,null),qW=new $APP.F(null,"comma","comma",1699024745),U1a=new $APP.q("rewrite-clj.node","namespaced-map-node","rewrite-clj.node/namespaced-map-node",1636241056,null),V1a=new $APP.q("rewrite-clj.zip","splice","rewrite-clj.zip/splice",1484309403,null),W1a=new $APP.q("rewrite-clj.node","comment-node","rewrite-clj.node/comment-node",1714189066,null),X1a=new $APP.q("rewrite-clj.node","tag",
"rewrite-clj.node/tag",1955193360,null),Y1a=new $APP.q(null,"slurp-backward","slurp-backward",24786368,null),Z1a=new $APP.q("rewrite-clj.node","var-node","rewrite-clj.node/var-node",1545203061,null),DX=new $APP.F("rewrite-clj.zip","opts","rewrite-clj.zip/opts",-1382883702),$1a=new $APP.q("rewrite-clj.zip","left","rewrite-clj.zip/left",635293979,null),a2a=new $APP.q(null,"find-depth-first","find-depth-first",-1257674889,null),b2a=new $APP.q(null,"keyword-node?","keyword-node?",-1986799138,null),c2a=
new $APP.q(null,"find-next","find-next",-758984784,null),d2a=new $APP.q(null,"kill","kill",1628195952,null),e2a=new $APP.q("rewrite-clj.node","token-node","rewrite-clj.node/token-node",-824377137,null),f2a=new $APP.q("rewrite-clj.node","coerce","rewrite-clj.node/coerce",1945099471,null),g2a=new $APP.q(null,"deref-node","deref-node",-1195516122,null),h2a=new $APP.q("rewrite-clj.zip","insert-left*","rewrite-clj.zip/insert-left*",-1071272301,null),i2a=new $APP.q("rewrite-clj.node","comment?","rewrite-clj.node/comment?",
-505235704,null),bX=new $APP.F(null,"position","position",-2011731912),VW=new $APP.F("rewrite-clj.custom-zipper.core","custom?","rewrite-clj.custom-zipper.core/custom?",-1122119625),cX=new $APP.F(null,"left","left",-399115937),j2a=new $APP.q("rewrite-clj.zip","insert-right","rewrite-clj.zip/insert-right",1240710026,null),k2a=new $APP.q("rewrite-clj.zip","subedit-node","rewrite-clj.zip/subedit-node",-26892970,null),l2a=new $APP.q("rewrite-clj.zip","append-child*","rewrite-clj.zip/append-child*",312017385,
null),m2a=new $APP.q("rewrite-clj.node","whitespace?","rewrite-clj.node/whitespace?",-1155325967,null),n2a=new $APP.q(null,"list-node","list-node",887782095,null),o2a=new $APP.q("rewrite-clj.node","whitespace-or-comment?","rewrite-clj.node/whitespace-or-comment?",-1926426417,null),p2a=new $APP.q("rewrite-clj.zip","map-keys","rewrite-clj.zip/map-keys",-910790738,null),q2a=new $APP.q(null,"string-node","string-node",1969706986,null),vY=new $APP.q(null,"p?","p?",468369826,null),r2a=new $APP.q(null,"prepend-space",
"prepend-space",-763094232,null),s2a=new $APP.q(null,"sexpr-able?","sexpr-able?",1084129006,null),t2a=new $APP.q("rewrite-clj.node","sexpr","rewrite-clj.node/sexpr",-1868503488,null),u2a=new $APP.q(null,"whitespace-or-comment?","whitespace-or-comment?",-304852449,null),v2a=new $APP.q(null,"map-context-clear","map-context-clear",1382056931,null),w2a=new $APP.q("rewrite-clj.zip","replace","rewrite-clj.zip/replace",1443466110,null),x2a=new $APP.q(null,"reapply-context","reapply-context",292435679,null),
y2a=new $APP.q(null,"sexprs","sexprs",2063442121,null),z2a=new $APP.q(null,"insert-child*","insert-child*",-1445680733,null),A2a=new $APP.q(null,"integer-node","integer-node",1616855975,null),B2a=new $APP.q("rewrite-clj.zip","vector?","rewrite-clj.zip/vector?",-797709764,null),C2a=new $APP.q("rewrite-clj.zip","skip-whitespace-left","rewrite-clj.zip/skip-whitespace-left",-814067092,null),D2a=new $APP.q("rewrite-clj.node","line-separated","rewrite-clj.node/line-separated",-1264782417,null),E2a=new $APP.q("rewrite-clj.zip",
"next","rewrite-clj.zip/next",1722366319,null),F2a=new $APP.q(null,"vector-node","vector-node",774154149,null),G2a=new $APP.q("rewrite-clj.node","whitespace-node","rewrite-clj.node/whitespace-node",-166869198,null),H2a=new $APP.q(null,"length","length",-2065447907,null),I2a=new $APP.q(null,"edn*","edn*",425368850,null),J2a=new $APP.q(null,"comma?","comma?",-1122266806,null),K2a=new $APP.q("rewrite-clj.zip","position","rewrite-clj.zip/position",-1929159672,null),L2a=new $APP.q("rewrite-clj.paredit",
"split","rewrite-clj.paredit/split",-4507846,null),M2a=new $APP.q("rewrite-clj.node","spaces","rewrite-clj.node/spaces",388153482,null),N2a=new $APP.q(null,"prepend-newline","prepend-newline",-1324335219,null),O2a=new $APP.q("rewrite-clj.zip","postwalk","rewrite-clj.zip/postwalk",-444110539,null),P2a=new $APP.q(null,"printable-only?","printable-only?",361613452,null),Q2a=new $APP.q("rewrite-clj.paredit","slurp-forward-fully","rewrite-clj.paredit/slurp-forward-fully",1134635179,null),R2a=new $APP.q(null,
"leader-length","leader-length",-1604296434,null),wY=new $APP.q(null,"macro-node","macro-node",-1359692574,null),PV=new $APP.F(null,"comment","comment",532206069),O_a=new $APP.F(null,"track-position?","track-position?",1860535489),S2a=new $APP.q("rewrite-clj.node","quote-node","rewrite-clj.node/quote-node",-1968910419,null),tX=new $APP.F(null,"unmatched","unmatched",1628955483),T2a=new $APP.q(null,"lines","lines",940365746,null),U2a=new $APP.q("rewrite-clj.zip","leftmost","rewrite-clj.zip/leftmost",
-690099638,null),V2a=new $APP.q("rewrite-clj.zip","of-node","rewrite-clj.zip/of-node",204017766,null),W2a=new $APP.F(null,"reader","reader",169660853),X2a=new $APP.q("rewrite-clj.node","leader-length","rewrite-clj.node/leader-length",3089406,null),Y2a=new $APP.q("rewrite-clj.node","replace-children","rewrite-clj.node/replace-children",1388173082,null),Z2a=new $APP.q("rewrite-clj.zip","down","rewrite-clj.zip/down",-1820797594,null),$2a=new $APP.q("rewrite-clj.zip","next*","rewrite-clj.zip/next*",1632834063,
null),a3a=new $APP.q("rewrite-clj.zip","string","rewrite-clj.zip/string",-954853658,null),b3a=new $APP.q(null,"raise","raise",1824672588,null),c3a=new $APP.q("rewrite-clj.zip","find-next-depth-first","rewrite-clj.zip/find-next-depth-first",1920332965,null),d3a=new $APP.q(null,"linebreak?","linebreak?",1689546852,null),e3a=new $APP.q(null,"whitespace?","whitespace?",445930913,null),xY=new $APP.F(null,"reader-macro","reader-macro",750056422),f3a=new $APP.q(null,"find-token","find-token",389278535,null),
g3a=new $APP.q("rewrite-clj.zip","map?","rewrite-clj.zip/map?",2042249157,null),h3a=new $APP.q(null,"slurp-forward","slurp-forward",774246961,null),i3a=new $APP.q("rewrite-clj.zip","find-next-value","rewrite-clj.zip/find-next-value",1543586734,null),j3a=new $APP.q("rewrite-clj.zip","skip","rewrite-clj.zip/skip",1632720309,null),k3a=new $APP.q(null,"uneval-node","uneval-node",-1046551330,null),l3a=new $APP.q("rewrite-clj.zip","of-node*","rewrite-clj.zip/of-node*",1727101465,null),m3a=new $APP.q(null,
"replace*","replace*",1688093522,null),n3a=new $APP.q(null,"sexpr","sexpr",857187440,null),o3a=new $APP.q(null,"slurp-forward-fully","slurp-forward-fully",-2112868340,null),p3a=new $APP.q(null,"of-node*","of-node*",43324916,null),q3a=new $APP.q("rewrite-clj.node","sexprs","rewrite-clj.node/sexprs",-628825447,null),r3a=new $APP.q("rewrite-clj.node","comma-separated","rewrite-clj.node/comma-separated",2132322232,null),s3a=new $APP.q("rewrite-clj.node","meta-node","rewrite-clj.node/meta-node",756025115,
null),t3a=new $APP.q(null,"split-at-pos","split-at-pos",-1301012891,null),u3a=new $APP.q("rewrite-clj.node","keyword-node","rewrite-clj.node/keyword-node",825307466,null),v3a=new $APP.q(null,"rewrite-clj.parser.core","rewrite-clj.parser.core",1408837387,null),w3a=new $APP.q(null,"spaces","spaces",2006516090,null),x3a=new $APP.q("rewrite-clj.zip","value","rewrite-clj.zip/value",-1741057211,null),y3a=new $APP.q("rewrite-clj.paredit","move-to-prev","rewrite-clj.paredit/move-to-prev",-1640412638,null),
z3a=new $APP.q("rewrite-clj.zip","edit-node","rewrite-clj.zip/edit-node",988475014,null),A3a=new $APP.q("rewrite-clj.zip","insert-child*","rewrite-clj.zip/insert-child*",1437800496,null),B3a=new $APP.q("rewrite-clj.zip","get","rewrite-clj.zip/get",-1560328071,null),C3a=new $APP.q("rewrite-clj.node","unquote-splicing-node","rewrite-clj.node/unquote-splicing-node",1455983140,null),D3a=new $APP.q("rewrite-clj.node","comma-node","rewrite-clj.node/comma-node",-1514795262,null),E3a=new $APP.q("rewrite-clj.zip",
"print","rewrite-clj.zip/print",-1956784318,null),F3a=new $APP.q(null,"subzip","subzip",1750940594,null),G3a=new $APP.q("rewrite-clj.zip","replace*","rewrite-clj.zip/replace*",1089663463,null),H3a=new $APP.q("rewrite-clj.zip","right*","rewrite-clj.zip/right*",532454960,null),I3a=new $APP.q("rewrite-clj.node","set-node","rewrite-clj.node/set-node",405098506,null),J3a=new $APP.q("rewrite-clj.zip","edit*","rewrite-clj.zip/edit*",-780485119,null),K3a=new $APP.q(null,"inner?","inner?",1594251881,null),
L3a=new $APP.q(null,"edit*","edit*",-178894740,null),M3a=new $APP.q(null,"skip-whitespace","skip-whitespace",-1365795337,null),N3a=new $APP.q(null,"append-child*","append-child*",2121971550,null),O3a=new $APP.q(null,"next*","next*",-1921539974,null),P3a=new $APP.q(null,"map-keys","map-keys",-304742863,null),Q3a=new $APP.q(null,"map-node","map-node",-831069803,null),R3a=new $APP.q("rewrite-clj.node","length","rewrite-clj.node/length",606636621,null),S3a=new $APP.q(null,"insert-newline-right","insert-newline-right",
-560836101,null),T3a=new $APP.q("rewrite-clj.zip","find-tag-by-pos","rewrite-clj.zip/find-tag-by-pos",1631039971,null),U3a=new $APP.q("rewrite-clj.zip","up*","rewrite-clj.zip/up*",-1747452412,null),V3a=new $APP.q("rewrite-clj.paredit","barf-forward","rewrite-clj.paredit/barf-forward",1839833565,null),W3a=new $APP.q(null,"map-qualifier","map-qualifier",392413807,null),X3a=new $APP.q(null,"append-space","append-space",187959182,null),Y3a=new $APP.q("rewrite-clj.zip","remove","rewrite-clj.zip/remove",
2111284378,null),yY=new $APP.q(null,"form-node","form-node",413863104,null),Z3a=new $APP.q("rewrite-clj.zip","map","rewrite-clj.zip/map",1605266839,null),$3a=new $APP.q("rewrite-clj.zip","of-string*","rewrite-clj.zip/of-string*",1979208148,null),a4a=new $APP.q(null,"kill-at-pos","kill-at-pos",1361422606,null),b4a=new $APP.q(null,"map-qualifier-node","map-qualifier-node",-1850465651,null),c4a=new $APP.q("rewrite-clj.paredit","slurp-forward","rewrite-clj.paredit/slurp-forward",1861712338,null),d4a=
new $APP.q(null,"print-root","print-root",-1389597355,null),e4a=new $APP.q("rewrite-clj.zip","leftmost*","rewrite-clj.zip/leftmost*",1780342707,null),f4a=new $APP.q(null,"skip","skip",-2051720378,null),g4a=new $APP.q(null,"reader-macro-node","reader-macro-node",1742424216,null),h4a=new $APP.q("rewrite-clj.node","reader-macro-node","rewrite-clj.node/reader-macro-node",-947775832,null),i4a=new $APP.q("rewrite-clj.zip","end?","rewrite-clj.zip/end?",1758263385,null),j4a=new $APP.q(null,"position-span",
"position-span",803718098,null),k4a=new $APP.q("rewrite-clj.node","string-node","rewrite-clj.node/string-node",363731418,null),l4a=new $APP.q("rewrite-clj.zip","insert-space-left","rewrite-clj.zip/insert-space-left",772006995,null),m4a=new $APP.q("rewrite-clj.parser","parse-string","rewrite-clj.parser/parse-string",207237463,null),n4a=new $APP.q("rewrite-clj.zip","whitespace-or-comment?","rewrite-clj.zip/whitespace-or-comment?",-1309622142,null),o4a=new $APP.q("rewrite-clj.zip","down*","rewrite-clj.zip/down*",
338184326,null),p4a=new $APP.q("rewrite-clj.paredit","splice","rewrite-clj.paredit/splice",-1125426783,null),q4a=new $APP.q(null,"down*","down*",813038101,null),zY=new $APP.F(null,"deprecated","deprecated",1498275348),r4a=new $APP.q("rewrite-clj.zip","leftmost?","rewrite-clj.zip/leftmost?",599810381,null),s4a=new $APP.q("rewrite-clj.zip","remove*","rewrite-clj.zip/remove*",507485515,null),t4a=new $APP.q("rewrite-clj.zip","prepend-space","rewrite-clj.zip/prepend-space",920685767,null),u4a=new $APP.q(null,
"subedit-node","subedit-node",-1706476743,null),rW=new $APP.F(null,"newline","newline",1790071323),v4a=new $APP.q("rewrite-clj.paredit","barf-backward","rewrite-clj.paredit/barf-backward",-1203715873,null),w4a=new $APP.q("rewrite-clj.node","eval-node","rewrite-clj.node/eval-node",-1327927851,null),x4a=new $APP.q("rewrite-clj.zip","append-newline","rewrite-clj.zip/append-newline",-1234353468,null),y4a=new $APP.q("rewrite-clj.zip","insert-newline-right","rewrite-clj.zip/insert-newline-right",985057102,
null),z4a=new $APP.q("rewrite-clj.node","sexpr-able?","rewrite-clj.node/sexpr-able?",-521690818,null),A4a=new $APP.q("rewrite-clj.node","linebreak?","rewrite-clj.node/linebreak?",125645364,null),B4a=new $APP.q("rewrite-clj.node","comma?","rewrite-clj.node/comma?",-590293222,null),C4a=new $APP.q(null,"eval-node","eval-node",277916581,null),nZa=new $APP.F(null,"next-col","next-col",601697889),D4a=new $APP.q("rewrite-clj.paredit","kill-one-at-pos","rewrite-clj.paredit/kill-one-at-pos",-1103758704,null),
E4a=new $APP.q(null,"leftmost*","leftmost*",301576526,null),F4a=new $APP.q(null,"leftmost?","leftmost?",-31657032,null),G4a=new $APP.q("rewrite-clj.zip","node","rewrite-clj.zip/node",1615815398,null),H4a=new $APP.q("rewrite-clj.zip","edit","rewrite-clj.zip/edit",604548110,null),I4a=new $APP.q("rewrite-clj.zip","append-space","rewrite-clj.zip/append-space",-284585703,null),J4a=new $APP.q(null,"insert-space-right","insert-space-right",-1929502473,null),K4a=new $APP.q(null,"append-newline","append-newline",
-363932885,null),L4a=new $APP.q("rewrite-clj.zip","edn*","rewrite-clj.zip/edn*",-39384153,null),M4a=new $APP.q(null,"regex-node","regex-node",-531443697,null),N4a=new $APP.q("rewrite-clj.node","keyword-node?","rewrite-clj.node/keyword-node?",1766497038,null),O4a=new $APP.q(null,"find-value","find-value",680029008,null),P4a=new $APP.q("rewrite-clj.zip","linebreak?","rewrite-clj.zip/linebreak?",1083736563,null),AY=new $APP.F(null,"string-value","string-value",1109600561),Q4a=new $APP.q("rewrite-clj.zip",
"skip-whitespace","rewrite-clj.zip/skip-whitespace",-890237084,null),R4a=new $APP.q("rewrite-clj.node","fn-node","rewrite-clj.node/fn-node",-518844813,null),BY=new $APP.F(null,"format-string","format-string",832187437),S4a=new $APP.q("rewrite-clj.zip","assoc","rewrite-clj.zip/assoc",1200833553,null),T4a=new $APP.q(null,"raw-meta-node","raw-meta-node",-1505262150,null),sW=new $APP.F(null,"whitespace","whitespace",-1340035483),U4a=new $APP.q(null,"comma-node","comma-node",-977187534,null),V4a=new $APP.q(null,
"namespaced-map-node","namespaced-map-node",-1051606832,null),W4a=new $APP.q("rewrite-clj.zip","find-next-tag","rewrite-clj.zip/find-next-tag",-480925695,null),X4a=new $APP.q(null,"unquote-splicing-node","unquote-splicing-node",-160347020,null),Y4a=new $APP.q(null,"kill-one-at-pos","kill-one-at-pos",1910805101,null),Z4a=new $APP.q("rewrite-clj.zip","edn","rewrite-clj.zip/edn",-1803969361,null),$4a=new $APP.q("rewrite-clj.zip","set?","rewrite-clj.zip/set?",228985181,null),a5a=new $APP.q("rewrite-clj.zip",
"insert-space-right","rewrite-clj.zip/insert-space-right",-1601071510,null),b5a=new $APP.q("rewrite-clj.zip","suffix","rewrite-clj.zip/suffix",1539982045,null),c5a=new $APP.q(null,"node?","node?",-946740002,null),CY=new $APP.q(null,"metadata","metadata",-855134172,null),d5a=new $APP.q(null,"whitespace-nodes","whitespace-nodes",1016004235,null),e5a=new $APP.F(null,"unknown","unknown",-935977881),f5a=new $APP.q("rewrite-clj.zip","seq?","rewrite-clj.zip/seq?",-271899244,null),g5a=new $APP.q(null,"namespaced-map?",
"namespaced-map?",848389202,null),h5a=new $APP.q("rewrite-clj.zip","reapply-context","rewrite-clj.zip/reapply-context",889952332,null),DY=new $APP.q(null,"string-value","string-value",-1544835208,null),i5a=new $APP.q("rewrite-clj.zip","namespaced-map?","rewrite-clj.zip/namespaced-map?",-290073881,null),j5a=new $APP.q("rewrite-clj.zip","map-vals","rewrite-clj.zip/map-vals",-346352849,null),k5a=new $APP.q("rewrite-clj.node","list-node","rewrite-clj.node/list-node",-1806322433,null),l5a=new $APP.q("rewrite-clj.node",
"child-sexprs","rewrite-clj.node/child-sexprs",-522963056,null),DZa=new $APP.q("cljs.tools.reader.edn","read-token","cljs.tools.reader.edn/read-token",-1809266548,null),m5a=new $APP.q(null,"replace-children","replace-children",839291210,null),n5a=new $APP.q("rewrite-clj.zip","sexpr-able?","rewrite-clj.zip/sexpr-able?",-1530785415,null),o5a=new $APP.q("rewrite-clj.paredit","split-at-pos","rewrite-clj.paredit/split-at-pos",1925522950,null),p5a=new $APP.q(null,"splice","splice",2090119692,null),q5a=
new $APP.q(null,"of-node","of-node",-535985419,null),r5a=new $APP.q(null,"quote-node","quote-node",-353398275,null),s5a=new $APP.q("rewrite-clj.node","string","rewrite-clj.node/string",-1957936859,null),t5a=new $APP.q("rewrite-clj.node","inner?","rewrite-clj.node/inner?",-1082188743,null),u5a=new $APP.q(null,"fn-node","fn-node",1121734723,null),v5a=new $APP.q("rewrite-clj.zip","find-last-by-pos","rewrite-clj.zip/find-last-by-pos",-555125432,null),EY=new $APP.F(null,"newlines","newlines",-1185451518),
w5a=new $APP.q("rewrite-clj.node","newlines","rewrite-clj.node/newlines",2059451929,null),x5a=new $APP.q("rewrite-clj.zip","-\x3eroot-string","rewrite-clj.zip/-\x3eroot-string",-614440418,null),y5a=new $APP.q("rewrite-clj.zip","sexpr","rewrite-clj.zip/sexpr",-855951867,null),z5a=new $APP.q("rewrite-clj.node","map-context-clear","rewrite-clj.node/map-context-clear",-845594349,null),A5a=new $APP.q(null,"comma-separated","comma-separated",-549329464,null),E_a=new $APP.F(null,"delimiter","delimiter",
-1766618E3),B5a=new $APP.q("rewrite-clj.paredit","kill-at-pos","rewrite-clj.paredit/kill-at-pos",-1634565965,null),UV=new $APP.F(null,"auto-resolved?","auto-resolved?",-1944476351),FY=new $APP.F(null,"sexpr-fn","sexpr-fn",-1214941414),F_a=new $APP.F(null,"sharp","sharp",-83698408),C5a=new $APP.q("rewrite-clj.zip","insert-right*","rewrite-clj.zip/insert-right*",-1993433014,null),D5a=new $APP.q("rewrite-clj.zip","append-child","rewrite-clj.zip/append-child",2115158186,null),E5a=new $APP.q(null,"wrap-around",
"wrap-around",331492491,null),GY=new $APP.F(null,"sexpr-count","sexpr-count",890534957),F5a=new $APP.q(null,"splice-killing-forward","splice-killing-forward",-220957927,null),G5a=new $APP.q("rewrite-clj.zip","find-next","rewrite-clj.zip/find-next",-157197051,null),H5a=new $APP.q("rewrite-clj.zip","prepend-newline","rewrite-clj.zip/prepend-newline",-584266208,null),I5a=new $APP.q(null,"newlines","newlines",455080009,null),J5a=new $APP.q(null,"barf-forward","barf-forward",-1375823432,null),K5a=new $APP.q(null,
"line-separated","line-separated",1424732543,null),HY=new $APP.F(null,"map-qualifier","map-qualifier",-1248117720),fX=new $APP.F(null,"end?","end?",-1423391609),L5a=new $APP.q(null,"edn","edn",-1336594884,null),M5a=new $APP.q("rewrite-clj.node","integer-node","rewrite-clj.node/integer-node",396759,null),N5a=new $APP.q("rewrite-clj.zip","remove-preserve-newline","rewrite-clj.zip/remove-preserve-newline",1001000374,null),O5a=new $APP.q("rewrite-clj.zip","rightmost","rewrite-clj.zip/rightmost",-1381547086,
null),P5a=new $APP.q(null,"whitespace-node","whitespace-node",-1765635742,null),Q5a=new $APP.q(null,"insert-space-left","insert-space-left",309270208,null),FZa=new $APP.q(null,"validate-leading?","validate-leading?",1185429770,null),R5a=new $APP.q("rewrite-clj.zip","whitespace?","rewrite-clj.zip/whitespace?",1992871476,null),S5a=new $APP.q(null,"comment-node","comment-node",-2031963654,null),T5a=new $APP.q("rewrite-clj.node","deref-node","rewrite-clj.node/deref-node",-653848298,null),U5a=new $APP.q("rewrite-clj.parser",
"parse-string-all","rewrite-clj.parser/parse-string-all",-427971892,null),V5a=new $APP.q("rewrite-clj.paredit","slurp-backward-fully","rewrite-clj.paredit/slurp-backward-fully",609257453,null),W5a=new $APP.q("rewrite-clj.paredit","wrap-fully-forward-slurp","rewrite-clj.paredit/wrap-fully-forward-slurp",1172546728,null),X5a=new $APP.q(null,"find-next-value","find-next-value",6148379,null),IY=new $APP.F(null,"children","children",-940561982),Y5a=new $APP.F(null,"multi-line","multi-line",240640676),
Z5a=new $APP.q(null,"var-node","var-node",-60772539,null),mZa=new $APP.F(null,"next-row","next-row",-408963777),$5a=new $APP.q("rewrite-clj.zip","prewalk","rewrite-clj.zip/prewalk",-1411096635,null),a6a=new $APP.q("rewrite-clj.zip","length","rewrite-clj.zip/length",-133212752,null),b6a=new $APP.q(null,"symbol-node?","symbol-node?",643702364,null),c6a=new $APP.q("rewrite-clj.zip","find-tag","rewrite-clj.zip/find-tag",1641274085,null),d6a=new $APP.q("rewrite-clj.node","forms-node","rewrite-clj.node/forms-node",
-1396481030,null),e6a=new $APP.q("rewrite-clj.zip","prev*","rewrite-clj.zip/prev*",-1777935446,null),f6a=new $APP.q("rewrite-clj.zip","find-value","rewrite-clj.zip/find-value",77962725,null),g6a=new $APP.q(null,"remove-preserve-newline","remove-preserve-newline",1549188633,null),h6a=new $APP.q(null,"wrap-fully-forward-slurp","wrap-fully-forward-slurp",-2058318763,null),i6a=new $APP.q(null,"insert-newline-left","insert-newline-left",1873797795,null),j6a=new $APP.q("rewrite-clj.zip","find-depth-first",
"rewrite-clj.zip/find-depth-first",-1993009766,null),k6a=new $APP.q("rewrite-clj.zip","rightmost*","rewrite-clj.zip/rightmost*",-215323559,null),l6a=new $APP.q("rewrite-clj.zip","prefix","rewrite-clj.zip/prefix",1980467147,null),m6a=new $APP.q("rewrite-clj.zip","rightmost?","rewrite-clj.zip/rightmost?",-635457025,null),n6a=new $APP.q("rewrite-clj.zip","subzip","rewrite-clj.zip/subzip",1417324871,null),o6a=new $APP.q(null,"skip-whitespace-left","skip-whitespace-left",-346096397,null),p6a=new $APP.q(null,
"up*","up*",1811123313,null),q6a=new $APP.q(null,"right*","right*",2052648867,null),r6a=new $APP.q("rewrite-clj.paredit","raise","rewrite-clj.paredit/raise",-1401867345,null),s6a=new $APP.q("rewrite-clj.node","printable-only?","rewrite-clj.node/printable-only?",-171537668,null),t6a=new $APP.q(null,"-\x3estring","-\x3estring",-2061296812,null),u6a=new $APP.q(null,"map-context-apply","map-context-apply",895274550,null),v6a=new $APP.q("rewrite-clj.zip","find","rewrite-clj.zip/find",-1821272236,null),
w6a=new $APP.q(null,"find-tag-by-pos","find-tag-by-pos",-1109778610,null),x6a=new $APP.q("rewrite-clj.zip","left*","rewrite-clj.zip/left*",1520819843,null),y6a=new $APP.q("rewrite-clj.node","children","rewrite-clj.node/children",-1989020071,null),z6a=new $APP.q(null,"syntax-quote-node","syntax-quote-node",101470128,null),A6a=new $APP.q(null,"barf-backward","barf-backward",2075385722,null),B6a=new $APP.q(null,"insert-right*","insert-right*",1858211517,null),C6a=new $APP.q(null,"meta-node","meta-node",
-850475573,null),V_a=new $APP.F("rewrite-clj.zip.move","end?","rewrite-clj.zip.move/end?",891526475),D6a=new $APP.q(null,"newline-node","newline-node",-975655470,null),E6a=new $APP.q(null,"child-sexprs","child-sexprs",1076032576,null),F6a=new $APP.q(null,"comment?","comment?",28866040,null),G6a=new $APP.q(null,"token-node","token-node",773308959,null),H6a=new $APP.q(null,"move-to-prev","move-to-prev",1584288385,null),I6a=new $APP.q("rewrite-clj.zip","root-string","rewrite-clj.zip/root-string",-1785710523,
null),J6a=new $APP.F(null,"meta*","meta*",-949431606),K6a=new $APP.q(null,"of-string","of-string",2046441373,null),L6a=new $APP.q("rewrite-clj.zip","tag","rewrite-clj.zip/tag",1218687571,null),lZa=new $APP.q(null,"?_current-ns_?","?_current-ns_?",1667571229,null),M6a=new $APP.q("rewrite-clj.node","regex-node","rewrite-clj.node/regex-node",1334514239,null),N6a=new $APP.q("rewrite-clj.zip","right","rewrite-clj.zip/right",1655332499,null),O6a=new $APP.q("rewrite-clj.node","unquote-node","rewrite-clj.node/unquote-node",
1436589997,null),P6a=new $APP.q("rewrite-clj.zip","-\x3estring","rewrite-clj.zip/-\x3estring",-1580209927,null),Q6a=new $APP.q("rewrite-clj.zip","list?","rewrite-clj.zip/list?",-1550467026,null),R6a=new $APP.q("rewrite-clj.zip","position-span","rewrite-clj.zip/position-span",-885312921,null);var MV=function MV(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return MV.l(arguments[0],1<c.length?new $APP.Ed(c.slice(1),0,null):null)};MV.l=function(a,b){return $APP.qg.j($APP.qV,a,b)};MV.B=1;MV.G=function(a){var b=$APP.v(a);a=$APP.w(a);return this.l(b,a)};tV._=function(){return e5a};uV._=function(){return e5a};vV._=function(){return!1};wV._=function(a){return a};xV._=function(a){return $APP.be(yV(a))};yV._=function(a){return $APP.yj.l($APP.z([a]))};var zV=function zV(a){switch(arguments.length){case 1:return zV.g(arguments[0]);case 2:return zV.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};zV.g=function(a){return zV.h(a,$APP.Xf)};zV.h=function(a,b){return wV(a,b)};zV.B=2;DV._=function(){return!1};
EV._=function(){throw $APP.Yl.h("unsupported operation",$APP.Xf);};FV._=function(){throw $APP.Yl.h("unsupported operation",$APP.Xf);};GV._=function(){throw $APP.Yl.h("unsupported operation",$APP.Xf);};$APP.g=OV.prototype;$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "prefix":return this.prefix;case "s":return this.Da;default:return $APP.C.j(this.o,b,c)}};$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.comment.CommentNode{",", ","}",c,$APP.K.h(new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[$APP.yI,this.prefix],null),new $APP.H(null,2,5,$APP.I,[$APP.Sm,this.Da],null)],null),this.o))};$APP.g.fa=function(){return new $APP.wh(this,2,new $APP.H(null,2,5,$APP.I,[$APP.yI,$APP.Sm],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};$APP.g.U=function(){return this.A};
$APP.g.ba=function(){return new OV(this.prefix,this.Da,this.A,this.o,this.C)};$APP.g.aa=function(){return 2+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=495469178^$APP.Nd(this)};$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.prefix,b.prefix)&&$APP.x.h(this.Da,b.Da)&&$APP.x.h(this.o,b.o)};$APP.g.Cc=function(){return PV};$APP.g.zc=function(){return PV};$APP.g.Ac=function(){return!0};
$APP.g.Bc=function(){throw $APP.Yl.h("unsupported operation",$APP.Xf);};$APP.g.yc=function(){return $APP.be(this.prefix)+$APP.be(this.Da)};$APP.g.Ma=function(){return[$APP.m.g(this.prefix),$APP.m.g(this.Da)].join("")};$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,2,[$APP.Sm,null,$APP.yI,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new OV(this.prefix,this.Da,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};
$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "prefix":case "s":return!0;default:return $APP.Se(this.o,b)}};$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h($APP.yI,b):$APP.Af.call(null,$APP.yI,b))?new OV(c,this.Da,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h($APP.Sm,b):$APP.Af.call(null,$APP.Sm,b))?new OV(this.prefix,c,this.A,this.o,null):new OV(this.prefix,this.Da,this.A,$APP.ui.j(this.o,b,c),null)};
$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,2,5,$APP.I,[new $APP.Te($APP.yI,this.prefix,null),new $APP.Te($APP.Sm,this.Da,null)],null),this.o))};$APP.g.W=function(a,b){return new OV(this.prefix,this.Da,b,this.o,this.C)};$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};NV(OV);$APP.g=RV.prototype;$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "children":return this.children;default:return $APP.C.j(this.o,b,c)}};$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.fn.FnNode{",", ","}",c,$APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[IY,this.children],null)],null),this.o))};$APP.g.fa=function(){return new $APP.wh(this,1,new $APP.H(null,1,5,$APP.I,[IY],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ba=function(){return new RV(this.children,this.A,this.o,this.C)};
$APP.g.aa=function(){return 1+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=-1740346885^$APP.Nd(this)};$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.children,b.children)&&$APP.x.h(this.o,b.o)};$APP.g.Cc=function(){return $APP.Hn};$APP.g.zc=function(){return $APP.Hn};$APP.g.Ac=function(){return!1};$APP.g.Bc=function(a,b){return sZa(AV(this.children,b))};$APP.g.yc=function(){return 3+BV(this.children)};
$APP.g.Ma=function(){return["#(",$APP.m.g(CV(this.children)),")"].join("")};$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,1,[IY,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new RV(this.children,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};$APP.g.rf=function(){return!0};$APP.g.qf=function(){return this.children};$APP.g.Ze=function(a,b){return $APP.ui.j(this,IY,b)};$APP.g.Ye=function(){return 2};
$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "children":return!0;default:return $APP.Se(this.o,b)}};$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h(IY,b):$APP.Af.call(null,IY,b))?new RV(c,this.A,this.o,null):new RV(this.children,this.A,$APP.ui.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.Te(IY,this.children,null)],null),this.o))};$APP.g.W=function(a,b){return new RV(this.children,b,this.o,this.C)};
$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};NV(RV);$APP.g=SV.prototype;$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "children":return this.children;default:return $APP.C.j(this.o,b,c)}};$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.forms.FormsNode{",", ","}",c,$APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[IY,this.children],null)],null),this.o))};$APP.g.fa=function(){return new $APP.wh(this,1,new $APP.H(null,1,5,$APP.I,[IY],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ba=function(){return new SV(this.children,this.A,this.o,this.C)};
$APP.g.aa=function(){return 1+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=116885345^$APP.Nd(this)};$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.children,b.children)&&$APP.x.h(this.o,b.o)};$APP.g.Cc=function(){return $APP.rw};$APP.g.zc=function(){return $APP.rw};$APP.g.Ac=function(){return!1};$APP.g.Bc=function(a,b){a=AV(this.children,b);return $APP.w(a)?$APP.Es.h($APP.qk,a):$APP.v(a)};$APP.g.yc=function(){return BV(this.children)};
$APP.g.Ma=function(){return CV(this.children)};$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,1,[IY,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new SV(this.children,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};$APP.g.rf=function(){return!0};$APP.g.qf=function(){return this.children};$APP.g.Ze=function(a,b){return $APP.ui.j(this,IY,b)};$APP.g.Ye=function(){return 0};
$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "children":return!0;default:return $APP.Se(this.o,b)}};$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h(IY,b):$APP.Af.call(null,IY,b))?new SV(c,this.A,this.o,null):new SV(this.children,this.A,$APP.ui.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.Te(IY,this.children,null)],null),this.o))};$APP.g.W=function(a,b){return new SV(this.children,b,this.o,this.C)};
$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};NV(SV);$APP.g=TV.prototype;$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "value":return this.value;case "base":return this.Uc;default:return $APP.C.j(this.o,b,c)}};$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.integer.IntNode{",", ","}",c,$APP.K.h(new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[$APP.kK,this.value],null),new $APP.H(null,2,5,$APP.I,[$APP.$G,this.Uc],null)],null),this.o))};$APP.g.fa=function(){return new $APP.wh(this,2,new $APP.H(null,2,5,$APP.I,[$APP.kK,$APP.$G],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};$APP.g.U=function(){return this.A};
$APP.g.ba=function(){return new TV(this.value,this.Uc,this.A,this.o,this.C)};$APP.g.aa=function(){return 2+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=-2088146928^$APP.Nd(this)};$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.value,b.value)&&$APP.x.h(this.Uc,b.Uc)&&$APP.x.h(this.o,b.o)};$APP.g.Cc=function(){return $APP.rV};$APP.g.zc=function(){return l1a};$APP.g.Ac=function(){return!1};$APP.g.Bc=function(){return this.value};
$APP.g.yc=function(){return $APP.be(this.Ma(null))};$APP.g.Ma=function(){var a=this,b=0>a.value?"-":null,c=iZa(function(){var e=a.value;return 0>a.value?-e:e}(),a.Uc),d=function(){switch($APP.jf(a.Uc)){case 8:return"0";case 10:return"";case 16:return"0x";default:return[$APP.m.g(a.Uc),"r"].join("")}}();return[b,$APP.m.g(d),$APP.m.g(c)].join("")};
$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,2,[$APP.kK,null,$APP.$G,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new TV(this.value,this.Uc,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "value":case "base":return!0;default:return $APP.Se(this.o,b)}};
$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h($APP.kK,b):$APP.Af.call(null,$APP.kK,b))?new TV(c,this.Uc,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h($APP.$G,b):$APP.Af.call(null,$APP.$G,b))?new TV(this.value,c,this.A,this.o,null):new TV(this.value,this.Uc,this.A,$APP.ui.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,2,5,$APP.I,[new $APP.Te($APP.kK,this.value,null),new $APP.Te($APP.$G,this.Uc,null)],null),this.o))};
$APP.g.W=function(a,b){return new TV(this.value,this.Uc,b,this.o,this.C)};$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};NV(TV);$APP.g=VV.prototype;$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "k":return this.k;case "auto-resolved?":return this.Jb;case "map-qualifier":return this.ic;default:return $APP.C.j(this.o,b,c)}};$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};$APP.g.wj=$APP.xd;
$APP.g.xj=function(a,b){return $APP.ui.j(this,HY,b)};$APP.g.yj=function(){return $APP.ui.j(this,HY,null)};$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.keyword.KeywordNode{",", ","}",c,$APP.K.h(new $APP.H(null,3,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[$APP.wL,this.k],null),new $APP.H(null,2,5,$APP.I,[UV,this.Jb],null),new $APP.H(null,2,5,$APP.I,[HY,this.ic],null)],null),this.o))};
$APP.g.fa=function(){return new $APP.wh(this,3,new $APP.H(null,3,5,$APP.I,[$APP.wL,UV,HY],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ba=function(){return new VV(this.k,this.Jb,this.ic,this.A,this.o,this.C)};$APP.g.aa=function(){return 3+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=-1681863292^$APP.Nd(this)};
$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.k,b.k)&&$APP.x.h(this.Jb,b.Jb)&&$APP.x.h(this.ic,b.ic)&&$APP.x.h(this.o,b.o)};$APP.g.Cc=function(){return $APP.rV};$APP.g.zc=function(){return $APP.Dm};$APP.g.Ac=function(){return!1};
$APP.g.Bc=function(a,b){a=this.k;var c=this.Jb,d=this.ic;b=$APP.Yf(b);b=$APP.C.h(b,$APP.Lo);d=tZa(d,uZa(a,c));c=$APP.fj.h;$APP.k(UV.g(d))?(d=$APP.yI.g(d),d=null==d?null:$APP.kj.g(d),d=$APP.k(d)?d:$APP.io,b=$APP.k(b)?b:HV,b=b.g?b.g(d):b.call(null,d)):b=$APP.yI.g(d);b=null==b?null:$APP.m.g(b);return a=c.call($APP.fj,b,$APP.Fi(a))};$APP.g.yc=function(){var a=$APP.Fi(this.k).length+1;if($APP.k(this.Jb))return a+1;var b=$APP.Bf(this.k);return $APP.k(b)?1+a+b.length:a};
$APP.g.Ma=function(){return[$APP.k(this.Jb)?":":null,$APP.yj.l($APP.z([this.k]))].join("")};$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,3,[UV,null,HY,null,$APP.wL,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new VV(this.k,this.Jb,this.ic,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "k":case "auto-resolved?":case "map-qualifier":return!0;default:return $APP.Se(this.o,b)}};
$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h($APP.wL,b):$APP.Af.call(null,$APP.wL,b))?new VV(c,this.Jb,this.ic,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h(UV,b):$APP.Af.call(null,UV,b))?new VV(this.k,c,this.ic,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h(HY,b):$APP.Af.call(null,HY,b))?new VV(this.k,this.Jb,c,this.A,this.o,null):new VV(this.k,this.Jb,this.ic,this.A,$APP.ui.j(this.o,b,c),null)};
$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,3,5,$APP.I,[new $APP.Te($APP.wL,this.k,null),new $APP.Te(UV,this.Jb,null),new $APP.Te(HY,this.ic,null)],null),this.o))};$APP.g.W=function(a,b){return new VV(this.k,this.Jb,this.ic,b,this.o,this.C)};$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};NV(VV);$APP.g=lW.prototype;$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "whitespace":return this.cf;default:return $APP.C.j(this.o,b,c)}};$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.whitespace.WhitespaceNode{",", ","}",c,$APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[sW,this.cf],null)],null),this.o))};$APP.g.fa=function(){return new $APP.wh(this,1,new $APP.H(null,1,5,$APP.I,[sW],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ba=function(){return new lW(this.cf,this.A,this.o,this.C)};
$APP.g.aa=function(){return 1+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=1595850179^$APP.Nd(this)};$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.cf,b.cf)&&$APP.x.h(this.o,b.o)};$APP.g.Cc=function(){return sW};$APP.g.zc=function(){return sW};$APP.g.Ac=function(){return!0};$APP.g.Bc=function(){return JZa()};$APP.g.yc=function(){return $APP.be(this.cf)};$APP.g.Ma=function(){return this.cf};
$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,1,[sW,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new lW(this.cf,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "whitespace":return!0;default:return $APP.Se(this.o,b)}};$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h(sW,b):$APP.Af.call(null,sW,b))?new lW(c,this.A,this.o,null):new lW(this.cf,this.A,$APP.ui.j(this.o,b,c),null)};
$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.Te(sW,this.cf,null)],null),this.o))};$APP.g.W=function(a,b){return new lW(this.cf,b,this.o,this.C)};$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};$APP.g=nW.prototype;$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};
$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "commas":return this.Me;default:return $APP.C.j(this.o,b,c)}};$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.whitespace.CommaNode{",", ","}",c,$APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[rY,this.Me],null)],null),this.o))};$APP.g.fa=function(){return new $APP.wh(this,1,new $APP.H(null,1,5,$APP.I,[rY],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ba=function(){return new nW(this.Me,this.A,this.o,this.C)};
$APP.g.aa=function(){return 1+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=-551131754^$APP.Nd(this)};$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.Me,b.Me)&&$APP.x.h(this.o,b.o)};$APP.g.Cc=function(){return qW};$APP.g.zc=function(){return qW};$APP.g.Ac=function(){return!0};$APP.g.Bc=function(){return JZa()};$APP.g.yc=function(){return $APP.be(this.Me)};$APP.g.Ma=function(){return this.Me};
$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,1,[rY,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new nW(this.Me,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "commas":return!0;default:return $APP.Se(this.o,b)}};$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h(rY,b):$APP.Af.call(null,rY,b))?new nW(c,this.A,this.o,null):new nW(this.Me,this.A,$APP.ui.j(this.o,b,c),null)};
$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.Te(rY,this.Me,null)],null),this.o))};$APP.g.W=function(a,b){return new nW(this.Me,b,this.o,this.C)};$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};$APP.g=oW.prototype;$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};
$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "newlines":return this.Se;default:return $APP.C.j(this.o,b,c)}};$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.whitespace.NewlineNode{",", ","}",c,$APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[EY,this.Se],null)],null),this.o))};$APP.g.fa=function(){return new $APP.wh(this,1,new $APP.H(null,1,5,$APP.I,[EY],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ba=function(){return new oW(this.Se,this.A,this.o,this.C)};
$APP.g.aa=function(){return 1+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=979711303^$APP.Nd(this)};$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.Se,b.Se)&&$APP.x.h(this.o,b.o)};$APP.g.Cc=function(){return rW};$APP.g.zc=function(){return rW};$APP.g.Ac=function(){return!0};$APP.g.Bc=function(){return JZa()};$APP.g.yc=function(){return $APP.be.call(null,this.Se)};$APP.g.Ma=function(){return this.Se};
$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,1,[EY,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new oW(this.Se,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "newlines":return!0;default:return $APP.Se(this.o,b)}};$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h(EY,b):$APP.Af.call(null,EY,b))?new oW(c,this.A,this.o,null):new oW(this.Se,this.A,$APP.ui.j(this.o,b,c),null)};
$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.Te(EY,this.Se,null)],null),this.o))};$APP.g.W=function(a,b){return new oW(this.Se,b,this.o,this.C)};$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};NV(lW);NV(nW);NV(oW);var MZa=LZa(", "),S6a=pW("\n"),l_a=mW(" ");$APP.g=xW.prototype;$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "tag":return this.tag;case "prefix":return this.prefix;case "children":return this.children;default:return $APP.C.j(this.o,b,c)}};$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.meta.MetaNode{",", ","}",c,$APP.K.h(new $APP.H(null,3,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[$APP.Em,this.tag],null),new $APP.H(null,2,5,$APP.I,[$APP.yI,this.prefix],null),new $APP.H(null,2,5,$APP.I,[IY,this.children],null)],null),this.o))};$APP.g.fa=function(){return new $APP.wh(this,3,new $APP.H(null,3,5,$APP.I,[$APP.Em,$APP.yI,IY],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};
$APP.g.U=function(){return this.A};$APP.g.ba=function(){return new xW(this.tag,this.prefix,this.children,this.A,this.o,this.C)};$APP.g.aa=function(){return 3+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=1501447658^$APP.Nd(this)};$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.tag,b.tag)&&$APP.x.h(this.prefix,b.prefix)&&$APP.x.h(this.children,b.children)&&$APP.x.h(this.o,b.o)};$APP.g.Cc=function(){return this.tag};$APP.g.zc=function(){return $APP.nb};
$APP.g.Ac=function(){return!1};$APP.g.Bc=function(a,b){a=AV(this.children,b);var c=$APP.y.j(a,0,null);a=$APP.y.j(a,1,null);b=$APP.ho.j;if(!$APP.Be(c))if(c instanceof $APP.F)c=$APP.Wf([c,!0]);else if(c instanceof $APP.q)c=new $APP.h(null,1,[$APP.Em,c],null);else if("string"===typeof c)c=new $APP.h(null,1,[$APP.Em,c],null);else if($APP.De(c))c=new $APP.h(null,1,[$APP.Fm,c],null);else throw $APP.Yl.h("Metadata must be a map, keyword, symbol or string",$APP.Xf);return b.call($APP.ho,a,$APP.Nl,c)};
$APP.g.yc=function(){return $APP.be(this.prefix)+BV(this.children)};$APP.g.Ma=function(){return[$APP.m.g(this.prefix),$APP.m.g(CV(this.children))].join("")};$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,3,[IY,null,$APP.yI,null,$APP.Em,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new xW(this.tag,this.prefix,this.children,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};$APP.g.rf=function(){return!0};$APP.g.qf=function(){return this.children};
$APP.g.Ze=function(a,b){return $APP.ui.j(this,IY,b)};$APP.g.Ye=function(){return $APP.be(this.prefix)};$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "tag":case "prefix":case "children":return!0;default:return $APP.Se(this.o,b)}};
$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h($APP.Em,b):$APP.Af.call(null,$APP.Em,b))?new xW(c,this.prefix,this.children,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h($APP.yI,b):$APP.Af.call(null,$APP.yI,b))?new xW(this.tag,c,this.children,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h(IY,b):$APP.Af.call(null,IY,b))?new xW(this.tag,this.prefix,c,this.A,this.o,null):new xW(this.tag,this.prefix,this.children,this.A,$APP.ui.j(this.o,b,c),null)};
$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,3,5,$APP.I,[new $APP.Te($APP.Em,this.tag,null),new $APP.Te($APP.yI,this.prefix,null),new $APP.Te(IY,this.children,null)],null),this.o))};$APP.g.W=function(a,b){return new xW(this.tag,this.prefix,this.children,b,this.o,this.C)};$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};NV(xW);$APP.g=zW.prototype;$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "auto-resolved?":return this.Jb;case "prefix":return this.prefix;default:return $APP.C.j(this.o,b,c)}};$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.namespaced-map.MapQualifierNode{",", ","}",c,$APP.K.h(new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[UV,this.Jb],null),new $APP.H(null,2,5,$APP.I,[$APP.yI,this.prefix],null)],null),this.o))};$APP.g.fa=function(){return new $APP.wh(this,2,new $APP.H(null,2,5,$APP.I,[UV,$APP.yI],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};$APP.g.U=function(){return this.A};
$APP.g.ba=function(){return new zW(this.Jb,this.prefix,this.A,this.o,this.C)};$APP.g.aa=function(){return 2+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=-426705749^$APP.Nd(this)};$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.Jb,b.Jb)&&$APP.x.h(this.prefix,b.prefix)&&$APP.x.h(this.o,b.o)};$APP.g.Cc=function(){return HY};$APP.g.zc=function(){return HY};$APP.g.Ac=function(){return!1};
$APP.g.Bc=function(a,b){return $APP.k(this.Jb)?(a=$APP.k(this.prefix)?$APP.kj.g(this.prefix):$APP.io,b=$APP.Lo.g(b),b=$APP.k(b)?b:HV,b.g?b.g(a):b.call(null,a)):$APP.kj.g(this.prefix)};$APP.g.yc=function(){return 1+($APP.k(this.Jb)?1:0)+$APP.be(this.prefix)};$APP.g.Ma=function(){return[":",$APP.k(this.Jb)?":":null,$APP.m.g(this.prefix)].join("")};
$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,2,[UV,null,$APP.yI,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new zW(this.Jb,this.prefix,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "auto-resolved?":case "prefix":return!0;default:return $APP.Se(this.o,b)}};
$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h(UV,b):$APP.Af.call(null,UV,b))?new zW(c,this.prefix,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h($APP.yI,b):$APP.Af.call(null,$APP.yI,b))?new zW(this.Jb,c,this.A,this.o,null):new zW(this.Jb,this.prefix,this.A,$APP.ui.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,2,5,$APP.I,[new $APP.Te(UV,this.Jb,null),new $APP.Te($APP.yI,this.prefix,null)],null),this.o))};
$APP.g.W=function(a,b){return new zW(this.Jb,this.prefix,b,this.o,this.C)};$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};$APP.g=AW.prototype;$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "children":return this.children;default:return $APP.C.j(this.o,b,c)}};
$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.namespaced-map.NamespacedMapNode{",", ","}",c,$APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[IY,this.children],null)],null),this.o))};
$APP.g.fa=function(){return new $APP.wh(this,1,new $APP.H(null,1,5,$APP.I,[IY],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ba=function(){return new AW(this.children,this.A,this.o,this.C)};$APP.g.aa=function(){return 1+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=679326169^$APP.Nd(this)};$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.children,b.children)&&$APP.x.h(this.o,b.o)};
$APP.g.Cc=function(){return $APP.Hm};$APP.g.zc=function(){return $APP.Hm};$APP.g.Ac=function(){return!1};$APP.g.Bc=function(a,b){return zV.h($APP.me(this.children),b)};$APP.g.yc=function(){return 1+BV(this.children)};$APP.g.Ma=function(){return["#",$APP.m.g(CV(this.children))].join("")};$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,1,[IY,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new AW(this.children,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};
$APP.g.rf=function(){return!0};$APP.g.qf=function(){return this.children};$APP.g.Ze=function(a,b){return $APP.ui.j(this,IY,RZa(b))};$APP.g.Ye=function(){return 1};$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "children":return!0;default:return $APP.Se(this.o,b)}};$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h(IY,b):$APP.Af.call(null,IY,b))?new AW(c,this.A,this.o,null):new AW(this.children,this.A,$APP.ui.j(this.o,b,c),null)};
$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.Te(IY,this.children,null)],null),this.o))};$APP.g.W=function(a,b){return new AW(this.children,b,this.o,this.C)};$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};NV(zW);NV(AW);$APP.g=BW.prototype;$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "tag":return this.tag;case "prefix":return this.prefix;case "sym":return this.kc;case "children":return this.children;default:return $APP.C.j(this.o,b,c)}};$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.quote.QuoteNode{",", ","}",c,$APP.K.h(new $APP.H(null,4,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[$APP.Em,this.tag],null),new $APP.H(null,2,5,$APP.I,[$APP.yI,this.prefix],null),new $APP.H(null,2,5,$APP.I,[$APP.YE,this.kc],null),new $APP.H(null,2,5,$APP.I,[IY,this.children],null)],null),this.o))};
$APP.g.fa=function(){return new $APP.wh(this,4,new $APP.H(null,4,5,$APP.I,[$APP.Em,$APP.yI,$APP.YE,IY],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ba=function(){return new BW(this.tag,this.prefix,this.kc,this.children,this.A,this.o,this.C)};$APP.g.aa=function(){return 4+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=1712251858^$APP.Nd(this)};
$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.tag,b.tag)&&$APP.x.h(this.prefix,b.prefix)&&$APP.x.h(this.kc,b.kc)&&$APP.x.h(this.children,b.children)&&$APP.x.h(this.o,b.o)};$APP.g.Cc=function(){return this.tag};$APP.g.zc=function(){return $APP.ep};$APP.g.Ac=function(){return!1};$APP.g.Bc=function(a,b){return new $APP.D(null,this.kc,new $APP.D(null,$APP.v(AV(this.children,b)),null,1,null),2,null)};$APP.g.yc=function(){return $APP.be(this.prefix)+BV(this.children)};
$APP.g.Ma=function(){return[$APP.m.g(this.prefix),$APP.m.g(CV(this.children))].join("")};$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,4,[IY,null,$APP.YE,null,$APP.yI,null,$APP.Em,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new BW(this.tag,this.prefix,this.kc,this.children,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};$APP.g.rf=function(){return!0};$APP.g.qf=function(){return this.children};$APP.g.Ze=function(a,b){return $APP.ui.j(this,IY,b)};
$APP.g.Ye=function(){return $APP.be(this.prefix)};$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "tag":case "prefix":case "sym":case "children":return!0;default:return $APP.Se(this.o,b)}};
$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h($APP.Em,b):$APP.Af.call(null,$APP.Em,b))?new BW(c,this.prefix,this.kc,this.children,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h($APP.yI,b):$APP.Af.call(null,$APP.yI,b))?new BW(this.tag,c,this.kc,this.children,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h($APP.YE,b):$APP.Af.call(null,$APP.YE,b))?new BW(this.tag,this.prefix,c,this.children,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h(IY,b):$APP.Af.call(null,IY,b))?new BW(this.tag,this.prefix,
this.kc,c,this.A,this.o,null):new BW(this.tag,this.prefix,this.kc,this.children,this.A,$APP.ui.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,4,5,$APP.I,[new $APP.Te($APP.Em,this.tag,null),new $APP.Te($APP.yI,this.prefix,null),new $APP.Te($APP.YE,this.kc,null),new $APP.Te(IY,this.children,null)],null),this.o))};$APP.g.W=function(a,b){return new BW(this.tag,this.prefix,this.kc,this.children,b,this.o,this.C)};
$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};NV(BW);$APP.g=CW.prototype;$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "tag":return this.tag;case "prefix":return this.prefix;case "suffix":return this.kb;case "sexpr-fn":return this.Qc;case "sexpr-count":return this.Ud;case "children":return this.children;default:return $APP.C.j(this.o,b,c)}};
$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.reader-macro.ReaderNode{",", ","}",c,$APP.K.h(new $APP.H(null,6,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[$APP.Em,this.tag],null),new $APP.H(null,2,5,$APP.I,[$APP.yI,this.prefix],null),new $APP.H(null,2,5,$APP.I,[$APP.GI,this.kb],null),new $APP.H(null,2,5,$APP.I,[FY,this.Qc],null),new $APP.H(null,2,5,$APP.I,[GY,this.Ud],null),new $APP.H(null,2,5,$APP.I,[IY,this.children],null)],null),this.o))};
$APP.g.fa=function(){return new $APP.wh(this,6,new $APP.H(null,6,5,$APP.I,[$APP.Em,$APP.yI,$APP.GI,FY,GY,IY],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ba=function(){return new CW(this.tag,this.prefix,this.kb,this.Qc,this.Ud,this.children,this.A,this.o,this.C)};$APP.g.aa=function(){return 6+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=1051800113^$APP.Nd(this)};
$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.tag,b.tag)&&$APP.x.h(this.prefix,b.prefix)&&$APP.x.h(this.kb,b.kb)&&$APP.x.h(this.Qc,b.Qc)&&$APP.x.h(this.Ud,b.Ud)&&$APP.x.h(this.children,b.children)&&$APP.x.h(this.o,b.o)};$APP.g.Cc=function(){return this.tag};$APP.g.zc=function(){return W2a};$APP.g.Ac=function(){return $APP.Cb(this.Qc)};
$APP.g.Bc=function(a,b){if($APP.k(this.Qc))return a=AV(this.children,b),this.Qc.g?this.Qc.g(a):this.Qc.call(null,a);throw $APP.Yl.h("unsupported operation",$APP.Xf);};$APP.g.yc=function(){return BV(this.children)+1+$APP.be(this.prefix)+$APP.be(this.kb)};$APP.g.Ma=function(){return["#",$APP.m.g(this.prefix),$APP.m.g(CV(this.children)),$APP.m.g(this.kb)].join("")};
$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,6,[$APP.GI,null,IY,null,GY,null,$APP.yI,null,$APP.Em,null,FY,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new CW(this.tag,this.prefix,this.kb,this.Qc,this.Ud,this.children,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};$APP.g.rf=function(){return!0};$APP.g.qf=function(){return this.children};$APP.g.Ze=function(a,b){return $APP.ui.j(this,IY,b)};$APP.g.Ye=function(){return $APP.be(this.prefix)+1};
$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "tag":case "prefix":case "suffix":case "sexpr-fn":case "sexpr-count":case "children":return!0;default:return $APP.Se(this.o,b)}};
$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h($APP.Em,b):$APP.Af.call(null,$APP.Em,b))?new CW(c,this.prefix,this.kb,this.Qc,this.Ud,this.children,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h($APP.yI,b):$APP.Af.call(null,$APP.yI,b))?new CW(this.tag,c,this.kb,this.Qc,this.Ud,this.children,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h($APP.GI,b):$APP.Af.call(null,$APP.GI,b))?new CW(this.tag,this.prefix,c,this.Qc,this.Ud,this.children,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h(FY,
b):$APP.Af.call(null,FY,b))?new CW(this.tag,this.prefix,this.kb,c,this.Ud,this.children,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h(GY,b):$APP.Af.call(null,GY,b))?new CW(this.tag,this.prefix,this.kb,this.Qc,c,this.children,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h(IY,b):$APP.Af.call(null,IY,b))?new CW(this.tag,this.prefix,this.kb,this.Qc,this.Ud,c,this.A,this.o,null):new CW(this.tag,this.prefix,this.kb,this.Qc,this.Ud,this.children,this.A,$APP.ui.j(this.o,b,c),null)};
$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,6,5,$APP.I,[new $APP.Te($APP.Em,this.tag,null),new $APP.Te($APP.yI,this.prefix,null),new $APP.Te($APP.GI,this.kb,null),new $APP.Te(FY,this.Qc,null),new $APP.Te(GY,this.Ud,null),new $APP.Te(IY,this.children,null)],null),this.o))};$APP.g.W=function(a,b){return new CW(this.tag,this.prefix,this.kb,this.Qc,this.Ud,this.children,b,this.o,this.C)};
$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};$APP.g=DW.prototype;$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "children":return this.children;default:return $APP.C.j(this.o,b,c)}};
$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.reader-macro.ReaderMacroNode{",", ","}",c,$APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[IY,this.children],null)],null),this.o))};
$APP.g.fa=function(){return new $APP.wh(this,1,new $APP.H(null,1,5,$APP.I,[IY],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ba=function(){return new DW(this.children,this.A,this.o,this.C)};$APP.g.aa=function(){return 1+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=856986356^$APP.Nd(this)};$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.children,b.children)&&$APP.x.h(this.o,b.o)};
$APP.g.Cc=function(){return xY};$APP.g.zc=function(){return xY};$APP.g.Ac=function(){return!1};$APP.g.Bc=function(){return new $APP.D(null,$APP.eC,new $APP.D(null,this.Ma(null),null,1,null),2,null)};$APP.g.yc=function(){return BV(this.children)+1};$APP.g.Ma=function(){return["#",$APP.m.g(CV(this.children))].join("")};
$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,1,[IY,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new DW(this.children,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};$APP.g.rf=function(){return!0};$APP.g.qf=function(){return this.children};$APP.g.Ze=function(a,b){return $APP.ui.j(this,IY,b)};$APP.g.Ye=function(){return 1};$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "children":return!0;default:return $APP.Se(this.o,b)}};
$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h(IY,b):$APP.Af.call(null,IY,b))?new DW(c,this.A,this.o,null):new DW(this.children,this.A,$APP.ui.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.Te(IY,this.children,null)],null),this.o))};$APP.g.W=function(a,b){return new DW(this.children,b,this.o,this.C)};$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};$APP.g=FW.prototype;
$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "children":return this.children;default:return $APP.C.j(this.o,b,c)}};$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.reader-macro.DerefNode{",", ","}",c,$APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[IY,this.children],null)],null),this.o))};$APP.g.fa=function(){return new $APP.wh(this,1,new $APP.H(null,1,5,$APP.I,[IY],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ba=function(){return new FW(this.children,this.A,this.o,this.C)};
$APP.g.aa=function(){return 1+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=-1560233006^$APP.Nd(this)};$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.children,b.children)&&$APP.x.h(this.o,b.o)};$APP.g.Cc=function(){return $APP.cp};$APP.g.zc=function(){return $APP.cp};$APP.g.Ac=function(){return!1};$APP.g.Bc=function(a,b){return $APP.Es.h($APP.dp,AV(this.children,b))};$APP.g.yc=function(){return BV(this.children)+1};
$APP.g.Ma=function(){return["@",$APP.m.g(CV(this.children))].join("")};$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,1,[IY,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new FW(this.children,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};$APP.g.rf=function(){return!0};$APP.g.qf=function(){return this.children};$APP.g.Ze=function(a,b){return $APP.ui.j(this,IY,b)};$APP.g.Ye=function(){return 1};
$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "children":return!0;default:return $APP.Se(this.o,b)}};$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h(IY,b):$APP.Af.call(null,IY,b))?new FW(c,this.A,this.o,null):new FW(this.children,this.A,$APP.ui.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.Te(IY,this.children,null)],null),this.o))};$APP.g.W=function(a,b){return new FW(this.children,b,this.o,this.C)};
$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};NV(CW);NV(DW);NV(FW);$APP.g=GW.prototype;$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "pattern":return this.pattern;default:return $APP.C.j(this.o,b,c)}};$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.regex.RegexNode{",", ","}",c,$APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[$APP.mH,this.pattern],null)],null),this.o))};$APP.g.fa=function(){return new $APP.wh(this,1,new $APP.H(null,1,5,$APP.I,[$APP.mH],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ba=function(){return new GW(this.pattern,this.A,this.o,this.C)};
$APP.g.aa=function(){return 1+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=705094795^$APP.Nd(this)};$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.pattern,b.pattern)&&$APP.x.h(this.o,b.o)};$APP.g.Cc=function(){return $APP.So};$APP.g.zc=function(){return $APP.So};$APP.g.Ac=function(){return!1};$APP.g.Bc=function(){return new $APP.D(null,$APP.YB,new $APP.D(null,this.pattern,null,1,null),2,null)};$APP.g.yc=function(){return 3+$APP.be(this.pattern)};
$APP.g.Ma=function(){return['#"',$APP.m.g(this.pattern),'"'].join("")};$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,1,[$APP.mH,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new GW(this.pattern,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "pattern":return!0;default:return $APP.Se(this.o,b)}};
$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h($APP.mH,b):$APP.Af.call(null,$APP.mH,b))?new GW(c,this.A,this.o,null):new GW(this.pattern,this.A,$APP.ui.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.Te($APP.mH,this.pattern,null)],null),this.o))};$APP.g.W=function(a,b){return new GW(this.pattern,b,this.o,this.C)};$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};NV(GW);$APP.g=HW.prototype;$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "tag":return this.tag;case "format-string":return this.Od;case "wrap-length":return this.Ld;case "seq-fn":return this.sd;case "children":return this.children;default:return $APP.C.j(this.o,b,c)}};
$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.seq.SeqNode{",", ","}",c,$APP.K.h(new $APP.H(null,5,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[$APP.Em,this.tag],null),new $APP.H(null,2,5,$APP.I,[BY,this.Od],null),new $APP.H(null,2,5,$APP.I,[tY,this.Ld],null),new $APP.H(null,2,5,$APP.I,[uY,this.sd],null),new $APP.H(null,2,5,$APP.I,[IY,this.children],null)],null),this.o))};
$APP.g.fa=function(){return new $APP.wh(this,5,new $APP.H(null,5,5,$APP.I,[$APP.Em,BY,tY,uY,IY],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ba=function(){return new HW(this.tag,this.Od,this.Ld,this.sd,this.children,this.A,this.o,this.C)};$APP.g.aa=function(){return 5+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=580297420^$APP.Nd(this)};
$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.tag,b.tag)&&$APP.x.h(this.Od,b.Od)&&$APP.x.h(this.Ld,b.Ld)&&$APP.x.h(this.sd,b.sd)&&$APP.x.h(this.children,b.children)&&$APP.x.h(this.o,b.o)};$APP.g.Cc=function(){return this.tag};$APP.g.zc=function(){return $APP.IB};$APP.g.Ac=function(){return!1};$APP.g.Bc=function(a,b){a=AV(this.children,b);return this.sd.g?this.sd.g(a):this.sd.call(null,a)};$APP.g.yc=function(){return this.Ld+BV(this.children)};
$APP.g.Ma=function(){return MV.l(this.Od,$APP.z([CV(this.children)]))};$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,5,[IY,null,BY,null,uY,null,tY,null,$APP.Em,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new HW(this.tag,this.Od,this.Ld,this.sd,this.children,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};$APP.g.rf=function(){return!0};$APP.g.qf=function(){return this.children};$APP.g.Ze=function(a,b){return $APP.ui.j(this,IY,b)};
$APP.g.Ye=function(){return this.Ld-1};$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "tag":case "format-string":case "wrap-length":case "seq-fn":case "children":return!0;default:return $APP.Se(this.o,b)}};
$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h($APP.Em,b):$APP.Af.call(null,$APP.Em,b))?new HW(c,this.Od,this.Ld,this.sd,this.children,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h(BY,b):$APP.Af.call(null,BY,b))?new HW(this.tag,c,this.Ld,this.sd,this.children,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h(tY,b):$APP.Af.call(null,tY,b))?new HW(this.tag,this.Od,c,this.sd,this.children,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h(uY,b):$APP.Af.call(null,uY,b))?new HW(this.tag,this.Od,
this.Ld,c,this.children,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h(IY,b):$APP.Af.call(null,IY,b))?new HW(this.tag,this.Od,this.Ld,this.sd,c,this.A,this.o,null):new HW(this.tag,this.Od,this.Ld,this.sd,this.children,this.A,$APP.ui.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,5,5,$APP.I,[new $APP.Te($APP.Em,this.tag,null),new $APP.Te(BY,this.Od,null),new $APP.Te(tY,this.Ld,null),new $APP.Te(uY,this.sd,null),new $APP.Te(IY,this.children,null)],null),this.o))};
$APP.g.W=function(a,b){return new HW(this.tag,this.Od,this.Ld,this.sd,this.children,b,this.o,this.C)};$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};NV(HW);$APP.g=MW.prototype;$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "lines":return this.lines;default:return $APP.C.j(this.o,b,c)}};$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.stringz.StringNode{",", ","}",c,$APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[$APP.EK,this.lines],null)],null),this.o))};$APP.g.fa=function(){return new $APP.wh(this,1,new $APP.H(null,1,5,$APP.I,[$APP.EK],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ba=function(){return new MW(this.lines,this.A,this.o,this.C)};
$APP.g.aa=function(){return 1+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=1538615006^$APP.Nd(this)};$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.lines,b.lines)&&$APP.x.h(this.o,b.o)};$APP.g.Cc=function(){return $APP.w(this.lines)?Y5a:$APP.rV};$APP.g.zc=function(){return $APP.em};$APP.g.Ac=function(){return!1};$APP.g.Bc=function(){return $APP.mn.h("\n",$APP.ej.h($APP.qq.h($APP.aM,c_a),this.lines))};
$APP.g.yc=function(){return 2+$APP.af.h($APP.Mx,$APP.ej.h($APP.be,this.lines))};$APP.g.Ma=function(){return c_a($APP.mn.h("\n",this.lines))};$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,1,[$APP.EK,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new MW(this.lines,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "lines":return!0;default:return $APP.Se(this.o,b)}};
$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h($APP.EK,b):$APP.Af.call(null,$APP.EK,b))?new MW(c,this.A,this.o,null):new MW(this.lines,this.A,$APP.ui.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.Te($APP.EK,this.lines,null)],null),this.o))};$APP.g.W=function(a,b){return new MW(this.lines,b,this.o,this.C)};$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};NV(MW);$APP.g=OW.prototype;$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "value":return this.value;case "string-value":return this.fc;default:return $APP.C.j(this.o,b,c)}};$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.token.TokenNode{",", ","}",c,$APP.K.h(new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[$APP.kK,this.value],null),new $APP.H(null,2,5,$APP.I,[AY,this.fc],null)],null),this.o))};$APP.g.fa=function(){return new $APP.wh(this,2,new $APP.H(null,2,5,$APP.I,[$APP.kK,AY],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};$APP.g.U=function(){return this.A};
$APP.g.ba=function(){return new OW(this.value,this.fc,this.A,this.o,this.C)};$APP.g.aa=function(){return 2+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=1106307029^$APP.Nd(this)};$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.value,b.value)&&$APP.x.h(this.fc,b.fc)&&$APP.x.h(this.o,b.o)};$APP.g.Cc=function(){return $APP.rV};$APP.g.zc=function(){return $APP.rV};$APP.g.Ac=function(){return!1};$APP.g.Bc=function(){return this.value};
$APP.g.yc=function(){return $APP.be(this.fc)};$APP.g.Ma=function(){return this.fc};$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,2,[$APP.kK,null,AY,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new OW(this.value,this.fc,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "value":case "string-value":return!0;default:return $APP.Se(this.o,b)}};
$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h($APP.kK,b):$APP.Af.call(null,$APP.kK,b))?new OW(c,this.fc,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h(AY,b):$APP.Af.call(null,AY,b))?new OW(this.value,c,this.A,this.o,null):new OW(this.value,this.fc,this.A,$APP.ui.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,2,5,$APP.I,[new $APP.Te($APP.kK,this.value,null),new $APP.Te(AY,this.fc,null)],null),this.o))};
$APP.g.W=function(a,b){return new OW(this.value,this.fc,b,this.o,this.C)};$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};$APP.g=PW.prototype;$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "value":return this.value;case "string-value":return this.fc;case "map-qualifier":return this.ic;default:return $APP.C.j(this.o,b,c)}};
$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};$APP.g.wj=$APP.xd;$APP.g.xj=function(a,b){return $APP.ui.j(this,HY,b)};$APP.g.yj=function(){return $APP.ui.j(this,HY,null)};
$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.token.SymbolNode{",", ","}",c,$APP.K.h(new $APP.H(null,3,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[$APP.kK,this.value],null),new $APP.H(null,2,5,$APP.I,[AY,this.fc],null),new $APP.H(null,2,5,$APP.I,[HY,this.ic],null)],null),this.o))};$APP.g.fa=function(){return new $APP.wh(this,3,new $APP.H(null,3,5,$APP.I,[$APP.kK,AY,HY],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};$APP.g.U=function(){return this.A};
$APP.g.ba=function(){return new PW(this.value,this.fc,this.ic,this.A,this.o,this.C)};$APP.g.aa=function(){return 3+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=2093419088^$APP.Nd(this)};$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.value,b.value)&&$APP.x.h(this.fc,b.fc)&&$APP.x.h(this.ic,b.ic)&&$APP.x.h(this.o,b.o)};$APP.g.Cc=function(){return $APP.rV};$APP.g.zc=function(){return $APP.zm};$APP.g.Ac=function(){return!1};
$APP.g.Bc=function(a,b){a=this.value;var c=this.ic;b=$APP.Yf(b);b=$APP.C.h(b,$APP.Lo);var d=d_a(c,e_a(a));c=$APP.kj.h;$APP.k(UV.g(d))?(d=$APP.yI.g(d),d=null==d?null:$APP.kj.g(d),d=$APP.k(d)?d:$APP.io,b=$APP.k(b)?b:HV,b=b.g?b.g(d):b.call(null,d)):b=$APP.yI.g(d);b=null==b?null:$APP.m.g(b);return a=c.call($APP.kj,b,$APP.Fi(a))};$APP.g.yc=function(){return $APP.be(this.fc)};$APP.g.Ma=function(){return this.fc};
$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,3,[HY,null,$APP.kK,null,AY,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new PW(this.value,this.fc,this.ic,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "value":case "string-value":case "map-qualifier":return!0;default:return $APP.Se(this.o,b)}};
$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h($APP.kK,b):$APP.Af.call(null,$APP.kK,b))?new PW(c,this.fc,this.ic,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h(AY,b):$APP.Af.call(null,AY,b))?new PW(this.value,c,this.ic,this.A,this.o,null):$APP.k($APP.Af.h?$APP.Af.h(HY,b):$APP.Af.call(null,HY,b))?new PW(this.value,this.fc,c,this.A,this.o,null):new PW(this.value,this.fc,this.ic,this.A,$APP.ui.j(this.o,b,c),null)};
$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,3,5,$APP.I,[new $APP.Te($APP.kK,this.value,null),new $APP.Te(AY,this.fc,null),new $APP.Te(HY,this.ic,null)],null),this.o))};$APP.g.W=function(a,b){return new PW(this.value,this.fc,this.ic,b,this.o,this.C)};$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};NV(OW);NV(PW);$APP.g=SW.prototype;$APP.g.toString=function(){return this.Ma(null)};$APP.g.da=function(a,b){return this.K(null,b,null)};$APP.g.K=function(a,b,c){switch(b instanceof $APP.F?b.N:null){case "children":return this.children;default:return $APP.C.j(this.o,b,c)}};$APP.g.ka=function(a,b,c){return $APP.af.j(function(d,e){var f=$APP.y.j(e,0,null);e=$APP.y.j(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$APP.g.V=function(a,b,c){return $APP.aj(b,function(d){return $APP.aj(b,$APP.dj,""," ","",c,d)},"#rewrite-clj.node.uneval.UnevalNode{",", ","}",c,$APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[IY,this.children],null)],null),this.o))};$APP.g.fa=function(){return new $APP.wh(this,1,new $APP.H(null,1,5,$APP.I,[IY],null),$APP.k(this.o)?$APP.ld(this.o):$APP.ag())};$APP.g.U=function(){return this.A};$APP.g.ba=function(){return new SW(this.children,this.A,this.o,this.C)};
$APP.g.aa=function(){return 1+$APP.be(this.o)};$APP.g.Y=function(){var a=this.C;return null!=a?a:this.C=a=-1883175395^$APP.Nd(this)};$APP.g.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$APP.x.h(this.children,b.children)&&$APP.x.h(this.o,b.o)};$APP.g.Cc=function(){return $APP.Wo};$APP.g.zc=function(){return $APP.Wo};$APP.g.Ac=function(){return!0};$APP.g.Bc=function(){throw $APP.Yl.h("unsupported operation",$APP.Xf);};$APP.g.yc=function(){return 2+BV(this.children)};
$APP.g.Ma=function(){return["#_",$APP.m.g(CV(this.children))].join("")};$APP.g.la=function(a,b){return $APP.Se(new $APP.zi(null,new $APP.h(null,1,[IY,null],null),null),b)?$APP.Ol.h($APP.vc($APP.Eh.h($APP.Xf,this),this.A),b):new SW(this.children,this.A,$APP.Zf($APP.Ol.h(this.o,b)),null)};$APP.g.rf=function(){return!0};$APP.g.qf=function(){return this.children};$APP.g.Ze=function(a,b){return $APP.ui.j(this,IY,b)};$APP.g.Ye=function(){return 2};
$APP.g.ha=function(a,b){switch(b instanceof $APP.F?b.N:null){case "children":return!0;default:return $APP.Se(this.o,b)}};$APP.g.R=function(a,b,c){return $APP.k($APP.Af.h?$APP.Af.h(IY,b):$APP.Af.call(null,IY,b))?new SW(c,this.A,this.o,null):new SW(this.children,this.A,$APP.ui.j(this.o,b,c),null)};$APP.g.Z=function(){return $APP.r($APP.K.h(new $APP.H(null,1,5,$APP.I,[new $APP.Te(IY,this.children,null)],null),this.o))};$APP.g.W=function(a,b){return new SW(this.children,b,this.o,this.C)};
$APP.g.ca=function(a,b){return $APP.De(b)?this.R(null,$APP.oe(b,0),$APP.oe(b,1)):$APP.af.j($APP.Vb,this,b)};NV(SW);lW.prototype.sb=function(){return this};OW.prototype.sb=function(){return this};GW.prototype.sb=function(){return this};zW.prototype.sb=function(){return this};xW.prototype.sb=function(){return this};FW.prototype.sb=function(){return this};TV.prototype.sb=function(){return this};MW.prototype.sb=function(){return this};VV.prototype.sb=function(){return this};nW.prototype.sb=function(){return this};oW.prototype.sb=function(){return this};SW.prototype.sb=function(){return this};DW.prototype.sb=function(){return this};
SV.prototype.sb=function(){return this};PW.prototype.sb=function(){return this};AW.prototype.sb=function(){return this};OV.prototype.sb=function(){return this};HW.prototype.sb=function(){return this};BW.prototype.sb=function(){return this};CW.prototype.sb=function(){return this};RV.prototype.sb=function(){return this};var i_a=LZa(", "),j_a=mW(" ");$APP.F.prototype.sb=function(){return WV(this,!1)};IV.string=function(a){return NW(h_a($APP.Gl($APP.Fl($APP.yj.l($APP.z([a]))))))};
IV._=function(a){if($APP.Ce(a)){var b=$APP.I;var c=$APP.yj.l($APP.z([a]));c=$APP.kj.g($APP.Yi.j(c,1,$APP.$L.h(c,"{")));b=EW(new $APP.H(null,2,5,b,[RW(c),LW(k_a(a))],null))}else b=RW(a);return TW(b,a)};IV["null"]=function(){return RW(null)};RegExp.prototype.sb=function(){return new GW(this.source,null,null,null)};$APP.H.prototype.sb=function(){return UW(JW,this)};$APP.D.prototype.sb=function(){return UW(IW,this)};$APP.Ff.prototype.sb=function(){return UW(IW,this)};
$APP.xf.prototype.sb=function(){return UW(IW,this)};$APP.zi.prototype.sb=function(){return UW(KW,this)};$APP.uf.prototype.sb=function(){return UW(IW,this)};$APP.fi.prototype.sb=function(){return TW(LW(k_a(this)),this)};$APP.h.prototype.sb=function(){return TW(LW(k_a(this)),this)};$APP.Cd.prototype.sb=function(){return YZa(new $APP.H(null,1,5,$APP.I,[RW($APP.kj.g($APP.Yi.h($APP.m.g(this),2)))],null))};var JY=function JY(a){switch(arguments.length){case 1:return JY.g(arguments[0]);case 2:return JY.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};JY.g=function(a){return kZa(a,$APP.Xf)};JY.h=function(a,b){return kZa(a,b)};JY.B=2;var KY=function KY(a){switch(arguments.length){case 1:return KY.g(arguments[0]);case 2:return KY.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};KY.g=function(a){return zV.g(a)};
KY.h=function(a,b){return zV.h(a,b)};KY.B=2;var LY=function LY(a){switch(arguments.length){case 1:return LY.g(arguments[0]);case 2:return LY.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};LY.g=function(a){return AV(a,$APP.Xf)};LY.h=function(a,b){return AV(a,b)};LY.B=2;
var MY=function MY(a){switch(arguments.length){case 1:return MY.g(arguments[0]);case 2:return MY.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};MY.g=function(a){return new OV(";",a,null,null,null)};MY.h=function(a,b){return new OV(a,b,null,null,null)};MY.B=2;
var NY=function NY(a){switch(arguments.length){case 1:return NY.g(arguments[0]);case 2:return NY.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};NY.g=function(a){return new TV(a,10,null,null,null)};NY.h=function(a,b){return new TV(a,b,null,null,null)};NY.B=2;
var OY=function OY(a){switch(arguments.length){case 2:return OY.h(arguments[0],arguments[1]);case 1:return OY.g(arguments[0]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};OY.h=function(a,b){return WV(a,b)};OY.g=function(a){return WV(a,!1)};OY.B=2;var PY=function PY(a){switch(arguments.length){case 1:return PY.g(arguments[0]);case 2:return PY.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};
PY.g=function(a){return yW($APP.nb,"^",a)};PY.h=function(a,b){return OZa(a,b)};PY.B=2;var QY=function QY(a){switch(arguments.length){case 1:return QY.g(arguments[0]);case 2:return QY.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};QY.g=function(a){return yW(J6a,"#^",a)};QY.h=function(a,b){return yW(J6a,"#^",new $APP.H(null,3,5,$APP.I,[a,tW(1),b],null))};QY.B=2;
var RY=function RY(a){switch(arguments.length){case 1:return RY.g(arguments[0]);case 2:return RY.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};RY.g=function(a){return EW(a)};RY.h=function(a,b){return EW(new $APP.H(null,3,5,$APP.I,[a,tW(1),b],null))};RY.B=2;
var SY=function SY(a){switch(arguments.length){case 1:return SY.g(arguments[0]);case 2:return SY.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};SY.g=function(a){return RW(a)};SY.h=function(a,b){return QW(a,b)};SY.B=2;var TY=function TY(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return TY.l(arguments[0],arguments[1],2<c.length?new $APP.Ed(c.slice(2),0,null):null)};TY.l=function(a,b,c){return $APP.k(VW.g(a))?mX(a,$APP.qg.j(b,YW(a),c)):$APP.qg.F($APP.$O,a,b,c)};TY.B=2;TY.G=function(a){var b=$APP.v(a),c=$APP.w(a);a=$APP.v(c);c=$APP.w(c);return this.l(b,a,c)};var sX=null,jW=function(){var a=$APP.Aj.g($APP.Xf),b=$APP.Aj.g($APP.Xf),c=$APP.Aj.g($APP.Xf),d=$APP.Aj.g($APP.Xf),e=$APP.C.j($APP.Xf,$APP.jr,$APP.Kj.D?$APP.Kj.D():$APP.Kj.call(null));return new $APP.ak($APP.kj.h("rewrite-clj.parser.core","parse-next*"),$APP.qq.h(new $APP.Cd(function(){return G_a},z1a,$APP.gi([$APP.Ot,$APP.Q,$APP.N,$APP.Vl,$APP.Uz,$APP.Om,$APP.Wl,$APP.XL,$APP.V,$APP.M,$APP.iG],[!0,$APP.re(v3a,new $APP.h(null,1,[$APP.ou,!0],null)),$APP.iya,"rewrite_clj/parser/core.cljc",16,1,28,28,
$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.eJ],null)),null,$APP.k(G_a)?G_a.H:null])),iW),$APP.Mm,e,a,b,c,d)}();jW.oa(null,$APP.rV,function(a){return D_a(a)});jW.oa(null,E_a,function(a){return hW(a)});jW.oa(null,tX,function(a){return vZa(a,"Unmatched delimiter: %s",$APP.z([iW(a)]))});jW.oa(null,$APP.bm,function(a){return $APP.k(sX)?eW(a,"Unexpected EOF."):null});jW.oa(null,sW,function(a){var b=iW(a);return fW(b)?pW(gW(a,fW)):xZa(b)?new nW(gW(a,xZa),null,null,null):mW(gW(a,yZa))});
jW.oa(null,PV,function(a){hW(a);a=BZa(a);return new OV(";",a,null,null,null)});jW.oa(null,$APP.Dm,function(a){hW(a);var b=iW(a);$APP.k(b)?$APP.x.h(b,":")?(a.va(null),a=GZa(a),a=WV(a,!0)):a=WV(GZa(a),!1):a=eW(a,"unexpected EOF while reading keyword.");return a});jW.oa(null,$APP.em,function(a){return NW(h_a(a))});jW.oa(null,$APP.nb,function(a){hW(a);return yW($APP.nb,"^",wX(a,$APP.nb,2))});
jW.oa(null,F_a,function(a){hW(a);var b=iW(a);return $APP.x.h(null,b)?eW(a,"Unexpected EOF."):$APP.x.h("!",b)?I_a(a):$APP.x.h('"',b)?new GW(A_a(a),null,null,null):$APP.x.h("#",b)?H_a(a):$APP.x.h("'",b)?YZa(vX(a,$APP.Uo,1,$APP.z([!0]))):$APP.x.h("(",b)?new RV(uX(a,")"),null,null,null):$APP.x.h(":",b)?z_a(a):$APP.x.h("{",b)?KW(uX(a,"}")):$APP.x.h("\x3d",b)?ZZa(vX(a,$APP.pza,1,$APP.z([!0]))):$APP.x.h("^",b)?yW(J6a,"#^",vX(a,$APP.nb,2,$APP.z([!0]))):$APP.x.h("?",b)?(a.va(null),EW(function(){return $APP.yf(function(){switch(iW(a)){case "(":return RW($APP.kj.g("?"));
case "@":return a.va(null),RW($APP.kj.g("?@"));default:return a.ae(null,"?"),$APP.v(wX(a,xY,1))}}(),wX(a,xY,1))}())):$APP.x.h("_",b)?f_a(vX(a,$APP.Wo,1,$APP.z([!0]))):EW(wX(a,xY,2))});jW.oa(null,$APP.cp,function(a){return $Za(vX(a,$APP.cp,1,$APP.z([!0])))});jW.oa(null,$APP.ep,function(a){return TZa(vX(a,$APP.ep,1,$APP.z([!0])))});jW.oa(null,$APP.ao,function(a){return UZa(vX(a,$APP.ao,1,$APP.z([!0])))});
jW.oa(null,$APP.hp,function(a){hW(a);var b=iW(a);return $APP.x.h(b,"@")?WZa(vX(a,$APP.hp,1,$APP.z([!0]))):VZa(wX(a,$APP.hp,1))});jW.oa(null,$APP.tm,function(a){return IW(uX(a,")"))});jW.oa(null,$APP.um,function(a){return JW(uX(a,"]"))});jW.oa(null,$APP.vm,function(a){return LW(uX(a,"}"))});var P_a=new $APP.h(null,2,[O_a,!1,$APP.Lo,HV],null);var QX=function QX(a){switch(arguments.length){case 1:return QX.g(arguments[0]);case 2:return QX.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};QX.g=function(a){return QX.h(a,xX)};QX.h=function(a,b){return null==AX(hX,hX(a))||null==AX(jX,jX(a))?rX(a,b):a};QX.B=2;var UY=function UY(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return UY.l(arguments[0],arguments[1],2<c.length?new $APP.Ed(c.slice(2),0,null):null)};UY.l=function(a,b,c){return TY.l(a,a0a(DX.g($APP.se(a))),$APP.z([function(d){return $APP.qg.j(b,d,c)}]))};UY.B=2;UY.G=function(a){var b=$APP.v(a),c=$APP.w(a);a=$APP.v(c);c=$APP.w(c);return this.l(b,a,c)};var WX=tW(1);var VY=function VY(a){switch(arguments.length){case 1:return VY.g(arguments[0]);case 2:return VY.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};VY.g=function(a){return EX(a,$APP.Xf)};VY.h=function(a,b){return EX(a,b)};VY.B=2;var WY=function WY(a){switch(arguments.length){case 1:return WY.g(arguments[0]);case 2:return WY.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};
WY.g=function(a){return EX(a,$APP.Xf)};WY.h=function(a,b){return EX(a,b)};WY.B=2;var XY=function XY(a){switch(arguments.length){case 1:return XY.g(arguments[0]);case 2:return XY.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};XY.g=function(a){return FX(a,$APP.Xf)};XY.h=function(a,b){return FX(a,b)};XY.B=2;
var YY=function YY(a){switch(arguments.length){case 1:return YY.g(arguments[0]);case 2:return YY.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};YY.g=function(a){return FX(a,$APP.Xf)};YY.h=function(a,b){return FX(a,b)};YY.B=2;var ZY=function ZY(a){switch(arguments.length){case 1:return ZY.g(arguments[0]);case 2:return ZY.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};
ZY.g=function(a){return R_a(a,$APP.Xf)};ZY.h=function(a,b){return R_a(a,b)};ZY.B=2;var $Y=function $Y(a){switch(arguments.length){case 1:return $Y.g(arguments[0]);case 2:return $Y.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};$Y.g=function(a){return Q_a(a,$APP.Xf)};$Y.h=function(a,b){return Q_a(a,b)};$Y.B=2;
var aZ=function aZ(a){switch(arguments.length){case 2:return aZ.h(arguments[0],arguments[1]);case 1:return aZ.g(arguments[0]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};aZ.h=function(a){return T_a(a)};aZ.g=function(a){return T_a(a)};aZ.B=2;var bZ=function bZ(a){switch(arguments.length){case 2:return bZ.h(arguments[0],arguments[1]);case 1:return bZ.g(arguments[0]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};bZ.h=function(a){return U_a(a)};
bZ.g=function(a){return U_a(a)};bZ.B=2;var cZ=function cZ(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return cZ.l(arguments[0],arguments[1],2<c.length?new $APP.Ed(c.slice(2),0,null):null)};cZ.l=function(a,b,c){return $APP.qg.F(UY,a,b,c)};cZ.B=2;cZ.G=function(a){var b=$APP.v(a),c=$APP.w(a);a=$APP.v(c);c=$APP.w(c);return this.l(b,a,c)};
var kY=function kY(a){switch(arguments.length){case 2:return kY.h(arguments[0],arguments[1]);case 3:return kY.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};kY.h=function(a,b){return SX(a,JX,b)};kY.j=function(a,b,c){return SX(a,b,c)};kY.B=3;
var dZ=function dZ(a){switch(arguments.length){case 2:return dZ.h(arguments[0],arguments[1]);case 3:return dZ.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};dZ.h=function(a,b){return TX(a,JX,b)};dZ.j=function(a,b,c){return TX(a,b,c)};dZ.B=3;
var eZ=function eZ(a){switch(arguments.length){case 2:return eZ.h(arguments[0],arguments[1]);case 3:return eZ.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};eZ.h=function(a,b){return i0a(a,JX,b)};eZ.j=function(a,b,c){return i0a(a,b,c)};eZ.B=3;
var fZ=function fZ(a){switch(arguments.length){case 2:return fZ.h(arguments[0],arguments[1]);case 3:return fZ.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};fZ.h=function(a,b){return TX(a,JX,g0a(b))};fZ.j=function(a,b,c){return TX(a,b,g0a(c))};fZ.B=3;
var gZ=function gZ(a){switch(arguments.length){case 2:return gZ.h(arguments[0],arguments[1]);case 3:return gZ.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};gZ.h=function(a,b){return VX(a,JX,b)};gZ.j=function(a,b,c){return VX(a,b,c)};gZ.B=3;
var hZ=function hZ(a){switch(arguments.length){case 2:return hZ.h(arguments[0],arguments[1]);case 3:return hZ.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};hZ.h=function(a,b){return l0a(a,JX,b)};hZ.j=function(a,b,c){return l0a(a,b,c)};hZ.B=3;
var iZ=function iZ(a){switch(arguments.length){case 2:return iZ.h(arguments[0],arguments[1]);case 3:return iZ.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};iZ.h=function(a,b){return UX(a,JX,b)};iZ.j=function(a,b,c){return UX(a,b,c)};iZ.B=3;
var jZ=function jZ(a){switch(arguments.length){case 2:return jZ.h(arguments[0],arguments[1]);case 3:return jZ.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};jZ.h=function(a,b){return k0a(a,JX,b)};jZ.j=function(a,b,c){return k0a(a,b,c)};jZ.B=3;
var kZ=function kZ(a){switch(arguments.length){case 2:return kZ.h(arguments[0],arguments[1]);case 3:return kZ.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};kZ.h=function(a,b){return h0a(a,b,$APP.sg(!0))};kZ.j=function(a,b,c){return h0a(a,b,c)};kZ.B=3;
var lZ=function lZ(a){switch(arguments.length){case 2:return lZ.h(arguments[0],arguments[1]);case 3:return lZ.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};lZ.h=function(a,b){return bY(a,$APP.Pl.j(t0a,$APP.sg(!0),b))};lZ.j=function(a,b,c){return bY(a,$APP.Pl.j(t0a,b,c))};lZ.B=3;
var mZ=function mZ(a){switch(arguments.length){case 2:return mZ.h(arguments[0],arguments[1]);case 3:return mZ.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};mZ.h=function(a,b){return u0a(a,$APP.sg(!0),b)};mZ.j=function(a,b,c){return u0a(a,b,c)};mZ.B=3;
var nZ=function nZ(a){switch(arguments.length){case 1:return nZ.g(arguments[0]);case 2:return nZ.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};nZ.g=function(a){return AX(hX,a)};nZ.h=function(a,b){return AX(a,b)};nZ.B=2;var oZ=function oZ(a){switch(arguments.length){case 1:return oZ.g(arguments[0]);case 2:return oZ.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};
oZ.g=function(a){return BX(a,1)};oZ.h=function(a,b){return BX(a,b)};oZ.B=2;var pZ=function pZ(a){switch(arguments.length){case 1:return pZ.g(arguments[0]);case 2:return pZ.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};pZ.g=function(a){return CX(a,1)};pZ.h=function(a,b){return CX(a,b)};pZ.B=2;
var qZ=function qZ(a){switch(arguments.length){case 1:return qZ.g(arguments[0]);case 2:return qZ.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};qZ.g=function(a){return kX(a,uW(1))};qZ.h=function(a,b){return kX(a,uW(b))};qZ.B=2;var rZ=function rZ(a){switch(arguments.length){case 1:return rZ.g(arguments[0]);case 2:return rZ.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};
rZ.g=function(a){return lX(a,uW(1))};rZ.h=function(a,b){return lX(a,uW(b))};rZ.B=2;var sZ=function sZ(a){switch(arguments.length){case 2:return sZ.h(arguments[0],arguments[1]);case 1:return sZ.g(arguments[0]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};sZ.h=function(a,b){return BX(a,$APP.k(b)?b:1)};sZ.g=function(a){return BX(a,$APP.k(null)?null:1)};sZ.B=2;
var tZ=function tZ(a){switch(arguments.length){case 2:return tZ.h(arguments[0],arguments[1]);case 1:return tZ.g(arguments[0]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};tZ.h=function(a,b){return CX(a,$APP.k(b)?b:1)};tZ.g=function(a){return CX(a,$APP.k(null)?null:1)};tZ.B=2;
var uZ=function uZ(a){switch(arguments.length){case 2:return uZ.h(arguments[0],arguments[1]);case 1:return uZ.g(arguments[0]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};uZ.h=function(a,b){return kX(a,uW($APP.k(b)?b:1))};uZ.g=function(a){return kX(a,uW($APP.k(null)?null:1))};uZ.B=2;
var vZ=function vZ(a){switch(arguments.length){case 2:return vZ.h(arguments[0],arguments[1]);case 1:return vZ.g(arguments[0]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};vZ.h=function(a,b){return lX(a,uW($APP.k(b)?b:1))};vZ.g=function(a){return lX(a,uW($APP.k(null)?null:1))};vZ.B=2;
var wZ=function wZ(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return wZ.l(arguments[0],arguments[1],2<c.length?new $APP.Ed(c.slice(2),0,null):null)};wZ.l=function(a,b,c){return $APP.qg.F(TY,a,b,c)};wZ.B=2;wZ.G=function(a){var b=$APP.v(a),c=$APP.w(a);a=$APP.v(c);c=$APP.w(c);return this.l(b,a,c)};var T6a=$APP.DO.h($APP.YAa,null),U6a=$APP.DO.h($APP.OA,null),V6a=$APP.DO.h($APP.hva,null),W6a=$APP.DO.h($APP.WCa,null),X6a=$APP.iu($APP.gi([$APP.re(m5a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.BH],null))),$APP.M,"Returns `node` replacing current children with `children`."],null)),$APP.re(I5a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.oJ],null))),$APP.M,"Create node representing `n` newline characters."],null)),$APP.re(n3a,
new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null))),$APP.M,"Return `node` converted to form.\n\n  Optional `opts` can specify:\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances).",$APP.QJ,new $APP.h(null,6,[$APP.zA,
!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null)],null),$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re(b4a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[qY,$APP.iF],null))),$APP.M,'Create a map qualifier node.\n   The map qualifier node is a child node of [[namespaced-map-node]].\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   ;; qualified\n   (-\x3e (n/map-qualifier-node false "my-prefix")\n       n/string)\n   ;; \x3d\x3e ":my-prefix"\n\n   ;; auto-resolved to current ns\n   (-\x3e (n/map-qualifier-node true nil)\n       n/string)\n   ;; \x3d\x3e "::"\n\n   ;; auto-resolve to namespace with alias\n   (-\x3e (n/map-qualifier-node true "my-ns-alias")\n       n/string)\n   ;; \x3d\x3e "::my-ns-alias"\n   ```'],
null)),$APP.re(H2a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null))),$APP.M,"Return number of characters for the string version of `node`."],null)),$APP.re(g2a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null))),$APP.M,'Create node representing the dereferencing of a form\n   where `children` is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/deref-node (n/token-node \'my-var))\n       n/string)\n   ;; \x3d\x3e "@my-var"\n\n   ;; specifying a sequence allows for whitespace between @ and form\n   (-\x3e (n/deref-node [(n/spaces 2)\n                      (n/token-node \'my-var)])\n       n/string)\n   ;; \x3d\x3e "@  my-var"\n   ```'],
null)),$APP.re(b6a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.oJ],null))),$APP.M,"Returns true if `n` is a node representing a symbol."],null)),$APP.re(u6a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[$APP.DE,W3a],null))),$APP.M,"Applies `map-qualifier` context to `node`"],null)),$APP.re(Z5a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null))),$APP.M,"Create node representing a var where `children` is either a\n   sequence of nodes or a single node.\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-\x3e (n/var-node (n/token-node 'my-var))\n       n/string)\n   ;; \x3d\x3e \"#'my-var\"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; prefix and the var\n   (-\x3e (n/var-node [(n/spaces 2)\n                    (n/token-node 'my-var)])\n       n/string)\n   ;; \x3d\x3e \"#'  my-var\"\n   ```"],
null)),$APP.re(v2a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null))),$APP.M,"Removes map-qualifier context for `node`"],null)),$APP.re(G6a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.NI],null),new $APP.H(null,2,5,$APP.I,[$APP.NI,DY],null))),$APP.M,'Create node for an unspecified token of `value`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/token-node \'sym) n/string)\n   ;; \x3d\x3e "sym"\n\n   (-\x3e (n/token-node 42) n/string)\n   ;; \x3d\x3e "42"\n\n   (-\x3e (n/token-node "astring") n/string)\n   ;; \x3d\x3e "\\"astring\\""\n   ```\n\n   To construct strings appearing over multiple lines, see [[string-node]].',
$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,1,5,$APP.I,[$APP.NI],null),new $APP.H(null,2,5,$APP.I,[$APP.NI,DY],null)],null),$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.NI],null),new $APP.H(null,2,5,$APP.I,[$APP.NI,DY],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re(X4a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null))),$APP.M,'Create node representing a single unquote-spliced form where `children`\n   is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/unquote-splicing-node (n/token-node \'my-var))\n       n/string)\n   ;; \x3d\x3e "~@my-var"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; splicing unquote and the splicing unquoted\n   (-\x3e (n/unquote-splicing-node [(n/spaces 2)\n                                 (n/token-node \'my-var)])\n       n/string)\n   ;; \x3d\x3e "~@  my-var"\n   ```'],
null)),$APP.re(A5a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.RJ],null))),$APP.M,'Interleave `nodes` with `", "` nodes.'],null)),$APP.re(e3a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null))),$APP.M,"Returns true if `node` represents Clojure whitespace."],null)),$APP.re($APP.rI,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null))),$APP.M,"Returns keyword representing type of `node`."],
null)),$APP.re(k3a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null))),$APP.M,'Create node representing an unevaled form with `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/uneval-node [(n/spaces 1)\n                       (n/token-node 42)])\n       n/string)\n   ;; \x3d\x3e "#_ 42"\n   ```'],null)),$APP.re(J2a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null))),$APP.M,"Returns true if `node` represents one or more commas."],
null)),$APP.re(d5a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],null))),$APP.M,"Convert string `s` of whitespace to whitespace/newline nodes."],null)),$APP.re($APP.NI,new $APP.h(null,3,[zY,"0.4.0",$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null))),$APP.M,"DEPRECATED: Get first child as a pair of tag/sexpr (if inner node),\n   or just the node's own sexpr. (use explicit analysis of `children`\n   `child-sexprs` instead) "],null)),$APP.re(K5a,
new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.RJ],null))),$APP.M,"Interleave `nodes` with newline nodes."],null)),$APP.re(Q3a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null))),$APP.M,'Create a node representing a map with `children`.\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/map-node [(n/keyword-node :a)\n                    (n/spaces 1)\n                    (n/token-node 1)\n                    (n/spaces 1)\n                    (n/keyword-node :b)\n                    (n/spaces 1)\n                    (n/token-node 2)])\n       (n/string))\n   ;; \x3d\x3e "{:a 1 :b 2}"\n   ```\n\n   Note that rewrite-clj allows the, technically illegal, unbalanced map:\n   ```Clojure\n   (-\x3e (n/map-node [(n/keyword-node :a)])\n       (n/string))\n   ;; \x3d\x3e "{:a}"\n   ```\n   See [docs on unbalanced maps](/doc/01-user-guide.adoc#unbalanced-maps).\n\n   Rewrite-clj also allows the, also technically illegal, map with duplicate keys:\n   ```Clojure\n   (-\x3e (n/map-node [(n/keyword-node :a)\n                    (n/spaces 1)\n                    (n/token-node 1)\n                    (n/spaces 1)\n                    (n/keyword-node :a)\n                    (n/spaces 1)\n                    (n/token-node 2)])\n       (n/string))\n   ;; \x3d\x3e "{:a 1 :a 2}"\n   ```\n   See [docs on maps with duplicate keys](/doc/01-user-guide.adoc#maps-with-duplicate-keys).'],
null)),$APP.re(R2a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null))),$APP.M,"Returns number of characters before children for `node`."],null)),$APP.re(z6a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null))),$APP.M,'Create node representing a single syntax-quoted form where `children`\n   is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/syntax-quote-node (n/token-node \'map))\n       n/string)\n   ;; \x3d\x3e "`map"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; syntax quote and the syntax quoted\n   (-\x3e (n/syntax-quote-node [(n/spaces 3)\n                             (n/token-node \'map)])\n       n/string)\n   ;; \x3d\x3e "`   map"\n   ```'],
null)),$APP.re($APP.HL,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null))),$APP.M,"Return the string version of `node`."],null)),$APP.re(u5a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null))),$APP.M,"Create node representing an anonymous function with `children`.\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-\x3e (n/fn-node [(n/token-node '+)\n                   (n/spaces 1)\n                   (n/token-node 1)\n                   (n/spaces 1)\n                   (n/token-node '%1)])\n       n/string)\n   ;; \x3d\x3e \"#(+ 1 %1)\"\n   ```"],
null)),$APP.re(F2a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null))),$APP.M,'Create a node representing a vector with `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/vector-node [(n/token-node 1)\n                       (n/spaces 1)\n                       (n/token-node 2)\n                       (n/spaces 1)\n                       (n/token-node 3)])\n       n/string)\n   ;; \x3d\x3e "[1 2 3]"\n   ```'],null)),$APP.re(s2a,
new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null))),$APP.M,"Return true if [[sexpr]] is supported for `node`'s element type.\n\n   See [related docs in user guide](/doc/01-user-guide.adoc#not-all-clojure-is-sexpr-able)"],null)),$APP.re(k1a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null))),$APP.M,'Create top-level node wrapping multiple `children`.\n   The forms node is equivalent to an implicit `do` at the top-level.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/forms-node [(n/token-node 1)\n                      (n/spaces 1)\n                      (n/token-node 2)])\n       n/string)\n   ;; \x3d\x3e "1 2"\n   ```\n   '],
null)),$APP.re(y2a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.RJ],null),new $APP.H(null,2,5,$APP.I,[$APP.RJ,$APP.DH],null))),$APP.M,"Return forms for `nodes`. Nodes that do not represent s-expression are skipped.\n\n  Optional `opts` can specify:\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances).",
$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,1,5,$APP.I,[$APP.RJ],null),new $APP.H(null,2,5,$APP.I,[$APP.RJ,$APP.DH],null)],null),$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.RJ],null),new $APP.H(null,2,5,$APP.I,[$APP.RJ,$APP.DH],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re(U4a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],null))),$APP.M,"Create comma node of string `s`, where `s` is one or more comma characters."],
null)),$APP.re(q2a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[T2a],null))),$APP.M,'Create node representing a string value where `lines` can be a sequence of strings or a single string.\n\n  When `lines` is a sequence, the resulting node `tag` will be `:multi-line`, otherwise `:token`.\n\n  `:multi-line` refers to a single string in your source that appears over multiple lines, for example:\n\n  ```Clojure\n  (def s "foo\n            bar\n              baz")\n  ```\n\n  It does not apply to a string that appears on a single line that includes escaped newlines, for example:\n\n  ```Clojure\n  (def s "foo\\nbar\\n\\baz")\n  ```\n\n  Naive examples (see example on escaping below):\n\n  ```Clojure\n  (require \'[rewrite-clj.node :as n])\n\n  (-\x3e (n/string-node "hello")\n      n/string)\n  ;; \x3d\x3e "\\"hello\\""\n\n  (-\x3e (n/string-node ["line1" "" "line3"])\n       n/string)\n  ;; \x3d\x3e "\\"line1\\n\\nline3\\""\n  ```\n\n  This function was originally written to serve the rewrite-clj parser.\n  Escaping and wrapping expectations are non-obvious.\n  - characters within strings are assumed to be escaped\n  - but the string should not wrapped with `\\"`\n\n  Here\'s an example of conforming to these expectations for a string that has escape sequences.\n  (Best to view this on cljdoc, docstring string escaping is confusing).\n\n  ```Clojure\n  (require \'[clojure.string :as string])\n\n  (defn pr-str-unwrapped [s]\n    (apply str (-\x3e s pr-str next butlast)))\n\n  (-\x3e "hey \\" man"\n      pr-str-unwrapped\n      n/string-node\n      n/string)\n  ;; \x3d\x3e "\\"hey \\\\\\" man\\""\n  ```\n\n  To construct strings appearing on a single line, consider [[token-node]].\n  It will handle escaping for you.'],
null)),$APP.re(D6a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],null))),$APP.M,"Create newline node of string `s`, where `s` is one or more linebreak characters."],null)),$APP.re(E6a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null))),$APP.M,"Returns children for `node` converted to Clojure forms.\n\n  Optional `opts` can specify:\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)",
$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null)],null),$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re(b2a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.oJ],null))),$APP.M,"Returns true if `n` is a node representing a keyword."],
null)),$APP.re(I1a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null))),$APP.M,'Create a node representing a set with `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/set-node [(n/token-node 1)\n                    (n/spaces 1)\n                    (n/token-node 2)\n                    (n/spaces 1)\n                    (n/token-node 3)])\n       n/string)\n   ;; \x3d\x3e "#{1 2 3}"\n   ```\n\n   Note that rewrite-clj allows the, technically illegal, set with duplicate values:\n   ```Clojure\n   (-\x3e (n/set-node [(n/token-node 1)\n                    (n/spaces 1)\n                    (n/token-node 1)])\n       (n/string))\n   ;; \x3d\x3e "#{1 1}"\n   ```\n\n   See [docs on sets with duplicate values](/doc/01-user-guide.adoc#sets-with-duplicate-values).'],
null)),$APP.re(P2a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null))),$APP.M,"Return true if `node` cannot be converted to an s-expression element."],null)),$APP.re(g4a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null),new $APP.H(null,2,5,$APP.I,[wY,yY],null))),$APP.M,'Create node representing a reader macro with `macro-node` and `form-node` or `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   ;; here we call with macro-node and form-node\n   (-\x3e (n/reader-macro-node (n/token-node \'my-macro)\n                            (n/token-node 42))\n       n/string)\n   ;; \x3d\x3e "#my-macro 42"\n\n   ;; calling with a sequence of children gives us control over whitespace\n   (-\x3e (n/reader-macro-node [(n/token-node \'my-macro)\n                             (n/spaces 4)\n                             (n/token-node 42)])\n       n/string)\n   ;; \x3d\x3e "#my-macro    42"\n   ```',
$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,1,5,$APP.I,[$APP.BH],null),new $APP.H(null,2,5,$APP.I,[wY,yY],null)],null),$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null),new $APP.H(null,2,5,$APP.I,[wY,yY],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re($APP.aAa,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.MI],null))),$APP.M,"Coerce `form` to node."],null)),$APP.re(n2a,new $APP.h(null,
2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null))),$APP.M,'Create a node representing a list with `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/list-node [(n/token-node 1)\n                     (n/spaces 1)\n                     (n/token-node 2)\n                     (n/spaces 1)\n                     (n/token-node 3)])\n       n/string)\n   ;; \x3d\x3e "(1 2 3)"\n   ```'],null)),$APP.re(T4a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,
$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null),new $APP.H(null,2,5,$APP.I,[CY,$APP.YC],null))),$APP.M,'Create a node representing a form with metadata that renders to the reader syntax.\n\n   When creating manually, you can specify `metadata` and `data` and spacing between the 2 elems will be included:\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/raw-meta-node (n/keyword-node :foo)\n                        (n/vector-node [(n/token-node 2)]))\n        n/string)\n   ;; \x3d\x3e "#^:foo [2]"\n\n   (-\x3e (n/raw-meta-node (n/map-node [:foo (n/spaces 1) 42])\n                        (n/vector-node [(n/token-node 2)]))\n       n/string)\n   ;; \x3d\x3e "#^{:foo 42} [2]"\n   ```\n   When specifying a sequence of `children`, spacing is explicit:\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/raw-meta-node [(n/keyword-node :foo)\n                         (n/spaces 1)\n                         (n/vector-node [(n/token-node 2)])])\n       n/string)\n   ;; \x3d\x3e "#^:foo [2]"\n   ```\n   See also: [[meta-node]]',
$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,1,5,$APP.I,[$APP.BH],null),new $APP.H(null,2,5,$APP.I,[CY,$APP.YC],null)],null),$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null),new $APP.H(null,2,5,$APP.I,[CY,$APP.YC],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re(K3a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null))),$APP.M,"Returns true if `node` can have children."],null)),$APP.re(C4a,
new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null))),$APP.M,'Create node representing an inline evaluation\n   where `children` is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/eval-node (n/list-node [(n/token-node \'inc)\n                                  (n/spaces 1)\n                                  (n/token-node 1)]))\n       n/string)\n   ;; \x3d\x3e "#\x3d(inc 1)"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; prefix and the form\n   (-\x3e (n/eval-node [(n/spaces 3)\n                     (n/list-node [(n/token-node \'inc)\n                                   (n/spaces 1)\n                                   (n/token-node 1)])])\n       n/string)\n   ;; \x3d\x3e "#\x3d   (inc 1)"\n   ```'],
null)),$APP.re(M4a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[f1a],null))),$APP.M,'Create node representing a regex with `pattern-string`.\n   Use same escape rules for `pattern-string` as you would for `(re-pattern "pattern-string")`\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/regex-node "my\\\\.lil.*regex")\n       n/string)\n   ;; \x3d\x3e "#\\"my\\\\.lil.*regex\\""\n   ```'],null)),$APP.re(V4a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,
$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null))),$APP.M,'Create a namespaced map node with `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/namespaced-map-node [(n/map-qualifier-node true "my-ns-alias")\n                               (n/spaces 1)\n                               (n/map-node [(n/keyword-node :a)\n                                            (n/spaces 1)\n                                            (n/token-node 1)])])\n       n/string)\n   ;; \x3d\x3e "#::my-ns-alias {:a 1}"\n   ```\n\n   Map qualifier context is automatically applied to map keys for sexpr support.\n\n   See also [[map-qualifier-node]] and [[map-node]].'],
null)),$APP.re(d3a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null))),$APP.M,"Returns true if `node` represents one or more linebreaks."],null)),$APP.re(O1a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null))),$APP.M,'Create node representing a single unquoted form where `children`\n   is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/unquote-node (n/token-node \'my-var))\n       n/string)\n   ;; \x3d\x3e "~my-var"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; unquote and the uquoted\n   (-\x3e (n/unquote-node [(n/spaces 4)\n                        (n/token-node \'my-var)])\n       n/string)\n   ;; \x3d\x3e "~    my-var"\n   ```'],
null)),$APP.re($APP.BH,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null))),$APP.M,"Returns child nodes for `node`."],null)),$APP.re(r5a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null))),$APP.M,"Create node representing a single quoted form where `children`\n   is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-\x3e (n/quote-node (n/token-node 'sym))\n       (n/string))\n   ;; \x3d\x3e \"'sym\"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; quote and the quoted\n   (-\x3e (n/quote-node [(n/spaces 10)\n                      (n/token-node 'sym1) ])\n       n/string)\n   ;; \x3d\x3e \"'          sym1\"\n   ```"],
null)),$APP.re(Z0a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[$APP.nJ,qY],null),new $APP.H(null,1,5,$APP.I,[$APP.nJ],null))),$APP.M,'Create a node representing a keyword `k`.\n\n   Optionally include `auto-resolved?`, which defaults to `false`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   ;; unqualified keyword\n   (-\x3e (n/keyword-node :kw)\n       n/string)\n   ;; \x3d\x3e ":kw"\n\n   ;; qualified keyword\n   (-\x3e (n/keyword-node :my-prefix/kw)\n       n/string)\n   ;; \x3d\x3e ":my-prefix/kw"\n\n   ;; keyword auto-resolved to current ns\n   (-\x3e (n/keyword-node :kw true)\n       n/string)\n   ;; \x3d\x3e "::kw"\n\n   ;; keyword auto-resolved to a namespace with given alias\n   (-\x3e (n/keyword-node :ns-alias/kw true)\n       n/string)\n   ;; \x3d\x3e "::ns-alias/kw"\n   ```',
$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[$APP.nJ,qY],null),new $APP.H(null,1,5,$APP.I,[$APP.nJ],null)],null),$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[$APP.nJ,qY],null),new $APP.H(null,1,5,$APP.I,[$APP.nJ],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re(A2a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.NI],null),new $APP.H(null,2,5,$APP.I,[$APP.NI,$APP.kI],null))),$APP.M,'Create node representing an integer `value` in `base`.\n\n  `base` defaults to 10.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/integer-node 42)\n       n/string)\n   ;; \x3d\x3e "42"\n\n   (-\x3e (n/integer-node 31 2)\n       n/string)\n   ;; \x3d\x3e "2r11111"\n   ```\n\n   Note: the parser does not currently parse to integer-nodes, but they fully supported for output.',
$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,1,5,$APP.I,[$APP.NI],null),new $APP.H(null,2,5,$APP.I,[$APP.NI,$APP.kI],null)],null),$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.NI],null),new $APP.H(null,2,5,$APP.I,[$APP.NI,$APP.kI],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re(F6a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null))),$APP.M,"Returns true if `node` is a comment."],null)),
$APP.re(S5a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],null),new $APP.H(null,2,5,$APP.I,[$APP.iF,$APP.vJ],null))),$APP.M,'Create node representing a comment with text `s`.\n\n   You may optionally specify a `prefix` of `";"` or `"#!"`, defaults is `";"`.\n\n   Argument `s`:\n   - must not include the `prefix`\n   - usually includes the trailing newline character, otherwise subsequent nodes will be on the comment line\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/comment-node "; my comment\\n")\n       n/string)\n   ;; \x3d\x3e ";; my comment\\n"\n\n   (-\x3e (n/comment-node "#!" "/usr/bin/env bb\\n")\n       n/string)\n   ;; \x3d\x3e "#!/usr/bin/env bb\\n"\n   ```',
$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,1,5,$APP.I,[$APP.vJ],null),new $APP.H(null,2,5,$APP.I,[$APP.iF,$APP.vJ],null)],null),$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],null),new $APP.H(null,2,5,$APP.I,[$APP.iF,$APP.vJ],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re(w3a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.oJ],null))),$APP.M,"Create node representing `n` spaces."],null)),
$APP.re(P5a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],null))),$APP.M,"Create whitespace node of string `s`, where `s` is one or more space characters."],null)),$APP.re(u2a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null))),$APP.M,"Check whether the given node represents whitespace or comment."],null)),$APP.re(c5a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.yJ],null))),$APP.M,"Returns true if `x` is a rewrite-clj created node."],
null)),$APP.re(C6a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null),new $APP.H(null,2,5,$APP.I,[CY,$APP.YC],null))),$APP.M,'Create a node representing a form with metadata.\n\n   When creating manually, you can specify `metadata` and `data` and spacing between the 2 elems will be included:\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/meta-node (n/keyword-node :foo)\n                    (n/vector-node [(n/token-node 1)]))\n       n/string)\n   ;; \x3d\x3e "^:foo [1]"\n\n   (-\x3e (n/meta-node (n/map-node [:foo (n/spaces 1) 42])\n                    (n/vector-node [(n/token-node 1)]))\n       n/string)\n   ;; \x3d\x3e "^{:foo 42} [1]"\n   ```\n   When specifying a sequence of `children`, spacing is explicit:\n\n   ```Clojure\n   (-\x3e (n/meta-node [(n/keyword-node :foo)\n                     (n/spaces 1)\n                     (n/vector-node [(n/token-node 1)])])\n       n/string)\n   ;; \x3d\x3e "^:foo [1]"\n   ```\n   See also: [[raw-meta-node]]',
$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,1,5,$APP.I,[$APP.BH],null),new $APP.H(null,2,5,$APP.I,[CY,$APP.YC],null)],null),$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null),new $APP.H(null,2,5,$APP.I,[CY,$APP.YC],null)),$APP.aG,$APP.J(null,null)],null)],null))],[new $APP.h(null,3,[$APP.N,Y2a,$APP.hu,function(a,b){return FV(a,b)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.BH],null)),$APP.M,
"Returns `node` replacing current children with `children`."],null)],null),new $APP.h(null,3,[$APP.N,w5a,$APP.hu,function(a){return uW(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.oJ],null)),$APP.M,"Create node representing `n` newline characters."],null)],null),new $APP.h(null,3,[$APP.N,t2a,$APP.hu,KY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null)),$APP.M,"Return `node` converted to form.\n\n  Optional `opts` can specify:\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances)."],
null)],null),new $APP.h(null,3,[$APP.N,M1a,$APP.hu,function(a,b){return new zW(a,b,null,null,null)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[qY,$APP.iF],null)),$APP.M,'Create a map qualifier node.\n   The map qualifier node is a child node of [[namespaced-map-node]].\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   ;; qualified\n   (-\x3e (n/map-qualifier-node false "my-prefix")\n       n/string)\n   ;; \x3d\x3e ":my-prefix"\n\n   ;; auto-resolved to current ns\n   (-\x3e (n/map-qualifier-node true nil)\n       n/string)\n   ;; \x3d\x3e "::"\n\n   ;; auto-resolve to namespace with alias\n   (-\x3e (n/map-qualifier-node true "my-ns-alias")\n       n/string)\n   ;; \x3d\x3e "::my-ns-alias"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.N,R3a,$APP.hu,function(a){return xV(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null)),$APP.M,"Return number of characters for the string version of `node`."],null)],null),new $APP.h(null,3,[$APP.N,T5a,$APP.hu,function(a){return $Za(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null)),$APP.M,'Create node representing the dereferencing of a form\n   where `children` is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/deref-node (n/token-node \'my-var))\n       n/string)\n   ;; \x3d\x3e "@my-var"\n\n   ;; specifying a sequence allows for whitespace between @ and form\n   (-\x3e (n/deref-node [(n/spaces 2)\n                      (n/token-node \'my-var)])\n       n/string)\n   ;; \x3d\x3e "@  my-var"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.N,S1a,$APP.hu,function(a){return $APP.x.h($APP.zm,uV(a))},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.oJ],null)),$APP.M,"Returns true if `n` is a node representing a symbol."],null)],null),new $APP.h(null,3,[$APP.N,D1a,$APP.hu,function(a,b){return KV(a,b)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[$APP.DE,W3a],null)),$APP.M,"Applies `map-qualifier` context to `node`"],null)],null),new $APP.h(null,3,[$APP.N,
Z1a,$APP.hu,function(a){return YZa(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null)),$APP.M,"Create node representing a var where `children` is either a\n   sequence of nodes or a single node.\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-\x3e (n/var-node (n/token-node 'my-var))\n       n/string)\n   ;; \x3d\x3e \"#'my-var\"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; prefix and the var\n   (-\x3e (n/var-node [(n/spaces 2)\n                    (n/token-node 'my-var)])\n       n/string)\n   ;; \x3d\x3e \"#'  my-var\"\n   ```"],
null)],null),new $APP.h(null,3,[$APP.N,z5a,$APP.hu,function(a){return LV(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null)),$APP.M,"Removes map-qualifier context for `node`"],null)],null),new $APP.h(null,3,[$APP.N,e2a,$APP.hu,SY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.NI],null),new $APP.H(null,2,5,$APP.I,[$APP.NI,DY],null)),$APP.M,'Create node for an unspecified token of `value`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/token-node \'sym) n/string)\n   ;; \x3d\x3e "sym"\n\n   (-\x3e (n/token-node 42) n/string)\n   ;; \x3d\x3e "42"\n\n   (-\x3e (n/token-node "astring") n/string)\n   ;; \x3d\x3e "\\"astring\\""\n   ```\n\n   To construct strings appearing over multiple lines, see [[string-node]].'],
null)],null),new $APP.h(null,3,[$APP.N,C3a,$APP.hu,function(a){return WZa(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null)),$APP.M,'Create node representing a single unquote-spliced form where `children`\n   is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/unquote-splicing-node (n/token-node \'my-var))\n       n/string)\n   ;; \x3d\x3e "~@my-var"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; splicing unquote and the splicing unquoted\n   (-\x3e (n/unquote-splicing-node [(n/spaces 2)\n                                 (n/token-node \'my-var)])\n       n/string)\n   ;; \x3d\x3e "~@  my-var"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.N,r3a,$APP.hu,function(a){return NZa(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.RJ],null)),$APP.M,'Interleave `nodes` with `", "` nodes.'],null)],null),new $APP.h(null,3,[$APP.N,m2a,$APP.hu,function(a){return vW(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null)),$APP.M,"Returns true if `node` represents Clojure whitespace."],null)],null),new $APP.h(null,3,[$APP.N,X1a,$APP.hu,function(a){return tV(a)},
$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null)),$APP.M,"Returns keyword representing type of `node`."],null)],null),new $APP.h(null,3,[$APP.N,$0a,$APP.hu,function(a){return f_a(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null)),$APP.M,'Create node representing an unevaled form with `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/uneval-node [(n/spaces 1)\n                       (n/token-node 42)])\n       n/string)\n   ;; \x3d\x3e "#_ 42"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.N,B4a,$APP.hu,function(a){return $APP.x.h(tV(a),qW)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null)),$APP.M,"Returns true if `node` represents one or more commas."],null)],null),new $APP.h(null,3,[$APP.N,A1a,$APP.hu,function(a){return LZa(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],null)),$APP.M,"Convert string `s` of whitespace to whitespace/newline nodes."],null)],null),new $APP.h(null,
3,[$APP.N,T0a,$APP.hu,function(a){return qZa(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null)),$APP.M,"DEPRECATED: Get first child as a pair of tag/sexpr (if inner node),\n   or just the node's own sexpr. (use explicit analysis of `children`\n   `child-sexprs` instead) "],null)],null),new $APP.h(null,3,[$APP.N,D2a,$APP.hu,function(a){return $APP.Ei($APP.bn.h(a,$APP.jn.g(S6a)))},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.RJ],null)),
$APP.M,"Interleave `nodes` with newline nodes."],null)],null),new $APP.h(null,3,[$APP.N,a1a,$APP.hu,function(a){return LW(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null)),$APP.M,'Create a node representing a map with `children`.\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/map-node [(n/keyword-node :a)\n                    (n/spaces 1)\n                    (n/token-node 1)\n                    (n/spaces 1)\n                    (n/keyword-node :b)\n                    (n/spaces 1)\n                    (n/token-node 2)])\n       (n/string))\n   ;; \x3d\x3e "{:a 1 :b 2}"\n   ```\n\n   Note that rewrite-clj allows the, technically illegal, unbalanced map:\n   ```Clojure\n   (-\x3e (n/map-node [(n/keyword-node :a)])\n       (n/string))\n   ;; \x3d\x3e "{:a}"\n   ```\n   See [docs on unbalanced maps](/doc/01-user-guide.adoc#unbalanced-maps).\n\n   Rewrite-clj also allows the, also technically illegal, map with duplicate keys:\n   ```Clojure\n   (-\x3e (n/map-node [(n/keyword-node :a)\n                    (n/spaces 1)\n                    (n/token-node 1)\n                    (n/spaces 1)\n                    (n/keyword-node :a)\n                    (n/spaces 1)\n                    (n/token-node 2)])\n       (n/string))\n   ;; \x3d\x3e "{:a 1 :a 2}"\n   ```\n   See [docs on maps with duplicate keys](/doc/01-user-guide.adoc#maps-with-duplicate-keys).'],
null)],null),new $APP.h(null,3,[$APP.N,X2a,$APP.hu,function(a){return GV(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null)),$APP.M,"Returns number of characters before children for `node`."],null)],null),new $APP.h(null,3,[$APP.N,R1a,$APP.hu,function(a){return UZa(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null)),$APP.M,'Create node representing a single syntax-quoted form where `children`\n   is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/syntax-quote-node (n/token-node \'map))\n       n/string)\n   ;; \x3d\x3e "`map"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; syntax quote and the syntax quoted\n   (-\x3e (n/syntax-quote-node [(n/spaces 3)\n                             (n/token-node \'map)])\n       n/string)\n   ;; \x3d\x3e "`   map"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.N,s5a,$APP.hu,function(a){return yV(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null)),$APP.M,"Return the string version of `node`."],null)],null),new $APP.h(null,3,[$APP.N,R4a,$APP.hu,function(a){return new RV(a,null,null,null)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null)),$APP.M,"Create node representing an anonymous function with `children`.\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-\x3e (n/fn-node [(n/token-node '+)\n                   (n/spaces 1)\n                   (n/token-node 1)\n                   (n/spaces 1)\n                   (n/token-node '%1)])\n       n/string)\n   ;; \x3d\x3e \"#(+ 1 %1)\"\n   ```"],
null)],null),new $APP.h(null,3,[$APP.N,e1a,$APP.hu,function(a){return JW(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null)),$APP.M,'Create a node representing a vector with `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/vector-node [(n/token-node 1)\n                       (n/spaces 1)\n                       (n/token-node 2)\n                       (n/spaces 1)\n                       (n/token-node 3)])\n       n/string)\n   ;; \x3d\x3e "[1 2 3]"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.N,z4a,$APP.hu,function(a){return $APP.Cb(vV(a))},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null)),$APP.M,"Return true if [[sexpr]] is supported for `node`'s element type.\n\n   See [related docs in user guide](/doc/01-user-guide.adoc#not-all-clojure-is-sexpr-able)"],null)],null),new $APP.h(null,3,[$APP.N,d6a,$APP.hu,function(a){return new SV(a,null,null,null)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,
[$APP.BH],null)),$APP.M,'Create top-level node wrapping multiple `children`.\n   The forms node is equivalent to an implicit `do` at the top-level.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/forms-node [(n/token-node 1)\n                      (n/spaces 1)\n                      (n/token-node 2)])\n       n/string)\n   ;; \x3d\x3e "1 2"\n   ```\n   '],null)],null),new $APP.h(null,3,[$APP.N,q3a,$APP.hu,LY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,
[$APP.RJ],null),new $APP.H(null,2,5,$APP.I,[$APP.RJ,$APP.DH],null)),$APP.M,"Return forms for `nodes`. Nodes that do not represent s-expression are skipped.\n\n  Optional `opts` can specify:\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances)."],null)],null),new $APP.h(null,3,[$APP.N,D3a,$APP.hu,function(a){return new nW(a,
null,null,null)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],null)),$APP.M,"Create comma node of string `s`, where `s` is one or more comma characters."],null)],null),new $APP.h(null,3,[$APP.N,k4a,$APP.hu,function(a){return NW(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[T2a],null)),$APP.M,'Create node representing a string value where `lines` can be a sequence of strings or a single string.\n\n  When `lines` is a sequence, the resulting node `tag` will be `:multi-line`, otherwise `:token`.\n\n  `:multi-line` refers to a single string in your source that appears over multiple lines, for example:\n\n  ```Clojure\n  (def s "foo\n            bar\n              baz")\n  ```\n\n  It does not apply to a string that appears on a single line that includes escaped newlines, for example:\n\n  ```Clojure\n  (def s "foo\\nbar\\n\\baz")\n  ```\n\n  Naive examples (see example on escaping below):\n\n  ```Clojure\n  (require \'[rewrite-clj.node :as n])\n\n  (-\x3e (n/string-node "hello")\n      n/string)\n  ;; \x3d\x3e "\\"hello\\""\n\n  (-\x3e (n/string-node ["line1" "" "line3"])\n       n/string)\n  ;; \x3d\x3e "\\"line1\\n\\nline3\\""\n  ```\n\n  This function was originally written to serve the rewrite-clj parser.\n  Escaping and wrapping expectations are non-obvious.\n  - characters within strings are assumed to be escaped\n  - but the string should not wrapped with `\\"`\n\n  Here\'s an example of conforming to these expectations for a string that has escape sequences.\n  (Best to view this on cljdoc, docstring string escaping is confusing).\n\n  ```Clojure\n  (require \'[clojure.string :as string])\n\n  (defn pr-str-unwrapped [s]\n    (apply str (-\x3e s pr-str next butlast)))\n\n  (-\x3e "hey \\" man"\n      pr-str-unwrapped\n      n/string-node\n      n/string)\n  ;; \x3d\x3e "\\"hey \\\\\\" man\\""\n  ```\n\n  To construct strings appearing on a single line, consider [[token-node]].\n  It will handle escaping for you.'],
null)],null),new $APP.h(null,3,[$APP.N,B1a,$APP.hu,function(a){return pW(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],null)),$APP.M,"Create newline node of string `s`, where `s` is one or more linebreak characters."],null)],null),new $APP.h(null,3,[$APP.N,l5a,$APP.hu,JY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null)),$APP.M,"Returns children for `node` converted to Clojure forms.\n\n  Optional `opts` can specify:\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)"],
null)],null),new $APP.h(null,3,[$APP.N,N4a,$APP.hu,function(a){return $APP.x.h($APP.Dm,uV(a))},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.oJ],null)),$APP.M,"Returns true if `n` is a node representing a keyword."],null)],null),new $APP.h(null,3,[$APP.N,I3a,$APP.hu,function(a){return KW(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null)),$APP.M,'Create a node representing a set with `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/set-node [(n/token-node 1)\n                    (n/spaces 1)\n                    (n/token-node 2)\n                    (n/spaces 1)\n                    (n/token-node 3)])\n       n/string)\n   ;; \x3d\x3e "#{1 2 3}"\n   ```\n\n   Note that rewrite-clj allows the, technically illegal, set with duplicate values:\n   ```Clojure\n   (-\x3e (n/set-node [(n/token-node 1)\n                    (n/spaces 1)\n                    (n/token-node 1)])\n       (n/string))\n   ;; \x3d\x3e "#{1 1}"\n   ```\n\n   See [docs on sets with duplicate values](/doc/01-user-guide.adoc#sets-with-duplicate-values).'],
null)],null),new $APP.h(null,3,[$APP.N,s6a,$APP.hu,function(a){return vV(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null)),$APP.M,"Return true if `node` cannot be converted to an s-expression element."],null)],null),new $APP.h(null,3,[$APP.N,h4a,$APP.hu,RY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null),new $APP.H(null,2,5,$APP.I,[wY,yY],null)),$APP.M,'Create node representing a reader macro with `macro-node` and `form-node` or `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   ;; here we call with macro-node and form-node\n   (-\x3e (n/reader-macro-node (n/token-node \'my-macro)\n                            (n/token-node 42))\n       n/string)\n   ;; \x3d\x3e "#my-macro 42"\n\n   ;; calling with a sequence of children gives us control over whitespace\n   (-\x3e (n/reader-macro-node [(n/token-node \'my-macro)\n                             (n/spaces 4)\n                             (n/token-node 42)])\n       n/string)\n   ;; \x3d\x3e "#my-macro    42"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.N,f2a,$APP.hu,function(a){return IV(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.MI],null)),$APP.M,"Coerce `form` to node."],null)],null),new $APP.h(null,3,[$APP.N,k5a,$APP.hu,function(a){return IW(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null)),$APP.M,'Create a node representing a list with `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/list-node [(n/token-node 1)\n                     (n/spaces 1)\n                     (n/token-node 2)\n                     (n/spaces 1)\n                     (n/token-node 3)])\n       n/string)\n   ;; \x3d\x3e "(1 2 3)"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.N,F1a,$APP.hu,QY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null),new $APP.H(null,2,5,$APP.I,[CY,$APP.YC],null)),$APP.M,'Create a node representing a form with metadata that renders to the reader syntax.\n\n   When creating manually, you can specify `metadata` and `data` and spacing between the 2 elems will be included:\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/raw-meta-node (n/keyword-node :foo)\n                        (n/vector-node [(n/token-node 2)]))\n        n/string)\n   ;; \x3d\x3e "#^:foo [2]"\n\n   (-\x3e (n/raw-meta-node (n/map-node [:foo (n/spaces 1) 42])\n                        (n/vector-node [(n/token-node 2)]))\n       n/string)\n   ;; \x3d\x3e "#^{:foo 42} [2]"\n   ```\n   When specifying a sequence of `children`, spacing is explicit:\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/raw-meta-node [(n/keyword-node :foo)\n                         (n/spaces 1)\n                         (n/vector-node [(n/token-node 2)])])\n       n/string)\n   ;; \x3d\x3e "#^:foo [2]"\n   ```\n   See also: [[meta-node]]'],
null)],null),new $APP.h(null,3,[$APP.N,t5a,$APP.hu,function(a){return DV(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null)),$APP.M,"Returns true if `node` can have children."],null)],null),new $APP.h(null,3,[$APP.N,w4a,$APP.hu,function(a){return ZZa(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null)),$APP.M,'Create node representing an inline evaluation\n   where `children` is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/eval-node (n/list-node [(n/token-node \'inc)\n                                  (n/spaces 1)\n                                  (n/token-node 1)]))\n       n/string)\n   ;; \x3d\x3e "#\x3d(inc 1)"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; prefix and the form\n   (-\x3e (n/eval-node [(n/spaces 3)\n                     (n/list-node [(n/token-node \'inc)\n                                   (n/spaces 1)\n                                   (n/token-node 1)])])\n       n/string)\n   ;; \x3d\x3e "#\x3d   (inc 1)"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.N,M6a,$APP.hu,function(a){return new GW(a,null,null,null)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[f1a],null)),$APP.M,'Create node representing a regex with `pattern-string`.\n   Use same escape rules for `pattern-string` as you would for `(re-pattern "pattern-string")`\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/regex-node "my\\\\.lil.*regex")\n       n/string)\n   ;; \x3d\x3e "#\\"my\\\\.lil.*regex\\""\n   ```'],
null)],null),new $APP.h(null,3,[$APP.N,U1a,$APP.hu,function(a){return new AW(RZa(a),null,null,null)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null)),$APP.M,'Create a namespaced map node with `children`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/namespaced-map-node [(n/map-qualifier-node true "my-ns-alias")\n                               (n/spaces 1)\n                               (n/map-node [(n/keyword-node :a)\n                                            (n/spaces 1)\n                                            (n/token-node 1)])])\n       n/string)\n   ;; \x3d\x3e "#::my-ns-alias {:a 1}"\n   ```\n\n   Map qualifier context is automatically applied to map keys for sexpr support.\n\n   See also [[map-qualifier-node]] and [[map-node]].'],
null)],null),new $APP.h(null,3,[$APP.N,A4a,$APP.hu,function(a){return wW(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null)),$APP.M,"Returns true if `node` represents one or more linebreaks."],null)],null),new $APP.h(null,3,[$APP.N,O6a,$APP.hu,function(a){return VZa(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null)),$APP.M,'Create node representing a single unquoted form where `children`\n   is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/unquote-node (n/token-node \'my-var))\n       n/string)\n   ;; \x3d\x3e "~my-var"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; unquote and the uquoted\n   (-\x3e (n/unquote-node [(n/spaces 4)\n                        (n/token-node \'my-var)])\n       n/string)\n   ;; \x3d\x3e "~    my-var"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.N,y6a,$APP.hu,function(a){return EV(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null)),$APP.M,"Returns child nodes for `node`."],null)],null),new $APP.h(null,3,[$APP.N,S2a,$APP.hu,function(a){return TZa(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null)),$APP.M,"Create node representing a single quoted form where `children`\n   is either a sequence of nodes or a single node.\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-\x3e (n/quote-node (n/token-node 'sym))\n       (n/string))\n   ;; \x3d\x3e \"'sym\"\n\n   ;; specifying a sequence allows for whitespace between the\n   ;; quote and the quoted\n   (-\x3e (n/quote-node [(n/spaces 10)\n                      (n/token-node 'sym1) ])\n       n/string)\n   ;; \x3d\x3e \"'          sym1\"\n   ```"],
null)],null),new $APP.h(null,3,[$APP.N,u3a,$APP.hu,OY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[$APP.nJ,qY],null),new $APP.H(null,1,5,$APP.I,[$APP.nJ],null)),$APP.M,'Create a node representing a keyword `k`.\n\n   Optionally include `auto-resolved?`, which defaults to `false`.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   ;; unqualified keyword\n   (-\x3e (n/keyword-node :kw)\n       n/string)\n   ;; \x3d\x3e ":kw"\n\n   ;; qualified keyword\n   (-\x3e (n/keyword-node :my-prefix/kw)\n       n/string)\n   ;; \x3d\x3e ":my-prefix/kw"\n\n   ;; keyword auto-resolved to current ns\n   (-\x3e (n/keyword-node :kw true)\n       n/string)\n   ;; \x3d\x3e "::kw"\n\n   ;; keyword auto-resolved to a namespace with given alias\n   (-\x3e (n/keyword-node :ns-alias/kw true)\n       n/string)\n   ;; \x3d\x3e "::ns-alias/kw"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.N,M5a,$APP.hu,NY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.NI],null),new $APP.H(null,2,5,$APP.I,[$APP.NI,$APP.kI],null)),$APP.M,'Create node representing an integer `value` in `base`.\n\n  `base` defaults to 10.\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/integer-node 42)\n       n/string)\n   ;; \x3d\x3e "42"\n\n   (-\x3e (n/integer-node 31 2)\n       n/string)\n   ;; \x3d\x3e "2r11111"\n   ```\n\n   Note: the parser does not currently parse to integer-nodes, but they fully supported for output.'],
null)],null),new $APP.h(null,3,[$APP.N,i2a,$APP.hu,function(a){return QV(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null)),$APP.M,"Returns true if `node` is a comment."],null)],null),new $APP.h(null,3,[$APP.N,W1a,$APP.hu,MY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],null),new $APP.H(null,2,5,$APP.I,[$APP.iF,$APP.vJ],null)),$APP.M,'Create node representing a comment with text `s`.\n\n   You may optionally specify a `prefix` of `";"` or `"#!"`, defaults is `";"`.\n\n   Argument `s`:\n   - must not include the `prefix`\n   - usually includes the trailing newline character, otherwise subsequent nodes will be on the comment line\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/comment-node "; my comment\\n")\n       n/string)\n   ;; \x3d\x3e ";; my comment\\n"\n\n   (-\x3e (n/comment-node "#!" "/usr/bin/env bb\\n")\n       n/string)\n   ;; \x3d\x3e "#!/usr/bin/env bb\\n"\n   ```'],
null)],null),new $APP.h(null,3,[$APP.N,M2a,$APP.hu,function(a){return tW(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.oJ],null)),$APP.M,"Create node representing `n` spaces."],null)],null),new $APP.h(null,3,[$APP.N,G2a,$APP.hu,function(a){return mW(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],null)),$APP.M,"Create whitespace node of string `s`, where `s` is one or more space characters."],null)],null),new $APP.h(null,3,[$APP.N,
o2a,$APP.hu,function(a){return m_a(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null)),$APP.M,"Check whether the given node represents whitespace or comment."],null)],null),new $APP.h(null,3,[$APP.N,d1a,$APP.hu,function(a){return null!=a&&$APP.ti.h(e5a,tV(a))},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.yJ],null)),$APP.M,"Returns true if `x` is a rewrite-clj created node."],null)],null),new $APP.h(null,3,[$APP.N,s3a,$APP.hu,PY,$APP.nb,
new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.BH],null),new $APP.H(null,2,5,$APP.I,[CY,$APP.YC],null)),$APP.M,'Create a node representing a form with metadata.\n\n   When creating manually, you can specify `metadata` and `data` and spacing between the 2 elems will be included:\n\n   ```Clojure\n   (require \'[rewrite-clj.node :as n])\n\n   (-\x3e (n/meta-node (n/keyword-node :foo)\n                    (n/vector-node [(n/token-node 1)]))\n       n/string)\n   ;; \x3d\x3e "^:foo [1]"\n\n   (-\x3e (n/meta-node (n/map-node [:foo (n/spaces 1) 42])\n                    (n/vector-node [(n/token-node 1)]))\n       n/string)\n   ;; \x3d\x3e "^{:foo 42} [1]"\n   ```\n   When specifying a sequence of `children`, spacing is explicit:\n\n   ```Clojure\n   (-\x3e (n/meta-node [(n/keyword-node :foo)\n                     (n/spaces 1)\n                     (n/vector-node [(n/token-node 1)])])\n       n/string)\n   ;; \x3d\x3e "^:foo [1]"\n   ```\n   See also: [[raw-meta-node]]'],
null)],null)]),T6a),Y6a=$APP.iu(new $APP.h(null,2,[$APP.re($APP.RCa,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],null))),$APP.M,"Return a node for first source code element in string `s`."],null)),new $APP.h(null,3,[$APP.N,m4a,$APP.hu,function(a){return kW($APP.Gl($APP.Fl(a)))},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],null)),$APP.M,"Return a node for first source code element in string `s`."],null)],null),$APP.re($APP.FDa,
new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],null))),$APP.M,"Return forms node for all source code elements in string `s`."],null)),new $APP.h(null,3,[$APP.N,U5a,$APP.hu,K_a,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],null)),$APP.M,"Return forms node for all source code elements in string `s`."],null)],null)],null),U6a),Z6a=$APP.iu($APP.gi([$APP.re($APP.ML,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,
$APP.I,[sY],null))),$APP.M,"Split current s-sexpression in two at given node `zloc`\n\n  -  `[1 2 |3 4 5] \x3d\x3e [1 2 3] [4 5]`"],null)),$APP.re(Y4a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.wG],null))),$APP.M,'In string and comment aware kill for one node/word at `pos` in `zloc`.\n\n  - `(+ |100 100) \x3d\x3e (+ |100)`\n  - `(for |(bar do)) \x3d\x3e (foo)`\n  - `"|hello world" \x3d\x3e "| world"`\n  - ` ; |hello world \x3d\x3e ;  |world`'],null)),$APP.re(E5a,
new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.uJ],null))),$APP.M,"Wrap current node with a given type `t` where `t` can be one of `:vector`, `:list`, `:set`, `:map` `:fn`.\n\n  - `|123 \x3d\x3e [|123]` given `:vector`\n  - `|[1 [2]] \x3d\x3e [|[1 [2]]]`"],null)),$APP.re(h3a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Pull in next right outer node (if none at first level, tries next etc) into\n  current S-expression\n\n  - `[1 2 [|3] 4 5] \x3d\x3e [1 2 [|3 4] 5]`"],
null)),$APP.re($APP.CB,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,'Join S-expression to the left and right of current loc. Also works for strings.\n\n  - `[[1 2] |[3 4]] \x3d\x3e [[1 2 3 4]]`\n  - `["Hello " | "World"] \x3d\x3e ["Hello World"]`'],null)),$APP.re(t1a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Remove left siblings of current given node in S-Expression and unwrap remaining into enclosing S-expression\n\n  - `(foo (let ((x 5)) |(sqrt n)) bar) \x3d\x3e (foo (sqrt n) bar)`"],
null)),$APP.re(h6a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.uJ],null))),$APP.M,"Create a new seq node of type `t` left of `zloc` then slurp fully into the new node\n\n  - `[1 |2 3 4] \x3d\x3e [1 [|2 3 4]]`"],null)),$APP.re(t3a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.wG],null))),$APP.M,"In string aware split\n\n  Perform split at given position `pos` Like split, but:\n\n  - if inside string splits string into two strings\n\n  `pos` should provide `{:row :col }` which are relative to the start of the given form the zipper represents\n  `zloc` must be positioned at a node previous (given depth first) to the node at given pos"],
null)),$APP.re(Y1a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Pull in prev left outer node (if none at first level, tries next etc) into\n  current S-expression\n\n  - `[1 2 [|3] 4 5] \x3d\x3e [1 [2 |3] 4 5]`"],null)),$APP.re(H6a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Move node at current location to the position of previous location given a depth first traversal\n\n    -  `(+ 1 (+ 2 |3) 4) \x3d\x3e (+ 1 (+ |3 2) 4)`\n    - `(+ 1 (+ 2 3) |4) \x3d\x3e (+ 1 (+ 2 3 |4))`\n\n  returns zloc after move or given zloc if a move isn't possible"],
null)),$APP.re(J5a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Push out the rightmost node of the current S-expression into outer right form.\n\n  - `[1 2 [|3 4] 5] \x3d\x3e [1 2 [|3] 4 5]`"],null)),$APP.re(d2a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Kill all sibling nodes to the right of the current node in `zloc`.\n\n  - `[1 2| 3 4] \x3d\x3e [1 2|]`"],null)),$APP.re(q1a,new $APP.h(null,2,
[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Pull in all left outer-nodes into current S-expression, but only the ones at the same level\n  as the the first one.\n\n  - `[1 2 [|3] 4 5] \x3d\x3e [[1 2 |3] 4 5]`"],null)),$APP.re(F5a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Remove current given node and its right siblings in S-Expression and unwrap remaining into enclosing S-expression\n\n  - `(a (b c |d e) f) \x3d\x3e (a b |c f)`"],
null)),$APP.re(b3a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Delete siblings and raise node at zloc one level up\n\n  - `[1 [2 |3 4]] \x3d\x3e [1 |3]`"],null)),$APP.re(a4a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.wG],null))),$APP.M,"In string and comment aware kill\n\n  Perform kill for given position `pos` Like [[kill]], but:\n\n  - if inside string kills to end of string and stops there\n  - If inside comment kills to end of line (not including linebreak)\n\n  `pos` should provide `{:row :col }` which are relative to the start of the given form the zipper represents\n  `zloc` must be positioned at a node previous (given depth first) to the node at given pos"],
null)),$APP.re(A6a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Push out the leftmost node of the current S-expression into outer left form.\n\n  - `[1 2 [3 |4] 5] \x3d\x3e [1 2 3 [|4] 5]`"],null)),p5a,$APP.re(o3a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Pull in all right outer-nodes into current S-expression, but only the ones at the same level\n  as the the first one.\n\n  - `[1 2 [|3] 4 5] \x3d\x3e [1 2 [|3 4 5]]`"],
null))],[new $APP.h(null,3,[$APP.N,L2a,$APP.hu,Q0a,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Split current s-sexpression in two at given node `zloc`\n\n  -  `[1 2 |3 4 5] \x3d\x3e [1 2 3] [4 5]`"],null)],null),new $APP.h(null,3,[$APP.N,D4a,$APP.hu,function(a,b){var c=N_a(iY,xX,kZ.h(a,b));if($APP.k(c)){var d=n_a(c);a=$APP.y.j(d,0,null);d=$APP.y.j(d,1,null);(a=!($APP.x.h($APP.po.g(b),a)&&$APP.Xl.g(b)<=d))&&oY(c)?b=L0a(c,b):$APP.k(a?L_a(c):a)?(a=$APP.Xl.g($APP.se(YW(c))),
b=cY(c,MY.g(K0a($APP.Sm.g(YW(c)),$APP.Xl.g(b)-a)))):b=null==AX(jX,jX(c))?RX(c):lY(RX(c),YW(KX(c)));return b}return a},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.wG],null)),$APP.M,'In string and comment aware kill for one node/word at `pos` in `zloc`.\n\n  - `(+ |100 100) \x3d\x3e (+ |100)`\n  - `(for |(bar do)) \x3d\x3e (foo)`\n  - `"|hello world" \x3d\x3e "| world"`\n  - ` ; |hello world \x3d\x3e ;  |world`'],null)],null),new $APP.h(null,3,[$APP.N,L1a,$APP.hu,function(a,
b){return LX(D0a(v_a(qX(KX(fY(a,nY(b,null))),xX)),YW(a)))},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.uJ],null)),$APP.M,"Wrap current node with a given type `t` where `t` can be one of `:vector`, `:list`, `:set`, `:map` `:fn`.\n\n  - `|123 \x3d\x3e [|123]` given `:vector`\n  - `|[1 [2]] \x3d\x3e [|[1 [2]]]`"],null)],null),new $APP.h(null,3,[$APP.N,c4a,$APP.hu,M0a,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Pull in next right outer node (if none at first level, tries next etc) into\n  current S-expression\n\n  - `[1 2 [|3] 4 5] \x3d\x3e [1 2 [|3 4] 5]`"],
null)],null),new $APP.h(null,3,[$APP.N,j1a,$APP.hu,function(a){var b=null==a?null:KX(a);var c=null==a?null:YW(a);c=null==c?null:vW(c);c=$APP.k(c)?JX(a):a;if($APP.Cb($APP.k(b)?c:b))b=a;else if(YX(b)&&YX(c)){a=EV(YW(b));b=mY(hX(b),iY,zX);var d=EV(YW(c));b=lY(RX(fY(MX(G0a(pX(c))),nY($APP.um,$APP.K.l(a,b,$APP.z([d]))))),$APP.v(d))}else b=oY(b)&&oY(c)?cY(G0a(pX(c)),NW([$APP.m.g(KY.g(YW(b))),$APP.m.g(KY.g(YW(c)))].join(""))):a;return b},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,
[sY],null)),$APP.M,'Join S-expression to the left and right of current loc. Also works for strings.\n\n  - `[[1 2] |[3 4]] \x3d\x3e [[1 2 3 4]]`\n  - `["Hello " | "World"] \x3d\x3e ["Hello World"]`'],null)],null),new $APP.h(null,3,[$APP.N,Y0a,$APP.hu,function(a){return P0a(a,rX)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Remove left siblings of current given node in S-Expression and unwrap remaining into enclosing S-expression\n\n  - `(foo (let ((x 5)) |(sqrt n)) bar) \x3d\x3e (foo (sqrt n) bar)`"],
null)],null),new $APP.h(null,3,[$APP.N,W5a,$APP.hu,function(a,b){return N0a(KX(fY(a,nY(b,null))))},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.uJ],null)),$APP.M,"Create a new seq node of type `t` left of `zloc` then slurp fully into the new node\n\n  - `[1 |2 3 4] \x3d\x3e [1 [|2 3 4]]`"],null)],null),new $APP.h(null,3,[$APP.N,o5a,$APP.hu,function(a,b){var c=kZ.h(a,b);return $APP.k(c)?oY(c)?R0a(c,b):Q0a(c):a},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,
2,5,$APP.I,[sY,$APP.wG],null)),$APP.M,"In string aware split\n\n  Perform split at given position `pos` Like split, but:\n\n  - if inside string splits string into two strings\n\n  `pos` should provide `{:row :col }` which are relative to the start of the given form the zipper represents\n  `zloc` must be positioned at a node previous (given depth first) to the node at given pos"],null)],null),new $APP.h(null,3,[$APP.N,T1a,$APP.hu,O0a,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,
[sY],null)),$APP.M,"Pull in prev left outer node (if none at first level, tries next etc) into\n  current S-expression\n\n  - `[1 2 [|3] 4 5] \x3d\x3e [1 [2 |3] 4 5]`"],null)],null),new $APP.h(null,3,[$APP.N,y3a,$APP.hu,function(a){var b=YW(a),c=function(){var d=null==a?null:KX(a);return null==d?null:YW(d)}();c=null==c||$APP.x.h(YW(RX(a)),c)?function(d){return KX(XX(jX,kX,new $APP.H(null,1,5,$APP.I,[WX],null),d,b))}:function(d){return JX(XX(hX,lX,new $APP.H(null,1,5,$APP.I,[WX],null),d,b))};return $APP.Cb(W_a(RX(a)))?
a:c(RX(a))},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Move node at current location to the position of previous location given a depth first traversal\n\n    -  `(+ 1 (+ 2 |3) 4) \x3d\x3e (+ 1 (+ |3 2) 4)`\n    - `(+ 1 (+ 2 3) |4) \x3d\x3e (+ 1 (+ 2 3 |4))`\n\n  returns zloc after move or given zloc if a move isn't possible"],null)],null),new $APP.h(null,3,[$APP.N,V3a,$APP.hu,function(a){var b=PX(a);if($APP.Cb(MX(a)))return a;var c=$APP.wf($APP.Pg.h(function(d){return wW(d)||
QV(d)},mY(jX(b),A0a,zX)));return function(d){var e=lY(d,YW(a));return $APP.k(e)?e:lY(d,YW(b))}($APP.Pl.h($APP.af,eY)(eY(w_a(qX(rX(b,zX),xX)),YW(b)),c))},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Push out the rightmost node of the current S-expression into outer right form.\n\n  - `[1 2 [|3 4] 5] \x3d\x3e [1 2 [|3] 4 5]`"],null)],null),new $APP.h(null,3,[$APP.N,C1a,$APP.hu,H0a,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),
$APP.M,"Kill all sibling nodes to the right of the current node in `zloc`.\n\n  - `[1 2| 3 4] \x3d\x3e [1 2|]`"],null)],null),new $APP.h(null,3,[$APP.N,V5a,$APP.hu,function(a){var b=function(){var d=null==a?null:pY(a,gY);return null==d?null:$APP.v(d)}(),c=function(){var d=null==b?null:mY(b,gY,$APP.sg);d=null==d?null:$APP.be(d);return null==d?null:d+1}();return $APP.me($APP.Dg.h(c,$APP.Ng(O0a,a)))},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Pull in all left outer-nodes into current S-expression, but only the ones at the same level\n  as the the first one.\n\n  - `[1 2 [|3] 4 5] \x3d\x3e [[1 2 |3] 4 5]`"],
null)],null),new $APP.h(null,3,[$APP.N,K1a,$APP.hu,function(a){var b=MX(a);b=$APP.k(b)?null!=AX(jX,jX(a)):b;return $APP.k(b)?P0a(KX(a),qX):$APP.k(MX(a))?RX(MX(a)):a},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Remove current given node and its right siblings in S-Expression and unwrap remaining into enclosing S-expression\n\n  - `(a (b c |d e) f) \x3d\x3e (a b |c f)`"],null)],null),new $APP.h(null,3,[$APP.N,r6a,$APP.hu,function(a){var b=MX(a);return $APP.k(b)?
cY(b,YW(a)):a},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Delete siblings and raise node at zloc one level up\n\n  - `[1 [2 |3 4]] \x3d\x3e [1 |3]`"],null)],null),new $APP.h(null,3,[$APP.N,B5a,$APP.hu,function(a,b){var c=kZ.h(a,b);$APP.k(c)?oY(c)?b=I0a(c,b):$APP.k(L_a(c))?(a=$APP.Xl.g($APP.se(YW(c))),$APP.x.h($APP.Xl.g(b),a)?b=RX(c):(b=cY(c,MY.g($APP.Yi.j($APP.Sm.g(YW(c)),0,$APP.Xl.g(b)-a-1))),b=$APP.k(hX(b))?C0a(b,uW(1)):b)):b=jY(c)&&$APP.Xl.g(b)>$APP.Xl.g($APP.se(YW(c)))?
RX(c):H0a(c):b=a;return b},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.wG],null)),$APP.M,"In string and comment aware kill\n\n  Perform kill for given position `pos` Like [[kill]], but:\n\n  - if inside string kills to end of string and stops there\n  - If inside comment kills to end of line (not including linebreak)\n\n  `pos` should provide `{:row :col }` which are relative to the start of the given form the zipper represents\n  `zloc` must be positioned at a node previous (given depth first) to the node at given pos"],
null)],null),new $APP.h(null,3,[$APP.N,v4a,$APP.hu,function(a){var b=X_a(a);if($APP.Cb(MX(a)))return a;var c=$APP.Pg.h(function(d){return wW(d)||QV(d)},mY(hX(b),iY,zX));return function(d){var e=lY(d,YW(a));return $APP.k(e)?e:lY(d,YW(b))}($APP.Pl.h($APP.af,fY)(fY(pX(qX(rX(b,xX),zX)),YW(b)),c))},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Push out the leftmost node of the current S-expression into outer left form.\n\n  - `[1 2 [3 |4] 5] \x3d\x3e [1 2 3 [|4] 5]`"],
null)],null),new $APP.h(null,3,[$APP.N,p4a,$APP.hu,dY,$APP.nb,$APP.Xf],null),new $APP.h(null,3,[$APP.N,Q2a,$APP.hu,N0a,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Pull in all right outer-nodes into current S-expression, but only the ones at the same level\n  as the the first one.\n\n  - `[1 2 [|3] 4 5] \x3d\x3e [1 2 [|3 4 5]]`"],null)],null)]),V6a),$6a=$APP.iu($APP.gi([$APP.re(g6a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,
[sY],null))),$APP.M,"Same as [[remove]] but preserves newlines.\n   Specifically: will trim all whitespace - or whitespace up to first linebreak if present."],null)),$APP.re(o6a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc` traversing left."],null)),$APP.re(I2a,new $APP.h(null,4,[$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,
new $APP.H(null,2,5,$APP.I,[new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null)],null),$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null)),$APP.aG,$APP.J(null,null)],null),zY,"1.1.45",$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null))),$APP.M,"DEPRECATED. Renamed to [[of-node*]]."],null)),$APP.re(n3a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,
$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return s-expression (the Clojure form) of current node in `zloc`.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances)."],null)),$APP.re($APP.eoa,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return zipper with location moved up to next non-whitespace/non-comment parent of current node in `zloc`, or `nil` if at the top."],null)),$APP.re(q4a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,
$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Raw version of [[down]].\n\nReturns zipper with the location at the leftmost child of current node in `zloc`, or\n  nil if no children.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],null)),$APP.re(P1a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return true if at rightmost non-whitespace/non-comment sibling node in `zloc`."],null)),$APP.re(Q5a,
new $APP.h(null,4,[$APP.fD,"0.5.0",$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,1,5,$APP.I,[sY],null),new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null)],null),$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null),new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null)),$APP.aG,$APP.J(null,null)],null),$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null),new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null))),$APP.M,"Return zipper with `n` space whitespace node inserted to the left of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],
null)),$APP.re(H2a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return length of printable [[string]] of current node in `zloc`."],null)),$APP.re(p3a,new $APP.h(null,4,[$APP.fD,"1.1.45",$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null)],null),$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,
2,5,$APP.I,[$APP.DE,$APP.DH],null)),$APP.aG,$APP.J(null,null)],null),$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null))),$APP.M,"Create and return zipper from a rewrite-clj `node` (likely parsed by [[rewrite-clj.parser]]).\n\n  Optional `opts` can specify:\n  - `:track-position?` set to `true` to enable ones-based row/column tracking, see [docs on position tracking](/doc/01-user-guide.adoc#position-tracking).\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)"],
null)),$APP.re($APP.dDa,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return zipper with location moved to the previous depth-first non-whitespace/non-comment node in `zloc`. If already at root, returns nil."],null)),$APP.re(S0a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Raw version of [[remove]].\n\nReturns zipper with current node in `zloc` removed, with location at node that would have preceded\n  it in a depth-first walk.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],
null)),$APP.re(E4a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Raw version of [[leftmost]].\n\nReturns zipper with location at the leftmost sibling of the current node in `zloc`, or self.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],null)),$APP.re($APP.rla,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.OC],null))),$APP.M,"Return zipper with `item` inserted to the right of the current node in `zloc`, without moving location.\n  If `item` is not already a node, an attempt will be made to coerce it to one.\n\n  Will insert a space if necessary.\n\n  Use [[rewrite-clj.zip/insert-right*]] to insert without adding any whitespace."],
null)),$APP.re($APP.Vna,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.vJ],null))),$APP.M,"Return zipper with the current node in `zloc` suffixed with string `s`.\n   Operates on token node or a multi-line node, else exception is thrown.\n   When multi-line, last line is suffixed."],null)),$APP.re($APP.Yz,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,vY],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,vY],null))),$APP.M,"Return `zloc` located to the first node satisfying predicate `p?` else nil.\n   Search starts at the current node and continues via movement function `f`.\n\n   `f` defaults to [[right]]",
$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,3,$APP.cL,3,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[sY,vY],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,vY],null)],null),$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,vY],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,vY],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re(F3a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Create and return a zipper whose root is the current node in `zloc`.\n\n   See [docs on sub editing](/doc/01-user-guide.adoc#sub-editing)."],
null)),$APP.re(m3a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.OC],null))),$APP.M,"Raw version of [[replace]].\n\nReturns zipper with node `item` replacing current node in `zloc`, without moving location.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],null)),$APP.re($APP.tma,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.OC],null))),$APP.M,"Return zipper with `item` inserted to the left of the current node in `zloc`, without moving location.\n  Will insert a space if necessary.\n  If `item` is not already a node, an attempt will be made to coerce it to one.\n\n  Use [[insert-left*]] to insert without adding any whitespace."],
null)),$APP.re($APP.jsa,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return true if `zloc` is at end of depth-first traversal."],null)),$APP.re(r2a,new $APP.h(null,4,[$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null),new $APP.H(null,1,5,$APP.I,[sY],null)],null),$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null),new $APP.H(null,1,5,$APP.I,[sY],null)),
$APP.aG,$APP.J(null,null)],null),zY,"0.5.0",$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null),new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"DEPRECATED: renamed to [[insert-space-left]]."],null)),$APP.re(r1a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.OC],null))),$APP.M,"Raw version of [[insert-left]].\n\nReturns zipper with node `item` inserted as the left sibling of current node in `zloc`,\n without moving location.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],
null)),$APP.re(e3a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Returns true when the current the node in `zloc` is a Clojure whitespace (which includes the comma)."],null)),$APP.re($APP.rI,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return tag of current node in `zloc`."],null)),$APP.re($APP.fI,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Returns true if current node in `zloc` is a map."],
null)),$APP.re($APP.NC,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Returns true if current node in `zloc` is a vector."],null)),$APP.re(u4a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.fJ],null))),$APP.M,"Return zipper replacing current node in `zloc` with result of `f` applied to said node as an isolated sub-tree.\n   The resulting zipper will be located on the root of the modified sub-tree.\n\n   See [docs on sub editing](/doc/01-user-guide.adoc#sub-editing)."],
null)),$APP.re($APP.DE,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Returns the current node in `zloc`."],null)),$APP.re($APP.NI,new $APP.h(null,3,[zY,"0.4.0",$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"DEPRECATED. Return a tag/s-expression pair for inner nodes, or\n   the s-expression itself for leaves."],null)),$APP.re(S3a,new $APP.h(null,4,[$APP.fD,"0.5.0",$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,
2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,1,5,$APP.I,[sY],null),new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null)],null),$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null),new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null)),$APP.aG,$APP.J(null,null)],null),$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null),new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null))),$APP.M,"Return zipper with `n` newlines node inserted to the right of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],
null)),$APP.re(w1a,new $APP.h(null,3,[$APP.fD,"0.4.0",$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return string representing the zipped-up `zloc` zipper."],null)),$APP.re(O4a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.wJ],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,$APP.wJ],null))),$APP.M,"Return `zloc` located to the first token node that `sexpr`esses to `v` else `nil`.\n   Search starts from the current node and continues via movement function `f`.\n\n   `v` can be a single value or a set. When `v` is a set, matches on any value in set.\n\n   `f` defaults to [[right]] in short form call.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances).",
$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,3,$APP.cL,3,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[sY,$APP.wJ],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,$APP.wJ],null)],null),$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.wJ],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,$APP.wJ],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re(X3a,new $APP.h(null,4,[$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,
$APP.I,[sY,$APP.oJ],null),new $APP.H(null,1,5,$APP.I,[sY],null)],null),$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null),new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.aG,$APP.J(null,null)],null),zY,"0.5.0",$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null),new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"DEPRECATED: renamed to [[insert-space-right]]."],null)),$APP.re($APP.zL,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.OC],null))),
$APP.M,"Return `zloc` with the current node replaced by `item`.\n  If `item` is not already a node, an attempt will be made to coerce it to one.\n\n  Use [[replace*]] for non-coercing version of replace."],null)),$APP.re(J4a,new $APP.h(null,4,[$APP.fD,"0.5.0",$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,1,5,$APP.I,[sY],null),new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null)],null),$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null),new $APP.H(null,
2,5,$APP.I,[sY,$APP.oJ],null)),$APP.aG,$APP.J(null,null)],null),$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null),new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null))),$APP.M,"Return zipper with `n` space whitespace node inserted to the right of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],null)),$APP.re($APP.Eoa,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,4,5,$APP.I,[sY,$APP.fJ,$APP.lk,$APP.HD],null))),$APP.M,"Return `zloc` with the current node replaced with the result of:\n\n   `(apply f (s-expr current-node) args)`\n\n  The result of `f`, if not already a node, will be coerced to a node if possible.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances).\n\n  Use [[edit*]] for non-coercing version of edit.",
$APP.QJ,new $APP.h(null,6,[$APP.zA,!0,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,1,5,$APP.I,[$APP.J(sY,$APP.fJ,$APP.HD)],null),$APP.V,$APP.J(new $APP.H(null,4,5,$APP.I,[sY,$APP.fJ,$APP.lk,$APP.HD],null)),$APP.aG,$APP.J(null)],null)],null)),$APP.re(W0a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[$APP.fJ,sY],null))),$APP.M,"Returns `zloc` with function `f` applied to each value node of the current node.\n   Current node must be map node.\n\n  `zloc` location is unchanged.\n\n  `f` arg is zloc positioned at value node and should return:\n  - an updated zloc with zloc positioned at value node\n  - a falsey value to leave value node unchanged\n\n  Folks typically use [[edit]] for `f`."],
null)),$APP.re(L3a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,4,5,$APP.I,[sY,$APP.fJ,$APP.lk,$APP.HD],null))),$APP.M,"Raw version of [[edit]].\n\nReturns zipper with value of `(apply f current-node args)` replacing current node in `zloc`.\n\n   The result of `f` should be a rewrite-clj node.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes.",$APP.QJ,new $APP.h(null,6,[$APP.zA,!0,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,
1,5,$APP.I,[$APP.J(sY,$APP.fJ,$APP.HD)],null),$APP.V,$APP.J(new $APP.H(null,4,5,$APP.I,[sY,$APP.fJ,$APP.lk,$APP.HD],null)),$APP.aG,$APP.J(null)],null)],null)),$APP.re(F4a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return true if at leftmost non-whitespace/non-comment sibling node in `zloc`."],null)),$APP.re($APP.HL,new $APP.h(null,3,[$APP.fD,"0.4.0",$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return string representing the current node in `zloc`."],
null)),$APP.re(s2a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return true if current node's element type in `zloc` can be [[sexpr]]-ed.\n\n   See [related docs in user guide](/doc/01-user-guide.adoc#not-all-clojure-is-sexpr-able)"],null)),$APP.re(a2a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,vY],null))),$APP.M,"Return `zloc` located to the first node satisfying predicate `p?` else `nil`.\n   Search is depth-first from the current node."],
null)),$APP.re(w6a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,3,5,$APP.I,[sY,$APP.wG,$APP.uJ],null))),$APP.M,"Return `zloc` located to the last node spanning position `pos` with tag `t` else `nil`.\n  Search is depth-first from the current node."],null)),$APP.re(c2a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,vY],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,vY],null))),$APP.M,"Return `zloc` located to the next node satisfying predicate `p?` else `nil`.\n   Search starts one movement `f` from the current node and continues via `f`.\n\n   `f` defaults to [[right]]",
$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,3,$APP.cL,3,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[sY,vY],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,vY],null)],null),$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,vY],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,vY],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re(N2a,new $APP.h(null,4,[$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],
null),new $APP.H(null,1,5,$APP.I,[sY],null)],null),$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null),new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.aG,$APP.J(null,null)],null),zY,"0.5.0",$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null),new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"DEPRECATED: renamed to [[insert-newline-left]]."],null)),$APP.re(V0a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Raw version of [[prev]].\n\nReturns zipper with location at the previous depth-first location in the hierarchy in `zloc`.\n  If already at the root, returns nil.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],
null)),$APP.re($APP.XJ,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return zipper with location moved to the next depth-first non-whitespace/non-comment node in `zloc`.\n   End can be detected with [[end?]], if already at end, stays there."],null)),$APP.re(z2a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.OC],null))),$APP.M,"Raw version of [[insert-child]].\n\nReturns zipper with node `item` inserted as the leftmost child of the current node in `zloc`,\n  without moving location.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],
null)),$APP.re(j4a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Returns the ones-based `[[start-row start-col] [end-row end-col]]` of the current node in `zloc`.\n  `end-col` is exclusive.\n\n  Throws if `zloc` was not created with [position tracking](/doc/01-user-guide.adoc#position-tracking)."],null)),$APP.re($APP.iF,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.vJ],null))),$APP.M,"Return zipper with the current node in `zloc` prefixed with string `s`.\n   Operates on token node or a multi-line node, else exception is thrown.\n   When multi-line, first line is prefixed."],
null)),$APP.re($APP.CG,new $APP.h(null,4,[$APP.fD,"0.4.9",$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,3,$APP.cL,3,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[sY,$APP.fJ],null),new $APP.H(null,3,5,$APP.I,[sY,vY,$APP.fJ],null)],null),$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.fJ],null),new $APP.H(null,3,5,$APP.I,[sY,vY,$APP.fJ],null)),$APP.aG,$APP.J(null,null)],null),$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.fJ],null),new $APP.H(null,3,5,$APP.I,[sY,
vY,$APP.fJ],null))),$APP.M,'Return zipper modified by an isolated depth-first post-order traversal.\n\n   Post-order traversal visits children before root.\n   For example, traversal order of `(1 (2 3 (4 5) 6 (7 8)) 9)` is:\n\n   1. `1`\n   2. `2`\n   3. `3`\n   4. `4`\n   5. `5`\n   6. `(4 5)`\n   7. `6`\n   8. `7`\n   9. `8`\n   10. `(7 8)`\n   11. `(2 3 (4 5) 6 (7 8))`\n   12. `9`\n   13. `(1 (2 3 (4 5) 6 (7 8)) 9)`\n\n   Traversal starts at the current node in `zloc` and continues to the end of the isolated sub-tree.\n\n   Function `f` is called on the zipper locations satisfying predicate `p?` and must return either\n   - nil to indicate no changes\n   - or a valid zipper\n   WARNING: when function `f` changes the location in the zipper, normal traversal will be affected.\n\n   When `p?` is not specified `f` is called on all locations.\n\n   To walk all nodes, you\'ll want to walk from the root node.\n   You can do this by, for example, using [[of-string*]] instead of [[of-string]].\n\n   ```Clojure\n   (-\x3e (zip/of-string* "my clojure forms")\n       (zip/postwalk ...))\n   ```\n\n   See [docs on sub editing](/doc/01-user-guide.adoc#sub-editing).'],
null)),$APP.re(h1a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,vY],null))),$APP.M,"Return `zloc` located to next node satisfying predicate `p?` else `nil`.\n   Search starts depth-first after the current node."],null)),$APP.re($APP.MC,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Returns true if current node in `zloc` is a list."],null)),$APP.re(o1a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,
2,5,$APP.I,[sY,$APP.uJ],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,$APP.uJ],null))),$APP.M,"Return `zloc` located to the first node with tag `t` else `nil`.\n   Search starts at the current node and continues via movement function `f`.\n\n   `f` defaults to [[right]]",$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,3,$APP.cL,3,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[sY,$APP.uJ],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,$APP.uJ],null)],null),$APP.V,$APP.J(new $APP.H(null,
2,5,$APP.I,[sY,$APP.uJ],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,$APP.uJ],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re(E6a,new $APP.h(null,3,[$APP.fD,"0.4.4",$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return s-expression (the Clojure forms) of children of current node in `zloc`.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances)."],null)),$APP.re(K6a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],
null),new $APP.H(null,2,5,$APP.I,[$APP.vJ,$APP.DH],null))),$APP.M,"Create and return zipper from all forms in Clojure/ClojureScript/EDN string `s`, and move to the first non-whitespace/non-comment child.\n\n  See [[of-string*]] for same but with no automatic move.\n\n  Optional `opts` can specify:\n  - `:track-position?` set to `true` to enable ones-based row/column tracking, see [docs on position tracking](/doc/01-user-guide.adoc#position-tracking).\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)",
$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,1,5,$APP.I,[$APP.vJ],null),new $APP.H(null,2,5,$APP.I,[$APP.vJ,$APP.DH],null)],null),$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],null),new $APP.H(null,2,5,$APP.I,[$APP.vJ,$APP.DH],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re(O3a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Raw version of [[next]].\n\nReturns zipper with location at the next depth-first location in the hierarchy in `zloc`.\n  When reaching the end, returns a distinguished zipper detectable via [[end?]]. If already\n  at the end, stays there.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],
null)),$APP.re(x2a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Returns `zloc` with namespaced map sexpr context to all symbols and keywords reapplied from current location downward.\n\n  Keywords and symbols:\n  * that are keys in a namespaced map will have namespaced map context applied\n  * otherwise will have any namespaced map context removed\n\n  You should only need to use this function if:\n  * you care about `sexpr` on keywords and symbols\n  * and you are moving keywords and symbols from a namespaced map to some other location."],
null)),$APP.re($APP.Oma,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return zipper with location moved right to next non-whitespace/non-comment sibling of current node in `zloc`."],null)),$APP.re(t6a,new $APP.h(null,3,[zY,"0.4.0",$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"DEPRECATED. Renamed to [[string]]."],null)),$APP.re(d4a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.Tz],
null),new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Zip up and print `zloc` from root node.\n\n   NOTE: Optional `writer` is currently ignored for ClojureScript.",$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[sY,$APP.Tz],null),new $APP.H(null,1,5,$APP.I,[sY],null)],null),$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.Tz],null),new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re(B6a,
new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.OC],null))),$APP.M,"Raw version of [[insert-right]].\n\nReturns zipper with node `item` inserted as the right sibling of the current node in `zloc`,\n  without moving location.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],null)),$APP.re($APP.gK,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Zips all the way up `zloc` and returns the root node, reflecting any changes."],
null)),$APP.re(g1a,new $APP.h(null,4,[$APP.fD,"1.1.46",$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,1,5,$APP.I,[$APP.vJ],null),new $APP.H(null,2,5,$APP.I,[$APP.vJ,$APP.DH],null)],null),$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],null),new $APP.H(null,2,5,$APP.I,[$APP.vJ,$APP.DH],null)),$APP.aG,$APP.J(null,null)],null),$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],null),new $APP.H(null,2,5,$APP.I,[$APP.vJ,$APP.DH],
null))),$APP.M,"Create and return zipper from all forms in Clojure/ClojureScript/END string `s`, and do no automatic move.\n\n  See [[of-string]] for same but with automatic move to first interesting node.\n\n  Optional `opts` can specify:\n  - `:track-position?` set to `true` to enable ones-based row/column tracking, see [docs on position tracking](/doc/01-user-guide.adoc#position-tracking).\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)"],
null)),$APP.re(P3a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[$APP.fJ,sY],null))),$APP.M,"Returns `zloc` with function `f` applied to all key nodes of the current node.\n   Current node must be map node.\n\n  `zloc` location is unchanged.\n\n  `f` arg is zloc positioned at key node and should return:\n  - an updated zloc with zloc positioned at key node\n  - a falsey value to leave value node unchanged\n\n  Folks typically use [[rewrite-clj.zip/edit]] for `f`."],null)),
$APP.re(X5a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.wJ],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,$APP.wJ],null))),$APP.M,"Return `zloc` located to the next token node that `sexpr`esses to `v` else `nil`.\n   Search starts one movement `f` from the current location, and continues via `f`.\n\n   `v` can be a single value or a set. When `v` is a set matches on any value in set.\n\n   `f` defaults to [[right]] in short form call.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances).",
$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,3,$APP.cL,3,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[sY,$APP.wJ],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,$APP.wJ],null)],null),$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.wJ],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,$APP.wJ],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re($APP.PJ,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.Tz],null),new $APP.H(null,1,5,$APP.I,[sY],null))),
$APP.M,"Print current node in `zloc`.\n\n   NOTE: Optional `writer` is currently ignored for ClojureScript.",$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[sY,$APP.Tz],null),new $APP.H(null,1,5,$APP.I,[sY],null)],null),$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.Tz],null),new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re($APP.iL,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,
2,5,$APP.I,[$APP.fJ,sY],null))),$APP.M,"Returns `zloc` with function `f` applied to all nodes of the current node.\n  Current node must be a sequence node. Equivalent to [[rewrite-clj.zip/map-vals]] for maps.\n\n  `zloc` location is unchanged.\n\n  `f` arg is zloc positioned at\n  - value nodes for maps\n  - each element of a seq\n  and is should return:\n  - an updated zloc with zloc positioned at edited node\n  - a falsey value to leave value node unchanged\n\n  Folks typically use [[edit]] for `f`."],
null)),$APP.re($APP.UE,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.fJ],null),new $APP.H(null,3,5,$APP.I,[sY,vY,$APP.fJ],null))),$APP.M,'Return zipper modified by an isolated depth-first pre-order traversal.\n\n   Pre-order traversal visits root before children.\n   For example, traversal order of `(1 (2 3 (4 5) 6 (7 8)) 9)` is:\n\n   1. `(1 (2 3 (4 5) 6 (7 8)) 9)`\n   2. `1`\n   3. `(2 3 (4 5) 6 (7 8))`\n   4. `2`\n   5. `3`\n   6. `(4 5)`\n   7. `4`\n   8. `5`\n   9. `6`\n   10. `(7 8)`\n   11. `7`\n   12. `8`\n   13. `9`\n\n   Traversal starts at the current node in `zloc` and continues to the end of the isolated sub-tree.\n\n   Function `f` is called on the zipper locations satisfying predicate `p?` and must return either\n   - nil to indicate no changes\n   - or a valid zipper\n   WARNING: when function `f` changes the location in the zipper, normal traversal will be affected.\n\n   When `p?` is not specified `f` is called on all locations.\n\n   To walk all nodes, you\'ll want to walk from the root node.\n   You can do this by, for example, using [[of-string*]] instead of [[of-string]].\n\n   ```Clojure\n   (-\x3e (zip/of-string* "my clojure forms")\n       (zip/prewalk ...))\n   ```\n\n   See [docs on sub editing](/doc/01-user-guide.adoc#sub-editing).',
$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,3,$APP.cL,3,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[sY,$APP.fJ],null),new $APP.H(null,3,5,$APP.I,[sY,vY,$APP.fJ],null)],null),$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.fJ],null),new $APP.H(null,3,5,$APP.I,[sY,vY,$APP.fJ],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re(g5a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Returns true if the current node in `zloc` is a namespaced map."],
null)),$APP.re(Q1a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Raw version of [[rightmost]].\n\nReturns zipper with location at the rightmost sibling of the current node in `zloc`, or self.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],null)),$APP.re(J1a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Raw version of [[left]].\n\nReturns zipper with location at the left sibling of the current node in `zloc`, or nil.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],
null)),$APP.re($APP.TC,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Returns true if current node in `zloc` is a sequence."],null)),$APP.re($APP.wA,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.nJ],null))),$APP.M,"Returns `zloc` located to map key node's sexpr value matching `k` else `nil`.\n\n  `k` should be:\n  - a key for maps\n  - a zero-based index for sequences\n\n  NOTE: `k` will be compared against resolved keywords in maps.\n  See docs for sexpr behavior on [namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)."],
null)),$APP.re(f3a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,vY],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,vY],null))),$APP.M,"Return `zloc` located to the the first token node satisfying predicate `p?`.\n  Search starts at the current node and continues via movement function `f`.\n\n   `f` defaults to [[right]]",$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,3,$APP.cL,3,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[sY,vY],null),new $APP.H(null,
3,5,$APP.I,[sY,$APP.fJ,vY],null)],null),$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,vY],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,vY],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re(i6a,new $APP.h(null,4,[$APP.fD,"0.5.0",$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,1,5,$APP.I,[sY],null),new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null)],null),$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null),new $APP.H(null,2,5,$APP.I,[sY,
$APP.oJ],null)),$APP.aG,$APP.J(null,null)],null),$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null),new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null))),$APP.M,"Return zipper with `n` newlines node inserted to the left of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],null)),$APP.re($APP.xD,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Returns true if current node in `zloc` is a set."],null)),$APP.re(q5a,new $APP.h(null,
4,[$APP.fD,"1.1.45",$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null)],null),$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null)),$APP.aG,$APP.J(null,null)],null),$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null))),$APP.M,"Create and return zipper from a rewrite-clj `node` (likely parsed by [[rewrite-clj.parser]]),\n  and move to the first non-whitespace/non-comment child. If node is not forms node, is wrapped in forms node\n  for a consistent root.\n  Optional `opts` can specify:\n  - `:track-position?` set to `true` to enable ones-based row/column tracking, see [docs on position tracking](/doc/01-user-guide.adoc#position-tracking).\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)"],
null)),$APP.re(d3a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Returns true when the current node in `zloc` is a linebreak."],null)),$APP.re($APP.TG,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,3,5,$APP.I,[sY,$APP.nJ,$APP.wJ],null))),$APP.M,"Returns `zloc` with current node's `k` set to value `v`.\n\n  `zloc` location is unchanged.\n\n  `k` should be:\n  - a key for maps\n  - a zero-based index for sequences, an exception is thrown if index is out of bounds\n\n  NOTE: `k` will be compared against resolved keywords in maps.\n  See docs for sexpr behavior on [namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)."],
null)),$APP.re($APP.Tra,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return zipper with location moved to the leftmost non-whitespace/non-comment sibling of current node in `zloc`."],null)),$APP.re(p6a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Raw version of [[up]].\n\nReturns zipper with the location at the parent of current node in `zloc`, or nil if at\n  the top.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],
null)),$APP.re($APP.ZBa,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return zipper with location moved down to the first non-whitespace/non-comment child node of the current node in `zloc`, or nil if no applicable children."],null)),$APP.re($APP.Pya,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return zipper with location moved left to next non-whitespace/non-comment sibling of current node in `zloc`."],
null)),$APP.re(f4a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,3,5,$APP.I,[$APP.fJ,vY,sY],null))),$APP.M,"Return zipper with location moved to first location not satisfying predicate `p?` starting from the node in\n   `zloc` and traversing by function `f`."],null)),$APP.re(E1a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.fJ],null))),$APP.M,"Return zipper applying function `f` to `zloc`. The resulting\n   zipper will be located at the same path (i.e. the same number of\n   downwards and right movements from the root) incoming `zloc`.\n\n   See also [[subedit-node]] for an isolated edit."],
null)),$APP.re($APP.Uwa,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.OC],null))),$APP.M,"Return zipper with `item` inserted as the first child of the current node in `zloc`, without moving location.\n  Will insert a space if necessary.\n  If `item` is not already a node, an attempt will be made to coerce it to one.\n\n  Use [[insert-child*]] to insert without adding any whitespace."],null)),$APP.re($APP.Gva,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,
2,5,$APP.I,[sY,$APP.OC],null))),$APP.M,"Return zipper with `item` inserted as the last child of the current node in `zloc`, without moving.\n  Will insert a space if necessary.\n  If `item` is not already a node, an attempt will be made to coerce it to one.\n\n  Use [[append-child*]] to append without adding any whitespace."],null)),$APP.re(M3a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null),new $APP.H(null,2,5,$APP.I,[$APP.fJ,sY],null))),$APP.M,"Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc`\n   and traversing by function `f`.\n\n   `f` defaults to [[right]]",
$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,1,5,$APP.I,[sY],null),new $APP.H(null,2,5,$APP.I,[$APP.fJ,sY],null)],null),$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null),new $APP.H(null,2,5,$APP.I,[$APP.fJ,sY],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re(N3a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.OC],null))),$APP.M,"Raw version of [[append-child]].\n\nReturns zipper with node `item` inserted as the rightmost child of the current node in `zloc`,\n  without moving.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],
null)),$APP.re(c1a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Returns the ones-based `[row col]` of the start of the current node in `zloc`.\n\n  Throws if `zloc` was not created with [position tracking](/doc/01-user-guide.adoc#position-tracking)."],null)),$APP.re(p5a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return zipper with the children of the current node in `zloc` merged into itself.\n   (akin to Clojure's `unquote-splicing` macro: `~@...`).\n   - if the node is not one that can have children, no modification will\n     be performed.\n   - if the node has no or only whitespace children, it will be removed.\n   - otherwise, splicing will be performed, moving the zipper to the first\n     non-whitespace spliced child node.\n\n  For example, given `[[1 2 3] 4 5 6]`, if zloc is located at vector `[1 2 3]`, a splice will result in raising the vector's children up `[1 2 3 4 5 6]` and locating the zipper at node `1`."],
null)),$APP.re(x1a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,vY],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,vY],null))),$APP.M,"Return `zloc` located to the next token node satisfying predicate `p?` else `nil`.\n  Search starts one movement `f` after the current node and continues via `f`.\n\n   `f` defaults to [[right]]",$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,3,$APP.cL,3,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[sY,vY],null),new $APP.H(null,
3,5,$APP.I,[sY,$APP.fJ,vY],null)],null),$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,vY],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,vY],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re(s1a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.wG],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.wG,vY],null))),$APP.M,"Return `zloc` located to the last node spanning position `pos` that satisfies predicate `p?` else `nil`.\n   Search is depth-first from the current node.\n\n  NOTE: Does not ignore whitespace/comment nodes.",
$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,3,$APP.cL,3,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[sY,$APP.wG],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.wG,vY],null)],null),$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.wG],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.wG,vY],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re(U0a,new $APP.h(null,3,[zY,"0.4.0",$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"DEPRECATED. Renamed to [[root-string]]."],
null)),$APP.re($APP.qya,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return zipper with location moved to the rightmost non-whitespace/non-comment sibling of current node in `zloc`."],null)),$APP.re(L5a,new $APP.h(null,4,[$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null)],null),$APP.V,$APP.J(new $APP.H(null,1,5,
$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null)),$APP.aG,$APP.J(null,null)],null),zY,"1.1.45",$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null))),$APP.M,"DEPRECATED. Renamed to [[of-node]]."],null)),$APP.re(u1a,new $APP.h(null,3,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.uJ],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,$APP.uJ],null))),$APP.M,"Return `zloc` located to the next node with tag `t` else `nil`.\n  Search starts one movement `f` after the current node and continues via `f`.\n\n   `f` defaults to [[right]]",
$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,3,$APP.cL,3,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[sY,$APP.uJ],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,$APP.uJ],null)],null),$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.uJ],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,$APP.uJ],null)),$APP.aG,$APP.J(null,null)],null)],null)),$APP.re(q6a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Raw version of [[right]].\n\nReturns zipper with location at the right sibling of the current node in `zloc`, or nil.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],
null)),$APP.re(u2a,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Returns true when current node in `zloc` is whitespace or a comment."],null)),$APP.re($APP.yA,new $APP.h(null,2,[$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"Return `zloc` with current node removed. Returned zipper location\n   is moved to the first non-whitespace node preceding removed node in a depth-first walk.\n   Removes whitespace appropriately.\n\n  - `[1 |2  3]    \x3d\x3e [|1 3]`\n  - `[1 |2]       \x3d\x3e [|1]`\n  - `[|1 2]       \x3d\x3e |[2]`\n  - `[|1]         \x3d\x3e |[]`\n  - `[  |1  ]     \x3d\x3e |[]`\n  - `[1 [2 3] |4] \x3d\x3e [1 [2 |3]]`\n  - `[|1 [2 3] 4] \x3d\x3e |[[2 3] 4]`\n\n   If the removed node is a rightmost sibling, both leading and trailing whitespace\n   is removed, otherwise only trailing whitespace is removed.\n\n   The result is that a following element (no matter whether it is on the same line\n   or not) will end up at same positon (line/column) as the removed one.\n   If a comment lies betwen the original node and the neighbour this will not hold true.\n\n   If the removed node is at end of input and is trailed by 1 or more newlines,\n   a single trailing newline will be preserved.\n\n   Use [[remove*]] to remove node without removing any surrounding whitespace."],
null)),$APP.re(K4a,new $APP.h(null,4,[$APP.QJ,new $APP.h(null,6,[$APP.zA,!1,$APP.Os,2,$APP.cL,2,$APP.KK,new $APP.H(null,2,5,$APP.I,[new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null),new $APP.H(null,1,5,$APP.I,[sY],null)],null),$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null),new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.aG,$APP.J(null,null)],null),zY,"0.5.0",$APP.V,$APP.J($APP.Ak,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null),new $APP.H(null,1,5,$APP.I,[sY],null))),$APP.M,"DEPRECATED: renamed to [[insert-newline-right]]."],
null))],[new $APP.h(null,3,[$APP.N,N5a,$APP.hu,function(a){return $_a(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Same as [[remove]] but preserves newlines.\n   Specifically: will trim all whitespace - or whitespace up to first linebreak if present."],null)],null),new $APP.h(null,3,[$APP.N,C2a,$APP.hu,function(a){return AX(jX,a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc` traversing left."],
null)],null),new $APP.h(null,3,[$APP.N,L4a,$APP.hu,WY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null)),$APP.M,"DEPRECATED. Renamed to [[of-node*]]."],null)],null),new $APP.h(null,3,[$APP.N,y5a,$APP.hu,function(a){return HX(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Return s-expression (the Clojure form) of current node in `zloc`.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances)."],
null)],null),new $APP.h(null,3,[$APP.N,G1a,$APP.hu,z0a,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Return zipper with location moved up to next non-whitespace/non-comment parent of current node in `zloc`, or `nil` if at the top."],null)],null),new $APP.h(null,3,[$APP.N,o4a,$APP.hu,function(a){return dX(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Raw version of [[down]].\n\nReturns zipper with the location at the leftmost child of current node in `zloc`, or\n  nil if no children.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],
null)],null),new $APP.h(null,3,[$APP.N,m6a,$APP.hu,function(a){return null==AX(hX,hX(a))},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Return true if at rightmost non-whitespace/non-comment sibling node in `zloc`."],null)],null),new $APP.h(null,3,[$APP.N,l4a,$APP.hu,oZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null),new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null)),$APP.M,"Return zipper with `n` space whitespace node inserted to the left of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],
null)],null),new $APP.h(null,3,[$APP.N,a6a,$APP.hu,function(a){a=null==a?null:YW(a);a=null==a?null:xV(a);return $APP.k(a)?a:0},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Return length of printable [[string]] of current node in `zloc`."],null)],null),new $APP.h(null,3,[$APP.N,l3a,$APP.hu,VY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null)),$APP.M,"Create and return zipper from a rewrite-clj `node` (likely parsed by [[rewrite-clj.parser]]).\n\n  Optional `opts` can specify:\n  - `:track-position?` set to `true` to enable ones-based row/column tracking, see [docs on position tracking](/doc/01-user-guide.adoc#position-tracking).\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)"],
null)],null),new $APP.h(null,3,[$APP.N,b1a,$APP.hu,function(a){return W_a(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Return zipper with location moved to the previous depth-first non-whitespace/non-comment node in `zloc`. If already at root, returns nil."],null)],null),new $APP.h(null,3,[$APP.N,s4a,$APP.hu,function(a){return pX(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Raw version of [[remove]].\n\nReturns zipper with current node in `zloc` removed, with location at node that would have preceded\n  it in a depth-first walk.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],
null)],null),new $APP.h(null,3,[$APP.N,e4a,$APP.hu,function(a){return q_a(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Raw version of [[leftmost]].\n\nReturns zipper with location at the leftmost sibling of the current node in `zloc`, or self.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],null)],null),new $APP.h(null,3,[$APP.N,j2a,$APP.hu,eY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,
2,5,$APP.I,[sY,$APP.OC],null)),$APP.M,"Return zipper with `item` inserted to the right of the current node in `zloc`, without moving location.\n  If `item` is not already a node, an attempt will be made to coerce it to one.\n\n  Will insert a space if necessary.\n\n  Use [[rewrite-clj.zip/insert-right*]] to insert without adding any whitespace."],null)],null),new $APP.h(null,3,[$APP.N,b5a,$APP.hu,function(a,b){return e0a(a,b)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,
$APP.vJ],null)),$APP.M,"Return zipper with the current node in `zloc` suffixed with string `s`.\n   Operates on token node or a multi-line node, else exception is thrown.\n   When multi-line, last line is suffixed."],null)],null),new $APP.h(null,3,[$APP.N,v6a,$APP.hu,kY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,vY],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,vY],null)),$APP.M,"Return `zloc` located to the first node satisfying predicate `p?` else nil.\n   Search starts at the current node and continues via movement function `f`.\n\n   `f` defaults to [[right]]"],
null)],null),new $APP.h(null,3,[$APP.N,n6a,$APP.hu,function(a){return r0a(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Create and return a zipper whose root is the current node in `zloc`.\n\n   See [docs on sub editing](/doc/01-user-guide.adoc#sub-editing)."],null)],null),new $APP.h(null,3,[$APP.N,G3a,$APP.hu,function(a,b){return mX(a,b)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.OC],null)),$APP.M,"Raw version of [[replace]].\n\nReturns zipper with node `item` replacing current node in `zloc`, without moving location.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],
null)],null),new $APP.h(null,3,[$APP.N,m1a,$APP.hu,fY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.OC],null)),$APP.M,"Return zipper with `item` inserted to the left of the current node in `zloc`, without moving location.\n  Will insert a space if necessary.\n  If `item` is not already a node, an attempt will be made to coerce it to one.\n\n  Use [[insert-left*]] to insert without adding any whitespace."],null)],null),new $APP.h(null,3,[$APP.N,i4a,$APP.hu,function(a){return OX(a)},
$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Return true if `zloc` is at end of depth-first traversal."],null)],null),new $APP.h(null,3,[$APP.N,t4a,$APP.hu,sZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null),new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"DEPRECATED: renamed to [[insert-space-left]]."],null)],null),new $APP.h(null,3,[$APP.N,h2a,$APP.hu,function(a,b){return kX(a,b)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,
2,5,$APP.I,[sY,$APP.OC],null)),$APP.M,"Raw version of [[insert-left]].\n\nReturns zipper with node `item` inserted as the left sibling of current node in `zloc`,\n without moving location.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],null)],null),new $APP.h(null,3,[$APP.N,R5a,$APP.hu,function(a){return xX(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Returns true when the current the node in `zloc` is a Clojure whitespace (which includes the comma)."],
null)],null),new $APP.h(null,3,[$APP.N,L6a,$APP.hu,function(a){return GX(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Return tag of current node in `zloc`."],null)],null),new $APP.h(null,3,[$APP.N,g3a,$APP.hu,function(a){return $APP.x.h(GX(a),$APP.vm)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Returns true if current node in `zloc` is a map."],null)],null),new $APP.h(null,3,[$APP.N,B2a,$APP.hu,function(a){return $APP.x.h(GX(a),
$APP.um)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Returns true if current node in `zloc` is a vector."],null)],null),new $APP.h(null,3,[$APP.N,k2a,$APP.hu,function(a,b){return bY(a,b)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.fJ],null)),$APP.M,"Return zipper replacing current node in `zloc` with result of `f` applied to said node as an isolated sub-tree.\n   The resulting zipper will be located on the root of the modified sub-tree.\n\n   See [docs on sub editing](/doc/01-user-guide.adoc#sub-editing)."],
null)],null),new $APP.h(null,3,[$APP.N,G4a,$APP.hu,w0a,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Returns the current node in `zloc`."],null)],null),new $APP.h(null,3,[$APP.N,x3a,$APP.hu,function(a){a=null==a?null:YW(a);return null==a?null:qZa(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"DEPRECATED. Return a tag/s-expression pair for inner nodes, or\n   the s-expression itself for leaves."],null)],null),new $APP.h(null,
3,[$APP.N,y4a,$APP.hu,rZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null),new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null)),$APP.M,"Return zipper with `n` newlines node inserted to the right of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],null)],null),new $APP.h(null,3,[$APP.N,I6a,$APP.hu,function(a){return S_a(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Return string representing the zipped-up `zloc` zipper."],
null)],null),new $APP.h(null,3,[$APP.N,f6a,$APP.hu,gZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.wJ],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,$APP.wJ],null)),$APP.M,"Return `zloc` located to the first token node that `sexpr`esses to `v` else `nil`.\n   Search starts from the current node and continues via movement function `f`.\n\n   `v` can be a single value or a set. When `v` is a set, matches on any value in set.\n\n   `f` defaults to [[right]] in short form call.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances)."],
null)],null),new $APP.h(null,3,[$APP.N,I4a,$APP.hu,tZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null),new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"DEPRECATED: renamed to [[insert-space-right]]."],null)],null),new $APP.h(null,3,[$APP.N,w2a,$APP.hu,cY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.OC],null)),$APP.M,"Return `zloc` with the current node replaced by `item`.\n  If `item` is not already a node, an attempt will be made to coerce it to one.\n\n  Use [[replace*]] for non-coercing version of replace."],
null)],null),new $APP.h(null,3,[$APP.N,a5a,$APP.hu,pZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null),new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null)),$APP.M,"Return zipper with `n` space whitespace node inserted to the right of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],null)],null),new $APP.h(null,3,[$APP.N,H4a,$APP.hu,cZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,4,5,$APP.I,[sY,$APP.fJ,$APP.lk,$APP.HD],null)),$APP.M,
"Return `zloc` with the current node replaced with the result of:\n\n   `(apply f (s-expr current-node) args)`\n\n  The result of `f`, if not already a node, will be coerced to a node if possible.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances).\n\n  Use [[edit*]] for non-coercing version of edit."],null)],null),new $APP.h(null,3,[$APP.N,j5a,$APP.hu,function(a,b){return aY(b,o0a(a,$X(b)))},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[$APP.fJ,sY],null)),
$APP.M,"Returns `zloc` with function `f` applied to each value node of the current node.\n   Current node must be map node.\n\n  `zloc` location is unchanged.\n\n  `f` arg is zloc positioned at value node and should return:\n  - an updated zloc with zloc positioned at value node\n  - a falsey value to leave value node unchanged\n\n  Folks typically use [[edit]] for `f`."],null)],null),new $APP.h(null,3,[$APP.N,J3a,$APP.hu,wZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,4,5,$APP.I,[sY,
$APP.fJ,$APP.lk,$APP.HD],null)),$APP.M,"Raw version of [[edit]].\n\nReturns zipper with value of `(apply f current-node args)` replacing current node in `zloc`.\n\n   The result of `f` should be a rewrite-clj node.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],null)],null),new $APP.h(null,3,[$APP.N,r4a,$APP.hu,function(a){return null==AX(jX,jX(a))},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),
$APP.M,"Return true if at leftmost non-whitespace/non-comment sibling node in `zloc`."],null)],null),new $APP.h(null,3,[$APP.N,a3a,$APP.hu,function(a){return IX(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Return string representing the current node in `zloc`."],null)],null),new $APP.h(null,3,[$APP.N,n5a,$APP.hu,function(a){a=null==a?null:YW(a);return null==a?null:$APP.Cb(vV(a))},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],
null)),$APP.M,"Return true if current node's element type in `zloc` can be [[sexpr]]-ed.\n\n   See [related docs in user guide](/doc/01-user-guide.adoc#not-all-clojure-is-sexpr-able)"],null)],null),new $APP.h(null,3,[$APP.N,j6a,$APP.hu,function(a,b){return SX(a,NX,b)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,vY],null)),$APP.M,"Return `zloc` located to the first node satisfying predicate `p?` else `nil`.\n   Search is depth-first from the current node."],null)],null),
new $APP.h(null,3,[$APP.N,T3a,$APP.hu,function(a,b,c){return j0a(a,b,c)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,3,5,$APP.I,[sY,$APP.wG,$APP.uJ],null)),$APP.M,"Return `zloc` located to the last node spanning position `pos` with tag `t` else `nil`.\n  Search is depth-first from the current node."],null)],null),new $APP.h(null,3,[$APP.N,G5a,$APP.hu,dZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,vY],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,vY],null)),
$APP.M,"Return `zloc` located to the next node satisfying predicate `p?` else `nil`.\n   Search starts one movement `f` from the current node and continues via `f`.\n\n   `f` defaults to [[right]]"],null)],null),new $APP.h(null,3,[$APP.N,H5a,$APP.hu,uZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null),new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"DEPRECATED: renamed to [[insert-newline-left]]."],null)],null),new $APP.h(null,3,[$APP.N,e6a,$APP.hu,function(a){return oX(a)},
$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Raw version of [[prev]].\n\nReturns zipper with location at the previous depth-first location in the hierarchy in `zloc`.\n  If already at the root, returns nil.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],null)],null),new $APP.h(null,3,[$APP.N,E2a,$APP.hu,function(a){return NX(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],
null)),$APP.M,"Return zipper with location moved to the next depth-first non-whitespace/non-comment node in `zloc`.\n   End can be detected with [[end?]], if already at end, stays there."],null)],null),new $APP.h(null,3,[$APP.N,A3a,$APP.hu,function(a,b){return r_a(a,b)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.OC],null)),$APP.M,"Raw version of [[insert-child]].\n\nReturns zipper with node `item` inserted as the leftmost child of the current node in `zloc`,\n  without moving location.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],
null)],null),new $APP.h(null,3,[$APP.N,R6a,$APP.hu,function(a){return o_a(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Returns the ones-based `[[start-row start-col] [end-row end-col]]` of the current node in `zloc`.\n  `end-col` is exclusive.\n\n  Throws if `zloc` was not created with [position tracking](/doc/01-user-guide.adoc#position-tracking)."],null)],null),new $APP.h(null,3,[$APP.N,l6a,$APP.hu,function(a,b){return d0a(a,b)},$APP.nb,new $APP.h(null,
2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.vJ],null)),$APP.M,"Return zipper with the current node in `zloc` prefixed with string `s`.\n   Operates on token node or a multi-line node, else exception is thrown.\n   When multi-line, first line is prefixed."],null)],null),new $APP.h(null,3,[$APP.N,O2a,$APP.hu,mZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.fJ],null),new $APP.H(null,3,5,$APP.I,[sY,vY,$APP.fJ],null)),$APP.M,'Return zipper modified by an isolated depth-first post-order traversal.\n\n   Post-order traversal visits children before root.\n   For example, traversal order of `(1 (2 3 (4 5) 6 (7 8)) 9)` is:\n\n   1. `1`\n   2. `2`\n   3. `3`\n   4. `4`\n   5. `5`\n   6. `(4 5)`\n   7. `6`\n   8. `7`\n   9. `8`\n   10. `(7 8)`\n   11. `(2 3 (4 5) 6 (7 8))`\n   12. `9`\n   13. `(1 (2 3 (4 5) 6 (7 8)) 9)`\n\n   Traversal starts at the current node in `zloc` and continues to the end of the isolated sub-tree.\n\n   Function `f` is called on the zipper locations satisfying predicate `p?` and must return either\n   - nil to indicate no changes\n   - or a valid zipper\n   WARNING: when function `f` changes the location in the zipper, normal traversal will be affected.\n\n   When `p?` is not specified `f` is called on all locations.\n\n   To walk all nodes, you\'ll want to walk from the root node.\n   You can do this by, for example, using [[of-string*]] instead of [[of-string]].\n\n   ```Clojure\n   (-\x3e (zip/of-string* "my clojure forms")\n       (zip/postwalk ...))\n   ```\n\n   See [docs on sub editing](/doc/01-user-guide.adoc#sub-editing).'],
null)],null),new $APP.h(null,3,[$APP.N,c3a,$APP.hu,function(a,b){return TX(a,NX,b)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,vY],null)),$APP.M,"Return `zloc` located to next node satisfying predicate `p?` else `nil`.\n   Search starts depth-first after the current node."],null)],null),new $APP.h(null,3,[$APP.N,Q6a,$APP.hu,function(a){return $APP.x.h(GX(a),$APP.tm)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Returns true if current node in `zloc` is a list."],
null)],null),new $APP.h(null,3,[$APP.N,c6a,$APP.hu,eZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.uJ],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,$APP.uJ],null)),$APP.M,"Return `zloc` located to the first node with tag `t` else `nil`.\n   Search starts at the current node and continues via movement function `f`.\n\n   `f` defaults to [[right]]"],null)],null),new $APP.h(null,3,[$APP.N,y1a,$APP.hu,function(a){var b=null==a?null:YW(a);return null==b?null:kZa(b,DX.g($APP.se(a)))},
$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Return s-expression (the Clojure forms) of children of current node in `zloc`.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances)."],null)],null),new $APP.h(null,3,[$APP.N,n1a,$APP.hu,ZY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],null),new $APP.H(null,2,5,$APP.I,[$APP.vJ,$APP.DH],null)),$APP.M,"Create and return zipper from all forms in Clojure/ClojureScript/EDN string `s`, and move to the first non-whitespace/non-comment child.\n\n  See [[of-string*]] for same but with no automatic move.\n\n  Optional `opts` can specify:\n  - `:track-position?` set to `true` to enable ones-based row/column tracking, see [docs on position tracking](/doc/01-user-guide.adoc#position-tracking).\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)"],
null)],null),new $APP.h(null,3,[$APP.N,$2a,$APP.hu,B0a,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Raw version of [[next]].\n\nReturns zipper with location at the next depth-first location in the hierarchy in `zloc`.\n  When reaching the end, returns a distinguished zipper detectable via [[end?]]. If already\n  at the end, stays there.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],null)],null),new $APP.h(null,
3,[$APP.N,h5a,$APP.hu,function(a){return v0a(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Returns `zloc` with namespaced map sexpr context to all symbols and keywords reapplied from current location downward.\n\n  Keywords and symbols:\n  * that are keys in a namespaced map will have namespaced map context applied\n  * otherwise will have any namespaced map context removed\n\n  You should only need to use this function if:\n  * you care about `sexpr` on keywords and symbols\n  * and you are moving keywords and symbols from a namespaced map to some other location."],
null)],null),new $APP.h(null,3,[$APP.N,N6a,$APP.hu,hY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Return zipper with location moved right to next non-whitespace/non-comment sibling of current node in `zloc`."],null)],null),new $APP.h(null,3,[$APP.N,P6a,$APP.hu,function(a){return IX(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"DEPRECATED. Renamed to [[string]]."],null)],null),new $APP.h(null,3,[$APP.N,p1a,$APP.hu,
bZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.Tz],null),new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Zip up and print `zloc` from root node.\n\n   NOTE: Optional `writer` is currently ignored for ClojureScript."],null)],null),new $APP.h(null,3,[$APP.N,C5a,$APP.hu,C0a,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.OC],null)),$APP.M,"Raw version of [[insert-right]].\n\nReturns zipper with node `item` inserted as the right sibling of the current node in `zloc`,\n  without moving location.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],
null)],null),new $APP.h(null,3,[$APP.N,X0a,$APP.hu,function(a){return gX(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Zips all the way up `zloc` and returns the root node, reflecting any changes."],null)],null),new $APP.h(null,3,[$APP.N,$3a,$APP.hu,$Y,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.vJ],null),new $APP.H(null,2,5,$APP.I,[$APP.vJ,$APP.DH],null)),$APP.M,"Create and return zipper from all forms in Clojure/ClojureScript/END string `s`, and do no automatic move.\n\n  See [[of-string]] for same but with automatic move to first interesting node.\n\n  Optional `opts` can specify:\n  - `:track-position?` set to `true` to enable ones-based row/column tracking, see [docs on position tracking](/doc/01-user-guide.adoc#position-tracking).\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)"],
null)],null),new $APP.h(null,3,[$APP.N,p2a,$APP.hu,function(a,b){a:for(var c=$X(b),d=LX(c);;){var e=d;e=$APP.k(e)?YW(d):e;if($APP.Cb(e))break a;e=a.g?a.g(d):a.call(null,d);$APP.k(e)?(c=e,d=JX(JX(c)),c=MX(c)):d=JX(JX(d))}return aY(b,c)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[$APP.fJ,sY],null)),$APP.M,"Returns `zloc` with function `f` applied to all key nodes of the current node.\n   Current node must be map node.\n\n  `zloc` location is unchanged.\n\n  `f` arg is zloc positioned at key node and should return:\n  - an updated zloc with zloc positioned at key node\n  - a falsey value to leave value node unchanged\n\n  Folks typically use [[rewrite-clj.zip/edit]] for `f`."],
null)],null),new $APP.h(null,3,[$APP.N,i3a,$APP.hu,hZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.wJ],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,$APP.wJ],null)),$APP.M,"Return `zloc` located to the next token node that `sexpr`esses to `v` else `nil`.\n   Search starts one movement `f` from the current location, and continues via `f`.\n\n   `v` can be a single value or a set. When `v` is a set matches on any value in set.\n\n   `f` defaults to [[right]] in short form call.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances)."],
null)],null),new $APP.h(null,3,[$APP.N,E3a,$APP.hu,aZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.Tz],null),new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Print current node in `zloc`.\n\n   NOTE: Optional `writer` is currently ignored for ClojureScript."],null)],null),new $APP.h(null,3,[$APP.N,Z3a,$APP.hu,function(a,b){return $APP.x.h(GX(b),$APP.vm)||ZX(b)?aY(b,o0a(a,$X(b))):n0a(a,b)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[$APP.fJ,sY],
null)),$APP.M,"Returns `zloc` with function `f` applied to all nodes of the current node.\n  Current node must be a sequence node. Equivalent to [[rewrite-clj.zip/map-vals]] for maps.\n\n  `zloc` location is unchanged.\n\n  `f` arg is zloc positioned at\n  - value nodes for maps\n  - each element of a seq\n  and is should return:\n  - an updated zloc with zloc positioned at edited node\n  - a falsey value to leave value node unchanged\n\n  Folks typically use [[edit]] for `f`."],null)],null),new $APP.h(null,
3,[$APP.N,$5a,$APP.hu,lZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.fJ],null),new $APP.H(null,3,5,$APP.I,[sY,vY,$APP.fJ],null)),$APP.M,'Return zipper modified by an isolated depth-first pre-order traversal.\n\n   Pre-order traversal visits root before children.\n   For example, traversal order of `(1 (2 3 (4 5) 6 (7 8)) 9)` is:\n\n   1. `(1 (2 3 (4 5) 6 (7 8)) 9)`\n   2. `1`\n   3. `(2 3 (4 5) 6 (7 8))`\n   4. `2`\n   5. `3`\n   6. `(4 5)`\n   7. `4`\n   8. `5`\n   9. `6`\n   10. `(7 8)`\n   11. `7`\n   12. `8`\n   13. `9`\n\n   Traversal starts at the current node in `zloc` and continues to the end of the isolated sub-tree.\n\n   Function `f` is called on the zipper locations satisfying predicate `p?` and must return either\n   - nil to indicate no changes\n   - or a valid zipper\n   WARNING: when function `f` changes the location in the zipper, normal traversal will be affected.\n\n   When `p?` is not specified `f` is called on all locations.\n\n   To walk all nodes, you\'ll want to walk from the root node.\n   You can do this by, for example, using [[of-string*]] instead of [[of-string]].\n\n   ```Clojure\n   (-\x3e (zip/of-string* "my clojure forms")\n       (zip/prewalk ...))\n   ```\n\n   See [docs on sub editing](/doc/01-user-guide.adoc#sub-editing).'],
null)],null),new $APP.h(null,3,[$APP.N,i5a,$APP.hu,function(a){return ZX(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Returns true if the current node in `zloc` is a namespaced map."],null)],null),new $APP.h(null,3,[$APP.N,k6a,$APP.hu,function(a){return iX(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Raw version of [[rightmost]].\n\nReturns zipper with location at the rightmost sibling of the current node in `zloc`, or self.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],
null)],null),new $APP.h(null,3,[$APP.N,x6a,$APP.hu,A0a,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Raw version of [[left]].\n\nReturns zipper with location at the left sibling of the current node in `zloc`, or nil.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],null)],null),new $APP.h(null,3,[$APP.N,f5a,$APP.hu,function(a){return YX(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,
[sY],null)),$APP.M,"Returns true if current node in `zloc` is a sequence."],null)],null),new $APP.h(null,3,[$APP.N,B3a,$APP.hu,function(a,b){return p0a(a,b)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.nJ],null)),$APP.M,"Returns `zloc` located to map key node's sexpr value matching `k` else `nil`.\n\n  `k` should be:\n  - a key for maps\n  - a zero-based index for sequences\n\n  NOTE: `k` will be compared against resolved keywords in maps.\n  See docs for sexpr behavior on [namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)."],
null)],null),new $APP.h(null,3,[$APP.N,N1a,$APP.hu,iZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,vY],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,vY],null)),$APP.M,"Return `zloc` located to the the first token node satisfying predicate `p?`.\n  Search starts at the current node and continues via movement function `f`.\n\n   `f` defaults to [[right]]"],null)],null),new $APP.h(null,3,[$APP.N,H1a,$APP.hu,qZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,
[sY],null),new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null)),$APP.M,"Return zipper with `n` newlines node inserted to the left of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],null)],null),new $APP.h(null,3,[$APP.N,$4a,$APP.hu,function(a){return $APP.x.h(GX(a),$APP.Gm)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Returns true if current node in `zloc` is a set."],null)],null),new $APP.h(null,3,[$APP.N,V2a,$APP.hu,XY,$APP.nb,
new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null)),$APP.M,"Create and return zipper from a rewrite-clj `node` (likely parsed by [[rewrite-clj.parser]]),\n  and move to the first non-whitespace/non-comment child. If node is not forms node, is wrapped in forms node\n  for a consistent root.\n  Optional `opts` can specify:\n  - `:track-position?` set to `true` to enable ones-based row/column tracking, see [docs on position tracking](/doc/01-user-guide.adoc#position-tracking).\n  - `:auto-resolve` specify a function to customize namespaced element auto-resolve behavior, see [docs on namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)"],
null)],null),new $APP.h(null,3,[$APP.N,P4a,$APP.hu,function(a){return yX(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Returns true when the current node in `zloc` is a linebreak."],null)],null),new $APP.h(null,3,[$APP.N,S4a,$APP.hu,function(a,b,c){var d=p0a(a,b);if($APP.k(d))b=MX(mX(d,IV(c)));else if($APP.x.h(GX(a),$APP.vm)||ZX(a))b=m0a(m0a($X(a),b),c);else throw $APP.Yl.h(["index out of bounds: ",$APP.m.g(b)].join(""),$APP.Xf);return aY(a,b)},$APP.nb,
new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,3,5,$APP.I,[sY,$APP.nJ,$APP.wJ],null)),$APP.M,"Returns `zloc` with current node's `k` set to value `v`.\n\n  `zloc` location is unchanged.\n\n  `k` should be:\n  - a key for maps\n  - a zero-based index for sequences, an exception is thrown if index is out of bounds\n\n  NOTE: `k` will be compared against resolved keywords in maps.\n  See docs for sexpr behavior on [namespaced elements](/doc/01-user-guide.adoc#namespaced-elements)."],null)],null),new $APP.h(null,
3,[$APP.N,U2a,$APP.hu,function(a){return X_a(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Return zipper with location moved to the leftmost non-whitespace/non-comment sibling of current node in `zloc`."],null)],null),new $APP.h(null,3,[$APP.N,U3a,$APP.hu,function(a){return eX(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Raw version of [[up]].\n\nReturns zipper with the location at the parent of current node in `zloc`, or nil if at\n  the top.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],
null)],null),new $APP.h(null,3,[$APP.N,Z2a,$APP.hu,function(a){return LX(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Return zipper with location moved down to the first non-whitespace/non-comment child node of the current node in `zloc`, or nil if no applicable children."],null)],null),new $APP.h(null,3,[$APP.N,$1a,$APP.hu,gY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Return zipper with location moved left to next non-whitespace/non-comment sibling of current node in `zloc`."],
null)],null),new $APP.h(null,3,[$APP.N,j3a,$APP.hu,function(a,b,c){return N_a(a,b,c)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,3,5,$APP.I,[$APP.fJ,vY,sY],null)),$APP.M,"Return zipper with location moved to first location not satisfying predicate `p?` starting from the node in\n   `zloc` and traversing by function `f`."],null)],null),new $APP.h(null,3,[$APP.N,z3a,$APP.hu,function(a,b){b=b.g?b.g(a):b.call(null,a);a=$APP.wf($APP.ej.h($APP.qq.h($APP.be,p_a),$APP.Ni.h(eX,$APP.Ng(eX,a))));
b=EX(gX(b),DX.g($APP.se(b)));return $APP.af.j(q0a,b,a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.fJ],null)),$APP.M,"Return zipper applying function `f` to `zloc`. The resulting\n   zipper will be located at the same path (i.e. the same number of\n   downwards and right movements from the root) incoming `zloc`.\n\n   See also [[subedit-node]] for an isolated edit."],null)],null),new $APP.h(null,3,[$APP.N,v1a,$APP.hu,x0a,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,
2,5,$APP.I,[sY,$APP.OC],null)),$APP.M,"Return zipper with `item` inserted as the first child of the current node in `zloc`, without moving location.\n  Will insert a space if necessary.\n  If `item` is not already a node, an attempt will be made to coerce it to one.\n\n  Use [[insert-child*]] to insert without adding any whitespace."],null)],null),new $APP.h(null,3,[$APP.N,D5a,$APP.hu,y0a,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.OC],null)),$APP.M,"Return zipper with `item` inserted as the last child of the current node in `zloc`, without moving.\n  Will insert a space if necessary.\n  If `item` is not already a node, an attempt will be made to coerce it to one.\n\n  Use [[append-child*]] to append without adding any whitespace."],
null)],null),new $APP.h(null,3,[$APP.N,Q4a,$APP.hu,nZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null),new $APP.H(null,2,5,$APP.I,[$APP.fJ,sY],null)),$APP.M,"Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc`\n   and traversing by function `f`.\n\n   `f` defaults to [[right]]"],null)],null),new $APP.h(null,3,[$APP.N,l2a,$APP.hu,D0a,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.OC],
null)),$APP.M,"Raw version of [[append-child]].\n\nReturns zipper with node `item` inserted as the rightmost child of the current node in `zloc`,\n  without moving.\n\nNOTE: This function does no coercion, does not skip, nor provide any special handling for whitespace/comment nodes."],null)],null),new $APP.h(null,3,[$APP.N,K2a,$APP.hu,function(a){return n_a(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Returns the ones-based `[row col]` of the start of the current node in `zloc`.\n\n  Throws if `zloc` was not created with [position tracking](/doc/01-user-guide.adoc#position-tracking)."],
null)],null),new $APP.h(null,3,[$APP.N,V1a,$APP.hu,dY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Return zipper with the children of the current node in `zloc` merged into itself.\n   (akin to Clojure's `unquote-splicing` macro: `~@...`).\n   - if the node is not one that can have children, no modification will\n     be performed.\n   - if the node has no or only whitespace children, it will be removed.\n   - otherwise, splicing will be performed, moving the zipper to the first\n     non-whitespace spliced child node.\n\n  For example, given `[[1 2 3] 4 5 6]`, if zloc is located at vector `[1 2 3]`, a splice will result in raising the vector's children up `[1 2 3 4 5 6]` and locating the zipper at node `1`."],
null)],null),new $APP.h(null,3,[$APP.N,i1a,$APP.hu,jZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,vY],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,vY],null)),$APP.M,"Return `zloc` located to the next token node satisfying predicate `p?` else `nil`.\n  Search starts one movement `f` after the current node and continues via `f`.\n\n   `f` defaults to [[right]]"],null)],null),new $APP.h(null,3,[$APP.N,v5a,$APP.hu,kZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,
2,5,$APP.I,[sY,$APP.wG],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.wG,vY],null)),$APP.M,"Return `zloc` located to the last node spanning position `pos` that satisfies predicate `p?` else `nil`.\n   Search is depth-first from the current node.\n\n  NOTE: Does not ignore whitespace/comment nodes."],null)],null),new $APP.h(null,3,[$APP.N,x5a,$APP.hu,function(a){return S_a(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"DEPRECATED. Renamed to [[root-string]]."],
null)],null),new $APP.h(null,3,[$APP.N,O5a,$APP.hu,function(a){return PX(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Return zipper with location moved to the rightmost non-whitespace/non-comment sibling of current node in `zloc`."],null)],null),new $APP.h(null,3,[$APP.N,Z4a,$APP.hu,YY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[$APP.DE],null),new $APP.H(null,2,5,$APP.I,[$APP.DE,$APP.DH],null)),$APP.M,"DEPRECATED. Renamed to [[of-node]]."],
null)],null),new $APP.h(null,3,[$APP.N,W4a,$APP.hu,fZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.uJ],null),new $APP.H(null,3,5,$APP.I,[sY,$APP.fJ,$APP.uJ],null)),$APP.M,"Return `zloc` located to the next node with tag `t` else `nil`.\n  Search starts one movement `f` after the current node and continues via `f`.\n\n   `f` defaults to [[right]]"],null)],null),new $APP.h(null,3,[$APP.N,H3a,$APP.hu,iY,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,
[sY],null)),$APP.M,"Raw version of [[right]].\n\nReturns zipper with location at the right sibling of the current node in `zloc`, or nil.\n\nNOTE: This function does not skip, nor provide any special handling for whitespace/comment nodes."],null)],null),new $APP.h(null,3,[$APP.N,n4a,$APP.hu,function(a){return zX(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Returns true when current node in `zloc` is whitespace or a comment."],null)],null),new $APP.h(null,
3,[$APP.N,Y3a,$APP.hu,function(a){return RX(a)},$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"Return `zloc` with current node removed. Returned zipper location\n   is moved to the first non-whitespace node preceding removed node in a depth-first walk.\n   Removes whitespace appropriately.\n\n  - `[1 |2  3]    \x3d\x3e [|1 3]`\n  - `[1 |2]       \x3d\x3e [|1]`\n  - `[|1 2]       \x3d\x3e |[2]`\n  - `[|1]         \x3d\x3e |[]`\n  - `[  |1  ]     \x3d\x3e |[]`\n  - `[1 [2 3] |4] \x3d\x3e [1 [2 |3]]`\n  - `[|1 [2 3] 4] \x3d\x3e |[[2 3] 4]`\n\n   If the removed node is a rightmost sibling, both leading and trailing whitespace\n   is removed, otherwise only trailing whitespace is removed.\n\n   The result is that a following element (no matter whether it is on the same line\n   or not) will end up at same positon (line/column) as the removed one.\n   If a comment lies betwen the original node and the neighbour this will not hold true.\n\n   If the removed node is at end of input and is trailed by 1 or more newlines,\n   a single trailing newline will be preserved.\n\n   Use [[remove*]] to remove node without removing any surrounding whitespace."],
null)],null),new $APP.h(null,3,[$APP.N,x4a,$APP.hu,vZ,$APP.nb,new $APP.h(null,2,[$APP.V,$APP.J(new $APP.H(null,2,5,$APP.I,[sY,$APP.oJ],null),new $APP.H(null,1,5,$APP.I,[sY],null)),$APP.M,"DEPRECATED: renamed to [[insert-newline-right]]."],null)],null)]),W6a);$APP.Wu(new $APP.h(null,1,[$APP.Iq,new $APP.h(null,4,[$APP.YAa,X6a,$APP.OA,Y6a,$APP.hva,Z6a,$APP.WCa,$6a],null)],null));